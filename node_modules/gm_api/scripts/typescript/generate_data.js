const _ = require('lodash')

function gList(contents, list, name) {
  contents.push(`export const list_${name}: Enum_List_Item[] = [`)
  _.each(list, (v) => {
    contents.push(
      `  { value: ${v.value}, text: getLocale('${name}__${v.text}') },`,
    )
  })
  contents.push(']')
}

function gMap(contents, list, name) {
  contents.push(`export const map_${name}: Enum_Map = {`)
  _.each(list, (v) => {
    contents.push(`  ${v.value}: getLocale('${name}__${v.text}'),`)
  })
  contents.push('}')
}

function gEnum(contents, info, name) {
  const list = []

  _.forIn(info.values, (v, k) => {
    if (v !== 0) {
      list.push({ value: v, text: k })
    }
  })

  gList(contents, list, name)
  gMap(contents, list, name)
}

function generateData(protoNested) {
  const contents = [
    `
interface Enum_List_Item {
  text: string
  value: any
}

interface Enum_Map {
  [key: string]: string
}`,
  ]
  _.forIn(protoNested, (v, k) => {
    if (v.nested) {
      _.forIn(v.nested, (vv, kk) => {
        if (vv.values) {
          gEnum(contents, vv, `${k}_${kk}`)
        }
      })
    }

    if (v.values) {
      gEnum(contents, v, k)
    }
  })

  return contents.join('\n')
}

module.exports = generateData
