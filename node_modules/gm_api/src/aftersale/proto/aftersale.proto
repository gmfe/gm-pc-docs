syntax = "proto3";

package ceres.aftersale;

option go_package = "code.guanmai.cn/back_end/ceres/aftersale/proto;proto";

import "./common/proto/common.proto";
import "./google/api/annotations.proto";
import "./include/protoc-gen-validate/validate.proto";
import "./include/protoc-gen-setter/setter.proto";
import "./cmd/protoc-gen-dao/proto/dao.proto";
import "./enterprise/proto/enterprise.proto";
import "./order/proto/order.proto";
import "./merchandise/proto/merchandise.proto";

/////////////////////////////////////////////////////////数据模型定义/////////////////////////////////////////////////////////////////

// 售后明细 数据模型 model
message AfterSaleOrderDetail {
    option (dao.partition_count) = 100;                          // 分表数量
    option (dao.model_type)      = TYPE_AFTER_SALE_ORDER_DETAIL; // 模型类型

    // 售后明细类型枚举
    enum Type {
        TYPE_UNSPECIFIED   = 0; // 未指定类型
        TYPE_ORDER         = 1; // 仅订单异常，并不是商品异常， 产品解释是说 可能是没准时到货等情况
        TYPE_REFUND        = 2; // 仅退款
        TYPE_REFUND_RETURN = 3; // 退货退款
    }

    // 售后原因枚举
    enum Reason {
        REASON_UNSPECIFIED                = 0;  // 未指定的原因
        REASON_NOT_DELIVERED_ON_TIME      = 1;  // 未按时送达
        REASON_MISSED_ORDERS              = 2;  // 漏单
        REASON_SEND_THE_WRONG_ITEM        = 3;  // 送错货品
        REASON_WRONG_ORDER                = 4;  // 下错单
        REASON_WEIGHT_WRONG               = 5;  // 斤两不对（用户发现）
        REASON_QUALITY_ISSUES             = 6;  // 质量问题
        REASON_SPECIFICATION_ISSUE        = 7;  // 规格问题
        REASON_DRIVER_LOST_OR_BROKEN      = 8;  // 司机弄丢/弄坏
        REASON_OUT_OF_STOCK_IN_THE_MARKET = 9;  // 市场缺货（未出库）
        REASON_SYSTEM_PROBLEMS            = 10; // 系统问题
        REASON_PROCUREMENT_ISSUES         = 11; // 采购问题
        REASON_UNDELIVERABLE              = 12; // 无法送达
        REASON_OTHER                      = 13; // 其他
    }

    // 售后方式
    enum Method {
        METHOD_UNSPECIFIED          = 0; // 未指定方式
        METHOD_GOODS_REDUCTION      = 1; // 货品减免
        METHOD_REPLENISHMENT        = 2; // 补货
        METHOD_EXCHANGE             = 3; // 换货
        METHOD_BILLING              = 4; // 核算账单
        METHOD_CUSTOMER_COMMUNICATE = 5; // 客户沟通
        METHOD_METHOD_OTHER         = 6; // 其他
    }

    // 取货任务状态
    enum TaskStatus {
        TASK_STATUS_UNSPECIFIED = 0; // 未指定的状态
        TASK_STATUS_UNDONE      = 1; // 未完成
        TASK_STATUS_DONE        = 2; // 已完成
    }
    // 取货任务处理方式枚举
    enum TaskMethod {
        TASK_METHOD_UNSPECIFIED    = 0; // 未指定方式
        TASK_METHOD_PICK_UP        = 1; // 取货
        TASK_METHOD_GIVE_UP_PICKUP = 2; // 放弃取货
    }

    // @inject_tag: gorm:"PRIMARY_KEY"
    uint64                   after_sale_order_detail_id = 1;                                                 // 售后明细 ID
    uint64                   revision                   = 3;                                                 // 版本
    uint64                   create_time                = 4;                                                 // 创建时间
    uint64                   update_time                = 5;                                                 // 修改时间
    uint64                   delete_time                = 6;                                                 // 删除时间，非0表示已删除
    uint64                   group_id                   = 10;                                                // 加盟商 ID
    uint64                   station_id                 = 11;                                                // 站点ID
    uint64                   supplier_id                = 12;                                                // 供应商 ID
    uint64                   after_sale_order_id        = 13;                                                // 售后 ID
    uint64                   order_detail_id            = 14;                                                // 订单详情 ID 用于标识是订单中的 SKU
    uint64                   driver_id                  = 15;                                                // 司机 ID
    uint64                   last_operator_id           = 16;                                                // 最后操作者 对应 用户 ID
    Type                     type                       = 20 [ (validate.rules).message = {required: true} ]; // 售后明细类型
    merchandise.UnitValueSet apply_return_value         = 21;                                                // 申请退货数量 与 申请退款单价
    // @inject_tag: type:"Decimal(18,8)"
    string                   apply_return_amount = 22 [ (validate.rules).string = {pattern : "^\\d*\\.?\\d*$"}, (setter.include) = true ]; // 申请退款金额
    merchandise.UnitValueSet real_return_value   = 23;                                                                                     // 实际退款数量 与 实际退款单价
    // @inject_tag: type:"Decimal(18,8)"
    string     real_return_amount    = 24 [ (validate.rules).string = {pattern : "^\\d*\\.?\\d*$"}, (setter.include) = true ]; // 实际退款金额
    Reason     reason                = 25;                                                                                     // 售后原因
    Method     method                = 26;                                                                                     // 售后方式
    string     department_blame_name = 27;                                                                                     // 责任部门
    string     department_to_name    = 28;                                                                                     // 跟进部门
    string     remark                = 29;                                                                                     // 备注
    TaskStatus task_status           = 30;                                                                                     // 任务状态
    TaskMethod task_method           = 32;                                                                                     // 处理方式
}

// 售后单 数据模型 model
message AfterSaleOrder {
    option (dao.partition_count) = 100;                   // 分表数量
    option (dao.model_type)      = TYPE_AFTER_SALE_ORDER; // 模型类型
    option (dao.sn_type)         = TYPE_AFTER_SALE_ORDER; // 序列号配置类型
    // 售后单状态
    // 所有异常商品都完成，就把这个已提交状态的订单标记为已完成，不在查询时判断已提交的任务是否已完成以此提高查询效率
    enum Status {
        STATUS_UNSPECIFIED = 0; // 未指定的状态
        STATUS_TO_SUBMIT   = 1; // 待提交
        STATUS_SUBMITTED   = 2; // 已提交 存在未完成
        STATUS_COMPLETED   = 3; // 已完成
        STATUS_DELETED     = 4; // 已删除
    }
    // 售后订单明细列表
    message AfterSaleOrderDetails {
        repeated AfterSaleOrderDetail after_sale_order_details = 1; // 售后订单明细列表
    }
    // @inject_tag: gorm:"PRIMARY_KEY"
    uint64 after_sale_order_id = 1;                                                   // 售后单 ID
    Status status              = 2 [ (validate.rules).message = {required: true} ]; // 售后单状态
    uint64 revision            = 3;                                                   // 版本
    uint64 create_time         = 4;                                                   // 创建时间
    uint64 update_time         = 5;                                                   // 修改时间
    uint64 delete_time         = 6;                                                   // 删除时间，非0表示已删除
    uint64 group_id            = 10;                                                  // 加盟商 ID
    uint64 station_id          = 11;                                                  // 站点 ID
    uint64 creator_id          = 12;                                                  // 创建者 对应 用户 ID
    uint64 order_id            = 13;                                                  // 订单 ID
    // @inject_tag: gorm:"INDEX:after_sale_no"
    string serial_no            = 20 [ (setter.include) = true ]; // 售后单号 格式: SHD+建单日期+5位自增号
    string remark               = 21;                             // 单据备注
    uint32 all_detail_num       = 22;                             // 所有售后详情数量
    uint32 completed_detail_num = 23;                             // 已完成售后详情数量

    // @inject_tag: gorm:"-"
    AfterSaleOrderDetails after_sale_order_details = 24; // 售后订单明细列表 不存库
}

/////////////////////////////////////////////////////////服务及消息体定义/////////////////////////////////////////////////////////////////

// 售后服务
service AfterSaleService {

    /*-------------------------------------------------服务端 API -------------------------------------------------*/
    // 暂无

    /*-------------------------------------------------客户端 API -------------------------------------------------*/
    /*===订单及订单商品售后相关===*/

    // 创建售后订单
    rpc CreateAfterSaleOrder(CreateAfterSaleOrderRequest) returns (CreateAfterSaleOrderResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/CreateAfterSaleOrder"
        };
    }

    // 列出(搜索符合)售后订单
    rpc ListAfterSaleOrder(ListAfterSaleOrderRequest) returns (ListAfterSaleOrderResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ListAfterSaleOrder"
        };
    }

    // 导出售后订单
    rpc ExportAfterSaleOrder(ExportAfterSaleOrderRequest) returns (ExportAfterSaleOrderResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ExportAfterSaleOrder"
        };
    }

    // 获取指定售后订单
    rpc GetAfterSaleOrder(GetAfterSaleOrderRequest) returns (GetAfterSaleOrderResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/GetAfterSaleOrder"
        };
    }

    // 对售后订单进行操作(走流程)
    rpc UpdateAfterSaleOrder(UpdateAfterSaleOrderRequest) returns (UpdateAfterSaleOrderResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/UpdateAfterSaleOrder"
        };
    }

    // 删除售后单
    rpc DeleteAfterSaleOrder(DeleteAfterSaleOrderRequest) returns (DeleteAfterSaleOrderResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/DeleteAfterSaleOrder"
        };
    }

    // 列出取货任务
    rpc ListAfterSaleOrderTask(ListAfterSaleOrderTaskRequest) returns (ListAfterSaleOrderTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ListAfterSaleOrderTask"
        };
    }

    // 导出取货任务
    rpc ExportAfterSaleOrderTask(ExportAfterSaleOrderTaskRequest) returns (ExportAfterSaleOrderTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ExportAfterSaleOrderTask"
        };
    }

    // 更新取货任务
    rpc UpdateAfterSaleOrderTask(UpdateAfterSaleOrderTaskRequest) returns (UpdateAfterSaleOrderTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/UpdateAfterSaleOrderTask"
        };
    }

    // 批量更新取货任务处理方式
    rpc BatchUpdateAfterSaleOrderTaskMethod(BatchUpdateAfterSaleOrderTaskMethodRequest) returns (BatchUpdateAfterSaleOrderTaskMethodResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/BatchUpdateAfterSaleOrderTaskMethod"
        };
    }

    // 批量完成售后订单取货任务
    rpc BatchCompleteAfterSaleOrderTask(BatchCompleteAfterSaleOrderTaskRequest) returns (BatchCompleteAfterSaleOrderTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/BatchCompleteAfterSaleOrderTask"
        };
    }

    // 批量修改售后订单司机
    rpc BatchUpdateAfterSaleOrderTaskDriver(BatchUpdateAfterSaleOrderTaskDriverRequest) returns (BatchUpdateAfterSaleOrderTaskDriverResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/BatchUpdateAfterSaleOrderTaskDriver"
        };
    }

    // 列出订单售后分析报表
    rpc ListAfterSaleOrderSheet(ListAfterSaleOrderSheetRequest) returns (ListAfterSaleOrderSheetResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ListAfterSaleOrderSheet"
        };
    }

    // 导出售后分析报表
    rpc ExportAfterSaleOrderSheet(ExportAfterSaleOrderSheetRequest) returns (ExportAfterSaleOrderSheetResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ExportAfterSaleOrderSheet"
        };
    }

    // 列出订单售后明细(商品)报表
    rpc ListAfterSaleOrderDetailSheet(ListAfterSaleOrderDetailSheetRequest) returns (ListAfterSaleOrderDetailSheetResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ListAfterSaleOrderDetailSheet"
        };
    }

    // 导出订单售后明细(商品)报表
    rpc ExportAfterSaleOrderDetailSheet(ExportAfterSaleOrderDetailSheetRequest) returns (ExportAfterSaleOrderDetailSheetResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/ExportAfterSaleOrderDetailSheet"
        };
    }

    // 通过售后单ID 获取售后详情
    rpc GetAfterSaleOrderDetail(GetAfterSaleOrderDetailRequest) returns (GetAfterSaleOrderDetailResponse) {
        option (google.api.http) = {
            post : "/ceres/aftersale/AfterSaleService/GetAfterSaleOrderDetail"
        };
    }
}

enum TimeType {
    TIME_TYPE_UNSPECIFIED       = 0; // 未指定时间类型
    TIME_TYPE_CREATE_AFTER_SALE = 1; // 按建单时间 （创建售后单）
    TIME_TYPE_PLACE_ORDER       = 2; // 按下单时间
    TIME_TYPE_RECEIVE_GOODS     = 3; // 按收货时间
}

// 响应商品订单售后主体信息同时响应的相关信息
message AfterSaleOrderRelationInfo {
    order.OrderRelationInfoResponse relation_info = 1; // 订单相关信息
    map<uint64, order.Order>        orders        = 2; // 订单 map
}

// // 响应商品订单售后主体信息同时响应的相关信息
// message AfterSaleOrderRelationInfo {
//     map<uint64, order.Order>                            orders          = 1;  // 订单 map
//     map<uint64, enterprise.CustomerLabel>               customer_labels = 2;  // 商户标签 map
//     map<uint64, delivery.Driver>                        drivers         = 3;  // 司机 map
//     map<uint64, enterprise.Customer>                    customers       = 4;  // 商户 map
//     map<uint64, merchandise.Quotation>                  quotations      = 5;  // 报价单 map
//     map<uint64, merchandise.GetManySkuResponse.SkuInfo> skus            = 6;  // SKU map
//     map<uint64, enterprise.GroupUser>                   group_users     = 7;  // 内部员工用户 map
//     map<uint64, enterprise.CustomerUser>                customer_users  = 8;  // 商户员工 map
//     map<uint64, delivery.Route>                         routes          = 9;  // 路线 map
//     map<uint64, enterprise.Supplier>                    suppliers       = 10; // 供应商 map
// }

// 创建售后订单请求信息体
message CreateAfterSaleOrderRequest {
    AfterSaleOrder after_sale_order = 1; // 售后订单
}

// 创建售订后单响应信息体
message CreateAfterSaleOrderResponse {
    AfterSaleOrder after_sale_order = 1; // 售后订单
}

// 列出售后订单请求信息体
message ListAfterSaleOrderRequest {
    TimeType              time_type         = 1 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64                begin_time        = 2 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64                end_time          = 3 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string                q                 = 4;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64                quotation_id      = 5;                                                // 报价单ID
    enterprise.Address    address           = 6;                                                // 地址标签
    order.Order.State     order_state       = 7;                                                // 订单状态
    uint64                driver_id         = 8;                                                // 司机 ID
    uint64                customer_label_id = 9;                                                // 商户标签 ID
    AfterSaleOrder.Status status            = 10;                                               // 商户标签 ID
    common.PagingParams   paging            = 11 [ (validate.rules).message.required = true ];  // 分页信息
}

// 列出售后订单响应结构体
message ListAfterSaleOrderResponse {
    repeated AfterSaleOrder    after_sale_orders = 1; // 售后订单列表
    AfterSaleOrderRelationInfo relation_info     = 2; // 订单相关信息
    common.PagingResult        paging            = 4; // 分页信息
}

// 获取售后订单请求信息体
message GetAfterSaleOrderRequest {
    uint64 after_sale_order_id = 1 [ (validate.rules).uint64.gt = 0 ]; // 订单售后 ID
}

// 获取售后订单响应信息体
message GetAfterSaleOrderResponse {
    AfterSaleOrder after_sale_order = 1; // 售后订单
}

// 对售后订单进行操作(走流程) 请求信息体
message UpdateAfterSaleOrderRequest {
    AfterSaleOrder after_sale_order = 1; // 售后订单
}

// 对售后订单进行操作(走流程) 响应信息体
message UpdateAfterSaleOrderResponse {
    AfterSaleOrder after_sale_order = 1; // 售后订单
}

// 删除售后订单 请求信息体
message DeleteAfterSaleOrderRequest {
    uint64 after_sale_order_id = 1 [ (validate.rules).uint64.gt = 0 ]; // 售后订单 ID
}

// 删除售后订单 响应信息体
message DeleteAfterSaleOrderResponse {
    AfterSaleOrder after_sale_order = 1; // 售后订单
}

// 导出售后订单请求
message ExportAfterSaleOrderRequest {
    TimeType           time_type         = 1 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64             begin_time        = 2 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64             end_time          = 3 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string             q                 = 4;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64             quotation_id      = 5;                                                // 报价单ID
    enterprise.Address address           = 6;                                                // 地址标签
    order.Order.State  state             = 7;                                                // 订单状态
    uint64             driver_id         = 8;                                                // 司机 ID
    uint64             customer_label_id = 9;                                                // 商户标签 ID
}

// 导出售后订单响应
message ExportAfterSaleOrderResponse {
    uint64 task_id = 1; // 异步任务信息
}

// 列出取货任务请求信息体
message ListAfterSaleOrderTaskRequest {
    TimeType                        time_type     = 1 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64                          begin_time    = 2 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64                          end_time      = 3 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string                          q             = 4;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64                          category_id_1 = 5;                                                // 一级分类 ID
    uint64                          category_id_2 = 6;                                                // 二级分类 ID
    uint64                          driver_id     = 7;                                                // 司机 ID
    uint64                          route_id      = 8;                                                // 路线ID
    common.PagingParams             paging        = 9 [ (validate.rules).message.required = true ];   // 分页信息
    AfterSaleOrderDetail.TaskStatus status        = 10;                                               // 取货任务状态
}

// 列出取货任务响应信息体
message ListAfterSaleOrderTaskResponse {
    AfterSaleOrder.AfterSaleOrderDetails tasks         = 1; // 取货任务列表
    common.PagingResult                  paging        = 2; // 分页信息
    AfterSaleOrderRelationInfo           relation_info = 3; // 售后订单相关信息
}

// 导出取货任务请求信息体
message ExportAfterSaleOrderTaskRequest {
    TimeType time_type     = 1 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64   begin_time    = 2 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64   end_time      = 3 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string   q             = 4;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64   category_id_1 = 5;                                                // 一级分类 ID
    uint64   category_id_2 = 6;                                                // 二级分类 ID
    uint64   driver_id     = 7;                                                // 司机 ID
    uint64   route_id      = 8;                                                // 路线ID
}

// 导出取货任务响应信息体
message ExportAfterSaleOrderTaskResponse {
    uint64 task_id = 1; // 异步任务信息
}

// 更新取货任务请求信息体
message UpdateAfterSaleOrderTaskRequest {
    AfterSaleOrderDetail task = 1 [ (validate.rules).message.required = true ]; // 修改后的售后订单任务信息
}

// 更新取货任务响应信息体
message UpdateAfterSaleOrderTaskResponse {
    AfterSaleOrderDetail task = 1 [ (validate.rules).message.required = true ]; // 修改后的售后订单任务信息
}

// 批量更新取货任务处理方式请求信息体
message BatchUpdateAfterSaleOrderTaskMethodRequest {
    repeated uint64                 task_ids = 1 [ (validate.rules).repeated = {min_items : 1} ]; // 售后订单任务ID列表
    AfterSaleOrderDetail.TaskMethod method   = 2 [ (validate.rules).message = {required: true} ];     // 修改后的订单任务处理方式
}

// 批量更新取货任务处理方式响应信息体
message BatchUpdateAfterSaleOrderTaskMethodResponse {
    AfterSaleOrder.AfterSaleOrderDetails tasks = 1; // 取货任务列表
}

// 批量完成售后订单取货任务请求信息体
message BatchCompleteAfterSaleOrderTaskRequest {
    repeated uint64 task_ids = 1 [ (validate.rules).repeated = {min_items : 1} ]; // 任务ID列表
}

// 批量完成售后订单取货任务响应信息体
message BatchCompleteAfterSaleOrderTaskResponse {
    AfterSaleOrder.AfterSaleOrderDetails tasks = 1; // 取货任务列表
}

// 批量修改售后订单司机请求信息体
message BatchUpdateAfterSaleOrderTaskDriverRequest {
    repeated uint64 task_ids  = 1 [ (validate.rules).repeated = {min_items : 1} ]; // 售后订单任务ID列表
    uint64          driver_id = 2 [ (validate.rules).uint64.gt = 0 ];              // 司机ID
}

// 批量修改售后订单司机响应信息体
message BatchUpdateAfterSaleOrderTaskDriverResponse {
    AfterSaleOrder.AfterSaleOrderDetails tasks = 1; // 取货任务列表
}

// 列出订单售后分析报表请求信息体
message ListAfterSaleOrderSheetRequest {
    TimeType            time_type         = 1 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64              begin_time        = 2 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64              end_time          = 3 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string              q                 = 4;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64              customer_label_id = 5;                                                // 商户标签 ID
    uint64              quotation_id      = 6;                                                // 报价单ID
    common.PagingParams paging            = 7 [ (validate.rules).message.required = true ];   // 分页信息
}

// 列出订单售后分析报表响应信息体
message ListAfterSaleOrderSheetResponse {
    // 排行榜
    message Rank {
        uint32 rank        = 1; // 排序 升序
        uint64 customer_id = 2; // 商户ID
        string count       = 3; // 数量
    }
    // 趋势
    message Trend {
        uint64 date  = 1; // 日期时间戳
        string count = 2; // 数量
    }
    uint32                               order_num            = 1;  // 售后订单数
    uint32                               sku_num              = 2;  // 售后商品数
    string                               should_refund_amount = 3;  // 应退金额
    string                               real_refund_amount   = 4;  // 实退金额
    repeated Rank                        order_num_rank_list  = 5;  // 订单数排行
    repeated Rank                        amount_rank_list     = 6;  // 售后金额排行
    repeated Trend                       amount_trend_list    = 7;  // 金额趋势列表
    repeated Trend                       order_num_trend_list = 8;  // 售后订单数趋势列表
    AfterSaleOrder.AfterSaleOrderDetails details              = 9;  // 明细列表
    order.OrderRelationInfoResponse      relation_info        = 10; // 售后订单相关信息
    common.PagingResult                  paging               = 11; // 分页信息
}

// 导出售后分析报表请求信息体
message ExportAfterSaleOrderSheetRequest {
    TimeType time_type         = 1 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64   begin_time        = 2 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64   end_time          = 3 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string   q                 = 4;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64   customer_label_id = 5;                                                // 商户标签 ID
    uint64   quotation_id      = 6;                                                // 报价单ID
}

// 导出售后分析报表响应信息体
message ExportAfterSaleOrderSheetResponse {
    uint64 task_id = 1; // 异步任务信息
}

// 列出订单售后明细(商品)报表请求信息体
message ListAfterSaleOrderDetailSheetRequest {
    AfterSaleOrderDetail.Type type              = 1 [ (validate.rules).message = {required: true} ]; // 售后明细类型
    TimeType                  time_type         = 2 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64                    begin_time        = 3 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64                    end_time          = 4 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string                    q                 = 5;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64                    customer_label_id = 6;                                                // 商户标签 ID
    uint64                    quotation_id      = 7;                                                // 报价单ID
    uint64                    category_id_1     = 8;                                                // 一级分类 ID
    uint64                    category_id_2     = 9;                                                // 二级分类 ID
    uint64                    spu_id            = 10;                                               // 品类ID
    common.PagingParams       paging            = 11 [ (validate.rules).message.required = true ];  // 分页信息
}

// 列出订单售后明细(商品)报表响应信息体
message ListAfterSaleOrderDetailSheetResponse {
    // 排行榜
    message Rank {
        uint32 rank   = 1; // 排序 升序
        uint64 sku_id = 2; // 商品ID
        string count  = 3; // 数量
    }
    string                               sku_num          = 1; // 商品数
    string                               amount           = 2; // 金额
    uint32                               sku_kind_num     = 3; // 商品种类数
    repeated Rank                        num_rank_list    = 4; // 数量排行
    repeated Rank                        amount_rank_list = 5; // 金额排行
    AfterSaleOrder.AfterSaleOrderDetails details          = 6; // 明细列表
    AfterSaleOrderRelationInfo           relation_info    = 7; // 售后订单相关信息
    common.PagingResult                  paging           = 8; // 分页信息
}

// 导出订单售后明细(商品)报表请求信息体
message ExportAfterSaleOrderDetailSheetRequest {
    AfterSaleOrderDetail.Type type              = 1 [ (validate.rules).message = {required: true} ]; // 售后明细类型
    TimeType                  time_type         = 2 [ (validate.rules).message = {required: true} ]; // 时间类型
    uint64                    begin_time        = 3 [ (validate.rules).uint64.gt = 0 ];             // 开始时间戳
    uint64                    end_time          = 4 [ (validate.rules).uint64.gt = 0 ];             // 结束时间戳
    string                    q                 = 5;                                                // 搜索内容 （售后单号、订单号、账户号、商户号）
    uint64                    customer_label_id = 6;                                                // 商户标签 ID
    uint64                    quotation_id      = 7;                                                // 报价单ID
    uint64                    category_id_1     = 8;                                                // 一级分类 ID
    uint64                    category_id_2     = 9;                                                // 二级分类 ID
    uint64                    spu_id            = 10;                                               // 品类ID
}

// 导出订单售后明细(商品)报表响应信息体
message ExportAfterSaleOrderDetailSheetResponse {
    uint64 task_id = 1; // 异步任务信息
}

// 通过售后单ID 获取售后详情请求信息
message GetAfterSaleOrderDetailRequest {
    uint64 after_sale_order_id = 1 [ (validate.rules).uint64.gt = 0 ]; // 订单售后 ID
}

// 通过售后单ID 获取售后详情响应信息
message GetAfterSaleOrderDetailResponse {
    AfterSaleOrder.AfterSaleOrderDetails details       = 1; // 明细列表
    AfterSaleOrderRelationInfo           relation_info = 2; // 售后订单相关信息
}
