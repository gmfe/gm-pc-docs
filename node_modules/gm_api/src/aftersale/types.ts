import * as common from '../common'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as enterprise from '../enterprise'
import * as account from '../account'
import * as order from '../order'
import * as merchandise from '../merchandise'
import * as asynctask from '../asynctask'
import * as oauth from '../oauth'
import * as inventory from '../inventory'
import * as preference from '../preference'
export enum AfterSaleOrderDetail_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_ORDER = 1,
  TYPE_REFUND = 2,
  TYPE_REFUND_RETURN = 3,
}
export enum AfterSaleOrderDetail_Reason {
  REASON_UNSPECIFIED = 0,
  REASON_NOT_DELIVERED_ON_TIME = 1,
  REASON_MISSED_ORDERS = 2,
  REASON_SEND_THE_WRONG_ITEM = 3,
  REASON_WRONG_ORDER = 4,
  REASON_WEIGHT_WRONG = 5,
  REASON_QUALITY_ISSUES = 6,
  REASON_SPECIFICATION_ISSUE = 7,
  REASON_DRIVER_LOST_OR_BROKEN = 8,
  REASON_OUT_OF_STOCK_IN_THE_MARKET = 9,
  REASON_SYSTEM_PROBLEMS = 10,
  REASON_PROCUREMENT_ISSUES = 11,
  REASON_UNDELIVERABLE = 12,
  REASON_OTHER = 13,
}
export enum AfterSaleOrderDetail_Method {
  METHOD_UNSPECIFIED = 0,
  METHOD_GOODS_REDUCTION = 1,
  METHOD_REPLENISHMENT = 2,
  METHOD_EXCHANGE = 3,
  METHOD_BILLING = 4,
  METHOD_CUSTOMER_COMMUNICATE = 5,
  METHOD_METHOD_OTHER = 6,
}
export enum AfterSaleOrderDetail_TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0,
  TASK_STATUS_UNDONE = 1,
  TASK_STATUS_DONE = 2,
}
export enum AfterSaleOrderDetail_TaskMethod {
  TASK_METHOD_UNSPECIFIED = 0,
  TASK_METHOD_PICK_UP = 1,
  TASK_METHOD_GIVE_UP_PICKUP = 2,
}
export interface AfterSaleOrderDetail {
  after_sale_order_detail_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  supplier_id?: string
  after_sale_order_id?: string
  order_detail_id?: string
  driver_id?: string
  last_operator_id?: string
  type: AfterSaleOrderDetail_Type
  apply_return_value?: merchandise.UnitValueSet
  apply_return_amount: string
  real_return_value?: merchandise.UnitValueSet
  real_return_amount: string
  reason?: AfterSaleOrderDetail_Reason
  method?: AfterSaleOrderDetail_Method
  department_blame_name?: string
  department_to_name?: string
  remark?: string
  task_status?: AfterSaleOrderDetail_TaskStatus
  task_method?: AfterSaleOrderDetail_TaskMethod
}
export enum AfterSaleOrder_Status {
  STATUS_UNSPECIFIED = 0,
  STATUS_TO_SUBMIT = 1,
  STATUS_SUBMITTED = 2,
  STATUS_COMPLETED = 3,
  STATUS_DELETED = 4,
}
export interface AfterSaleOrder_AfterSaleOrderDetails {
  after_sale_order_details?: AfterSaleOrderDetail[]
}
export interface AfterSaleOrder {
  after_sale_order_id: string
  status: AfterSaleOrder_Status
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  order_id?: string
  serial_no?: string
  remark?: string
  all_detail_num?: number
  completed_detail_num?: number
  after_sale_order_details?: AfterSaleOrder_AfterSaleOrderDetails
}
export interface ReqCreateAfterSaleOrder {
  // after_sale_order_id: string
  status: AfterSaleOrder_Status
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  creator_id?: string
  order_id?: string
  serial_no?: string
  remark?: string
  all_detail_num?: number
  completed_detail_num?: number
  after_sale_order_details?: AfterSaleOrder_AfterSaleOrderDetails
}
export enum TimeType {
  TIME_TYPE_UNSPECIFIED = 0,
  TIME_TYPE_CREATE_AFTER_SALE = 1,
  TIME_TYPE_PLACE_ORDER = 2,
  TIME_TYPE_RECEIVE_GOODS = 3,
}
export interface AfterSaleOrderRelationInfo {
  relation_info?: order.OrderRelationInfoResponse
  orders?: { [key: string]: order.Order }
}
export interface CreateAfterSaleOrderRequest {
  after_sale_order?: ReqCreateAfterSaleOrder
}
export interface CreateAfterSaleOrderResponse {
  after_sale_order: AfterSaleOrder
}
export interface ListAfterSaleOrderRequest {
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  quotation_id?: string
  address?: enterprise.Address
  order_state?: order.Order_State
  driver_id?: string
  customer_label_id?: string
  status?: AfterSaleOrder_Status
  paging: common.PagingParams
}
export interface ListAfterSaleOrderResponse {
  after_sale_orders: AfterSaleOrder[]
  relation_info?: AfterSaleOrderRelationInfo
  paging: common.PagingResult
}
export interface GetAfterSaleOrderRequest {
  after_sale_order_id: string
}
export interface GetAfterSaleOrderResponse {
  after_sale_order: AfterSaleOrder
}
export interface UpdateAfterSaleOrderRequest {
  after_sale_order?: AfterSaleOrder
}
export interface UpdateAfterSaleOrderResponse {
  after_sale_order: AfterSaleOrder
}
export interface DeleteAfterSaleOrderRequest {
  after_sale_order_id: string
}
export interface DeleteAfterSaleOrderResponse {
  after_sale_order: AfterSaleOrder
}
export interface ExportAfterSaleOrderRequest {
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  quotation_id?: string
  address?: enterprise.Address
  state?: order.Order_State
  driver_id?: string
  customer_label_id?: string
}
export interface ExportAfterSaleOrderResponse {
  task_id?: string
}
export interface ListAfterSaleOrderTaskRequest {
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  category_id_1?: string
  category_id_2?: string
  driver_id?: string
  route_id?: string
  paging: common.PagingParams
  status?: AfterSaleOrderDetail_TaskStatus
}
export interface ListAfterSaleOrderTaskResponse {
  tasks?: AfterSaleOrder_AfterSaleOrderDetails
  paging: common.PagingResult
  relation_info?: AfterSaleOrderRelationInfo
}
export interface ExportAfterSaleOrderTaskRequest {
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  category_id_1?: string
  category_id_2?: string
  driver_id?: string
  route_id?: string
}
export interface ExportAfterSaleOrderTaskResponse {
  task_id?: string
}
export interface UpdateAfterSaleOrderTaskRequest {
  task: AfterSaleOrderDetail
}
export interface UpdateAfterSaleOrderTaskResponse {
  task: AfterSaleOrderDetail
}
export interface BatchUpdateAfterSaleOrderTaskMethodRequest {
  task_ids: string[]
  method: AfterSaleOrderDetail_TaskMethod
}
export interface BatchUpdateAfterSaleOrderTaskMethodResponse {
  tasks?: AfterSaleOrder_AfterSaleOrderDetails
}
export interface BatchCompleteAfterSaleOrderTaskRequest {
  task_ids: string[]
}
export interface BatchCompleteAfterSaleOrderTaskResponse {
  tasks?: AfterSaleOrder_AfterSaleOrderDetails
}
export interface BatchUpdateAfterSaleOrderTaskDriverRequest {
  task_ids: string[]
  driver_id: string
}
export interface BatchUpdateAfterSaleOrderTaskDriverResponse {
  tasks?: AfterSaleOrder_AfterSaleOrderDetails
}
export interface ListAfterSaleOrderSheetRequest {
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  customer_label_id?: string
  quotation_id?: string
  paging: common.PagingParams
}
export interface ListAfterSaleOrderSheetResponse_Rank {
  rank?: number
  customer_id?: string
  count?: string
}
export interface ListAfterSaleOrderSheetResponse_Trend {
  date?: string
  count?: string
}
export interface ListAfterSaleOrderSheetResponse {
  order_num?: number
  sku_num?: number
  should_refund_amount?: string
  real_refund_amount?: string
  order_num_rank_list?: ListAfterSaleOrderSheetResponse_Rank[]
  amount_rank_list?: ListAfterSaleOrderSheetResponse_Rank[]
  amount_trend_list?: ListAfterSaleOrderSheetResponse_Trend[]
  order_num_trend_list?: ListAfterSaleOrderSheetResponse_Trend[]
  details?: AfterSaleOrder_AfterSaleOrderDetails
  relation_info?: order.OrderRelationInfoResponse
  paging: common.PagingResult
}
export interface ExportAfterSaleOrderSheetRequest {
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  customer_label_id?: string
  quotation_id?: string
}
export interface ExportAfterSaleOrderSheetResponse {
  task_id?: string
}
export interface ListAfterSaleOrderDetailSheetRequest {
  type: AfterSaleOrderDetail_Type
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  customer_label_id?: string
  quotation_id?: string
  category_id_1?: string
  category_id_2?: string
  spu_id?: string
  paging: common.PagingParams
}
export interface ListAfterSaleOrderDetailSheetResponse_Rank {
  rank?: number
  sku_id?: string
  count?: string
}
export interface ListAfterSaleOrderDetailSheetResponse {
  sku_num?: string
  amount?: string
  sku_kind_num?: number
  num_rank_list?: ListAfterSaleOrderDetailSheetResponse_Rank[]
  amount_rank_list?: ListAfterSaleOrderDetailSheetResponse_Rank[]
  details?: AfterSaleOrder_AfterSaleOrderDetails
  relation_info?: AfterSaleOrderRelationInfo
  paging: common.PagingResult
}
export interface ExportAfterSaleOrderDetailSheetRequest {
  type: AfterSaleOrderDetail_Type
  time_type: TimeType
  begin_time: string
  end_time: string
  q?: string
  customer_label_id?: string
  quotation_id?: string
  category_id_1?: string
  category_id_2?: string
  spu_id?: string
}
export interface ExportAfterSaleOrderDetailSheetResponse {
  task_id?: string
}
export interface GetAfterSaleOrderDetailRequest {
  after_sale_order_id: string
}
export interface GetAfterSaleOrderDetailResponse {
  details?: AfterSaleOrder_AfterSaleOrderDetails
  relation_info?: AfterSaleOrderRelationInfo
}