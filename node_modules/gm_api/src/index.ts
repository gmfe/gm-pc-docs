import { PagingMax, PagingMaxLimit } from './util/util'
export * from './message_types'

const LOCALES_LNG = '_gm_api_locales_lng_'

let _language = 'zh'
if (process.env.TARO_ENV) {
  // TODO 先啥也不做，默认 zh
} else {
  _language = window.localStorage.getItem(LOCALES_LNG) || 'zh'
}

const setLocaleAndStorage = (lng: string): void => {
  setLocale(lng)
  window.localStorage.setItem(LOCALES_LNG, lng)
}

const setLocale = (lng: string): void => {
  _language = lng
}

const getLocaleWithModuleMap = (
  text: string,
  moduleMap: { [key: string]: any },
): string => {
  const languageMap = moduleMap[getLanguage()] || moduleMap.zh
  let result = languageMap[text] || ''

  if (!result) {
    result = text.split('__').pop() as string
  }

  return result
}

const getLanguage = () => {
  return _language
}

export {
  PagingMax,
  PagingMaxLimit,
  setLocaleAndStorage,
  setLocale,
  getLocaleWithModuleMap,
  getLanguage,
}
