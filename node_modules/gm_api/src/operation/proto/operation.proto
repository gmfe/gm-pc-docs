syntax = "proto3";

package ceres.operation;
option java_multiple_files = true;
option go_package = "code.guanmai.cn/back_end/ceres/operation/proto;proto";

import "./google/api/annotations.proto";

import "./common/proto/common.proto";

service OperationService {
    rpc CreateOperation(CreateOperationRequest) returns (CreateOperationResponse) {
        option (google.api.http) = {
            post : "/ceres/operation/OperationService/CreateOperation"
        };
    }
    rpc ListOperation(ListOperationRequest) returns (ListOperationResponse) {
        option (google.api.http) = {
            post : "/ceres/operation/OperationService/ListOperation"
        };
    }
}

message Operation {
    // 操作类型，每种数据模型最多有999种操作类型，编号范围[ModelType * 1000, ModelType * 1000 + 999]
    enum Type {
        TYPE_UNSPECIFIED = 0;

        // 没有ModelType的操作类型

        // order
        TYPE_ORDER_ORDER_CREATE = 21000; // 新建订单
        TYPE_ORDER_ORDER_UPDATE = 21001; // 修改订单
        TYPE_ORDER_ORDER_DELETE = 21002; // 删除订单
    }

    // @inject_tag: gorm:"PRIMARY_KEY"
    uint64 operation_id = 1;
    uint64 status       = 2;
    uint64 revision     = 3;
    uint64 create_time  = 4;
    uint64 update_time  = 5;

    uint64            group_id   = 10;
    common.Model.Type model_type = 11;

    Type   type          = 20; // 操作类型
    uint64 operator_id   = 21; // 操作者
    string operator_name = 22; // 操作者名称
    uint64 operand_id    = 23; // 操作对象
    string operand_name  = 24; // 操作对象名称

    // 操作对象
    message Operand {
        // 字段，预留两个Value，value1为旧值，value2为新值
        message Field {
            string name   = 1;
            string value1 = 2;
            string value2 = 3;
        }
        repeated Field fields = 1;
    }
    Operand operand = 25;
}

message CreateOperationRequest {
    Operation operation = 1;
}

message CreateOperationResponse {
    Operation operation = 1;
}

message ListOperationRequest {
    uint64            group_id    = 1;
    common.Model.Type model_type  = 2;
    Operation.Type    type        = 3;
    uint64            operator_id = 4;
    uint64            operand_id  = 5;
}

message ListOperationResponse {
    repeated Operation operations = 1;
}
