{
  "nested": {
    "ceres": {
      "nested": {
        "account": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/account/proto;proto"
          },
          "nested": {
            "AccountService": {
              "methods": {
                "CreateAccount": {
                  "requestType": "CreateAccountRequest",
                  "responseType": "CreateAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/CreateAccount"
                  }
                },
                "UpdateAccount": {
                  "requestType": "UpdateAccountRequest",
                  "responseType": "UpdateAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/UpdateAccount"
                  }
                },
                "DeleteAccount": {
                  "requestType": "DeleteAccountRequest",
                  "responseType": "DeleteAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/DeleteAccount"
                  }
                },
                "GetAccount": {
                  "requestType": "GetAccountRequest",
                  "responseType": "GetAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/GetAccount"
                  }
                },
                "CreateProfile": {
                  "requestType": "CreateProfileRequest",
                  "responseType": "CreateProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/CreateProfile"
                  }
                },
                "UpdateProfile": {
                  "requestType": "UpdateProfileRequest",
                  "responseType": "UpdateProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/UpdateProfile"
                  }
                },
                "GetProfile": {
                  "requestType": "GetProfileRequest",
                  "responseType": "GetProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/GetProfile"
                  }
                },
                "ListProfile": {
                  "requestType": "ListProfileRequest",
                  "responseType": "ListProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/ListProfile"
                  }
                }
              }
            },
            "Account": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "type": {
                  "type": "Type",
                  "id": 10,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "scope": {
                  "type": "uint64",
                  "id": 11
                },
                "subtype": {
                  "type": "uint64",
                  "id": 12
                },
                "username": {
                  "type": "string",
                  "id": 30
                },
                "password": {
                  "type": "string",
                  "id": 31
                },
                "phone": {
                  "type": "string",
                  "id": 32
                },
                "email": {
                  "type": "string",
                  "id": 33
                },
                "wechat_openid": {
                  "type": "string",
                  "id": 34
                },
                "wechat_unionid": {
                  "type": "string",
                  "id": 35
                },
                "wechat_nickname": {
                  "type": "string",
                  "id": 36
                },
                "wechat_avatar": {
                  "type": "string",
                  "id": 37
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_PUBLIC": 1,
                    "TYPE_PRIVATE": 2
                  }
                },
                "Status": {
                  "values": {
                    "STATUS_UNSPECIFIED": 0,
                    "STATUS_DISABLED": 256
                  }
                }
              }
            },
            "Profile": {
              "fields": {
                "profile_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "nickname": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.max_len": 64
                  }
                },
                "avatar": {
                  "type": "string",
                  "id": 21
                }
              }
            },
            "CreateAccountRequest": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "CreateAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "UpdateAccountRequest": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "UpdateAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "DeleteAccountRequest": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "DeleteAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "GetAccountRequest": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                },
                "type": {
                  "type": "Account.Type",
                  "id": 2
                },
                "scope": {
                  "type": "uint64",
                  "id": 3
                },
                "subtype": {
                  "type": "uint64",
                  "id": 4
                },
                "username": {
                  "type": "string",
                  "id": 30
                },
                "phone": {
                  "type": "string",
                  "id": 32
                },
                "email": {
                  "type": "string",
                  "id": 33
                },
                "wechat_unionid": {
                  "type": "string",
                  "id": 35
                }
              }
            },
            "GetAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "CreateProfileRequest": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "CreateProfileResponse": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "UpdateProfileRequest": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "UpdateProfileResponse": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "GetProfileRequest": {
              "fields": {
                "profile_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetProfileResponse": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "ListProfileRequest": {
              "fields": {
                "profile_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "ListProfileResponse": {
              "fields": {
                "profiles": {
                  "rule": "repeated",
                  "type": "Profile",
                  "id": 1
                }
              }
            }
          }
        }
      }
    },
    "validate": {
      "options": {
        "go_package": "github.com/envoyproxy/protoc-gen-validate/validate",
        "java_package": "io.envoyproxy.pgv.validate"
      },
      "nested": {
        "disabled": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.MessageOptions"
        },
        "required": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.OneofOptions"
        },
        "rules": {
          "type": "FieldRules",
          "id": 1071,
          "extend": "google.protobuf.FieldOptions"
        },
        "FieldRules": {
          "oneofs": {
            "type": {
              "oneof": [
                "float",
                "double",
                "int32",
                "int64",
                "uint32",
                "uint64",
                "sint32",
                "sint64",
                "fixed32",
                "fixed64",
                "sfixed32",
                "sfixed64",
                "bool",
                "string",
                "bytes",
                "enum",
                "repeated",
                "map",
                "any",
                "duration",
                "timestamp"
              ]
            }
          },
          "fields": {
            "message": {
              "type": "MessageRules",
              "id": 17
            },
            "float": {
              "type": "FloatRules",
              "id": 1
            },
            "double": {
              "type": "DoubleRules",
              "id": 2
            },
            "int32": {
              "type": "Int32Rules",
              "id": 3
            },
            "int64": {
              "type": "Int64Rules",
              "id": 4
            },
            "uint32": {
              "type": "UInt32Rules",
              "id": 5
            },
            "uint64": {
              "type": "UInt64Rules",
              "id": 6
            },
            "sint32": {
              "type": "SInt32Rules",
              "id": 7
            },
            "sint64": {
              "type": "SInt64Rules",
              "id": 8
            },
            "fixed32": {
              "type": "Fixed32Rules",
              "id": 9
            },
            "fixed64": {
              "type": "Fixed64Rules",
              "id": 10
            },
            "sfixed32": {
              "type": "SFixed32Rules",
              "id": 11
            },
            "sfixed64": {
              "type": "SFixed64Rules",
              "id": 12
            },
            "bool": {
              "type": "BoolRules",
              "id": 13
            },
            "string": {
              "type": "StringRules",
              "id": 14
            },
            "bytes": {
              "type": "BytesRules",
              "id": 15
            },
            "enum": {
              "type": "EnumRules",
              "id": 16
            },
            "repeated": {
              "type": "RepeatedRules",
              "id": 18
            },
            "map": {
              "type": "MapRules",
              "id": 19
            },
            "any": {
              "type": "AnyRules",
              "id": 20
            },
            "duration": {
              "type": "DurationRules",
              "id": 21
            },
            "timestamp": {
              "type": "TimestampRules",
              "id": 22
            }
          }
        },
        "FloatRules": {
          "fields": {
            "const": {
              "type": "float",
              "id": 1
            },
            "lt": {
              "type": "float",
              "id": 2
            },
            "lte": {
              "type": "float",
              "id": 3
            },
            "gt": {
              "type": "float",
              "id": 4
            },
            "gte": {
              "type": "float",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "float",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "float",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "DoubleRules": {
          "fields": {
            "const": {
              "type": "double",
              "id": 1
            },
            "lt": {
              "type": "double",
              "id": 2
            },
            "lte": {
              "type": "double",
              "id": 3
            },
            "gt": {
              "type": "double",
              "id": 4
            },
            "gte": {
              "type": "double",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "double",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "double",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Int32Rules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "lt": {
              "type": "int32",
              "id": 2
            },
            "lte": {
              "type": "int32",
              "id": 3
            },
            "gt": {
              "type": "int32",
              "id": 4
            },
            "gte": {
              "type": "int32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Int64Rules": {
          "fields": {
            "const": {
              "type": "int64",
              "id": 1
            },
            "lt": {
              "type": "int64",
              "id": 2
            },
            "lte": {
              "type": "int64",
              "id": 3
            },
            "gt": {
              "type": "int64",
              "id": 4
            },
            "gte": {
              "type": "int64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "UInt32Rules": {
          "fields": {
            "const": {
              "type": "uint32",
              "id": 1
            },
            "lt": {
              "type": "uint32",
              "id": 2
            },
            "lte": {
              "type": "uint32",
              "id": 3
            },
            "gt": {
              "type": "uint32",
              "id": 4
            },
            "gte": {
              "type": "uint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "UInt64Rules": {
          "fields": {
            "const": {
              "type": "uint64",
              "id": 1
            },
            "lt": {
              "type": "uint64",
              "id": 2
            },
            "lte": {
              "type": "uint64",
              "id": 3
            },
            "gt": {
              "type": "uint64",
              "id": 4
            },
            "gte": {
              "type": "uint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SInt32Rules": {
          "fields": {
            "const": {
              "type": "sint32",
              "id": 1
            },
            "lt": {
              "type": "sint32",
              "id": 2
            },
            "lte": {
              "type": "sint32",
              "id": 3
            },
            "gt": {
              "type": "sint32",
              "id": 4
            },
            "gte": {
              "type": "sint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SInt64Rules": {
          "fields": {
            "const": {
              "type": "sint64",
              "id": 1
            },
            "lt": {
              "type": "sint64",
              "id": 2
            },
            "lte": {
              "type": "sint64",
              "id": 3
            },
            "gt": {
              "type": "sint64",
              "id": 4
            },
            "gte": {
              "type": "sint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Fixed32Rules": {
          "fields": {
            "const": {
              "type": "fixed32",
              "id": 1
            },
            "lt": {
              "type": "fixed32",
              "id": 2
            },
            "lte": {
              "type": "fixed32",
              "id": 3
            },
            "gt": {
              "type": "fixed32",
              "id": 4
            },
            "gte": {
              "type": "fixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Fixed64Rules": {
          "fields": {
            "const": {
              "type": "fixed64",
              "id": 1
            },
            "lt": {
              "type": "fixed64",
              "id": 2
            },
            "lte": {
              "type": "fixed64",
              "id": 3
            },
            "gt": {
              "type": "fixed64",
              "id": 4
            },
            "gte": {
              "type": "fixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SFixed32Rules": {
          "fields": {
            "const": {
              "type": "sfixed32",
              "id": 1
            },
            "lt": {
              "type": "sfixed32",
              "id": 2
            },
            "lte": {
              "type": "sfixed32",
              "id": 3
            },
            "gt": {
              "type": "sfixed32",
              "id": 4
            },
            "gte": {
              "type": "sfixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SFixed64Rules": {
          "fields": {
            "const": {
              "type": "sfixed64",
              "id": 1
            },
            "lt": {
              "type": "sfixed64",
              "id": 2
            },
            "lte": {
              "type": "sfixed64",
              "id": 3
            },
            "gt": {
              "type": "sfixed64",
              "id": 4
            },
            "gte": {
              "type": "sfixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "BoolRules": {
          "fields": {
            "const": {
              "type": "bool",
              "id": 1
            }
          }
        },
        "StringRules": {
          "oneofs": {
            "well_known": {
              "oneof": [
                "email",
                "hostname",
                "ip",
                "ipv4",
                "ipv6",
                "uri",
                "uri_ref",
                "address",
                "uuid",
                "well_known_regex"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "string",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 19
            },
            "min_len": {
              "type": "uint64",
              "id": 2
            },
            "max_len": {
              "type": "uint64",
              "id": 3
            },
            "len_bytes": {
              "type": "uint64",
              "id": 20
            },
            "min_bytes": {
              "type": "uint64",
              "id": 4
            },
            "max_bytes": {
              "type": "uint64",
              "id": 5
            },
            "pattern": {
              "type": "string",
              "id": 6
            },
            "prefix": {
              "type": "string",
              "id": 7
            },
            "suffix": {
              "type": "string",
              "id": 8
            },
            "contains": {
              "type": "string",
              "id": 9
            },
            "not_contains": {
              "type": "string",
              "id": 23
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 10
            },
            "not_in": {
              "rule": "repeated",
              "type": "string",
              "id": 11
            },
            "email": {
              "type": "bool",
              "id": 12
            },
            "hostname": {
              "type": "bool",
              "id": 13
            },
            "ip": {
              "type": "bool",
              "id": 14
            },
            "ipv4": {
              "type": "bool",
              "id": 15
            },
            "ipv6": {
              "type": "bool",
              "id": 16
            },
            "uri": {
              "type": "bool",
              "id": 17
            },
            "uri_ref": {
              "type": "bool",
              "id": 18
            },
            "address": {
              "type": "bool",
              "id": 21
            },
            "uuid": {
              "type": "bool",
              "id": 22
            },
            "well_known_regex": {
              "type": "KnownRegex",
              "id": 24
            },
            "strict": {
              "type": "bool",
              "id": 25,
              "options": {
                "default": true
              }
            }
          }
        },
        "KnownRegex": {
          "values": {
            "UNKNOWN": 0,
            "HTTP_HEADER_NAME": 1,
            "HTTP_HEADER_VALUE": 2
          }
        },
        "BytesRules": {
          "oneofs": {
            "well_known": {
              "oneof": [
                "ip",
                "ipv4",
                "ipv6"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "bytes",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 13
            },
            "min_len": {
              "type": "uint64",
              "id": 2
            },
            "max_len": {
              "type": "uint64",
              "id": 3
            },
            "pattern": {
              "type": "string",
              "id": 4
            },
            "prefix": {
              "type": "bytes",
              "id": 5
            },
            "suffix": {
              "type": "bytes",
              "id": 6
            },
            "contains": {
              "type": "bytes",
              "id": 7
            },
            "in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 8
            },
            "not_in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 9
            },
            "ip": {
              "type": "bool",
              "id": 10
            },
            "ipv4": {
              "type": "bool",
              "id": 11
            },
            "ipv6": {
              "type": "bool",
              "id": 12
            }
          }
        },
        "EnumRules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "defined_only": {
              "type": "bool",
              "id": 2
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 3,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int32",
              "id": 4,
              "options": {
                "packed": false
              }
            }
          }
        },
        "MessageRules": {
          "fields": {
            "skip": {
              "type": "bool",
              "id": 1
            },
            "required": {
              "type": "bool",
              "id": 2
            }
          }
        },
        "RepeatedRules": {
          "fields": {
            "min_items": {
              "type": "uint64",
              "id": 1
            },
            "max_items": {
              "type": "uint64",
              "id": 2
            },
            "unique": {
              "type": "bool",
              "id": 3
            },
            "items": {
              "type": "FieldRules",
              "id": 4
            }
          }
        },
        "MapRules": {
          "fields": {
            "min_pairs": {
              "type": "uint64",
              "id": 1
            },
            "max_pairs": {
              "type": "uint64",
              "id": 2
            },
            "no_sparse": {
              "type": "bool",
              "id": 3
            },
            "keys": {
              "type": "FieldRules",
              "id": 4
            },
            "values": {
              "type": "FieldRules",
              "id": 5
            }
          }
        },
        "AnyRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 2
            },
            "not_in": {
              "rule": "repeated",
              "type": "string",
              "id": 3
            }
          }
        },
        "DurationRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Duration",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Duration",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Duration",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Duration",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Duration",
              "id": 6
            },
            "in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 7
            },
            "not_in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 8
            }
          }
        },
        "TimestampRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Timestamp",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Timestamp",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Timestamp",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Timestamp",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Timestamp",
              "id": 6
            },
            "lt_now": {
              "type": "bool",
              "id": 7
            },
            "gt_now": {
              "type": "bool",
              "id": 8
            },
            "within": {
              "type": "google.protobuf.Duration",
              "id": 9
            }
          }
        }
      }
    },
    "google": {
      "nested": {
        "api": {
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "additional_bindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "public_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weak_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "message_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "source_code_info": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nested_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extension_range": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneof_decl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reserved_range": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reserved_name": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "type_name": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "default_value": {
                  "type": "string",
                  "id": 7
                },
                "oneof_index": {
                  "type": "int32",
                  "id": 9
                },
                "json_name": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "input_type": {
                  "type": "string",
                  "id": 2
                },
                "output_type": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "client_streaming": {
                  "type": "bool",
                  "id": 5
                },
                "server_streaming": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "FileOptions": {
              "fields": {
                "java_package": {
                  "type": "string",
                  "id": 1
                },
                "java_outer_classname": {
                  "type": "string",
                  "id": 8
                },
                "java_multiple_files": {
                  "type": "bool",
                  "id": 10
                },
                "java_generate_equals_and_hash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "java_string_check_utf8": {
                  "type": "bool",
                  "id": 27
                },
                "optimize_for": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "go_package": {
                  "type": "string",
                  "id": 11
                },
                "cc_generic_services": {
                  "type": "bool",
                  "id": 16
                },
                "java_generic_services": {
                  "type": "bool",
                  "id": 17
                },
                "py_generic_services": {
                  "type": "bool",
                  "id": 18
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23
                },
                "cc_enable_arenas": {
                  "type": "bool",
                  "id": 31
                },
                "objc_class_prefix": {
                  "type": "string",
                  "id": 36
                },
                "csharp_namespace": {
                  "type": "string",
                  "id": 37
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "message_set_wire_format": {
                  "type": "bool",
                  "id": 1
                },
                "no_standard_descriptor_accessor": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "map_entry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "weak": {
                  "type": "bool",
                  "id": 10
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allow_alias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifier_value": {
                  "type": "string",
                  "id": 3
                },
                "positive_int_value": {
                  "type": "uint64",
                  "id": 4
                },
                "negative_int_value": {
                  "type": "int64",
                  "id": 5
                },
                "double_value": {
                  "type": "double",
                  "id": 6
                },
                "string_value": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregate_value": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "name_part": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "is_extension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leading_comments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailing_comments": {
                      "type": "string",
                      "id": 4
                    },
                    "leading_detached_comments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "source_file": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}