syntax = "proto3";

package ceres.delivery;
option java_multiple_files = true;
option go_package = "code.guanmai.cn/back_end/ceres/delivery/proto;proto";

import "./google/api/annotations.proto";
import "./order/proto/order.proto";
import "./enterprise/proto/enterprise.proto";
import "./common/proto/common.proto";
import "./cmd/protoc-gen-dao/proto/dao.proto";
import "./include/protoc-gen-validate/validate.proto";

service DeliveryService {

    // 线路
    rpc CreateRoute(CreateRouteRequest) returns (CreateRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/CreateRoute"
        };
    };
    rpc UpdateRoute(UpdateRouteRequest) returns (UpdateRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/UpdateRoute"
        };
    };
    rpc GetRoute(GetRouteRequest) returns (GetRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/GetRoute"
        };
    };
    rpc ListRoute(ListRouteRequest) returns (ListRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/ListRoute"
        };
    };
    rpc DeleteRoute(DeleteRouteRequest) returns (DeleteRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/DeleteRoute"
        };
    };
    rpc GetManyRoute(GetManyRouteRequest) returns (GetManyRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/GetManyRoute"
        };
    }
    rpc GetManyCustomerRoute(GetManyCustomerRouteRequest) returns (GetManyCustomerRouteResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/GetManyCustomerRoute"
        };
    }

    // 配送任务
    rpc ListDriverDeliveryTask(ListDriverDeliveryTaskRequest) returns (ListDriverDeliveryTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/ListDriverDeliveryTask"
        };
    };
    rpc UpdateDeliveryTask(UpdateDeliveryTaskRequest) returns (UpdateDeliveryTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/delivery/DeliveryService/UpdateDeliveryTask"
        };
    };
}

// 线路
message Route {
    option (dao.partition_count) = 1;
    option (dao.model_type)      = TYPE_ROUTE;

    // @inject_tag: gorm:"PRIMARY_KEY"
    uint64 route_id   = 1;
    uint64 creator_id = 11; // 创建者id
    uint64 group_id   = 12;
    uint64 station_id = 13;
    string route_name = 21 [ (validate.rules).string = {min_len : 1, max_len : 32} ];

    uint64 create_time = 4;
    uint64 update_time = 5;
    uint64 delete_time = 6;

    //@inject_tag: gorm:"-"
    repeated RouteCustomer customers = 22;
}

// 线路与商户的绑定关系
message RouteCustomer {
    option (dao.partition_count) = 10;

    uint64 route_customer_id = 1;
    uint64 route_id    = 10;
    uint64 customer_id = 11 [ (validate.rules).uint64 = {gt : 0} ];
    uint64 group_id    = 12;
    uint64 station_id  = 13;

    uint64 create_time = 4;
    uint64 update_time = 5;
    uint64 delete_time = 6;
}

message CreateRouteRequest {
    Route route = 1;
}

message CreateRouteResponse {
    Route route = 1;
}

message UpdateRouteRequest {
    Route route = 1;
}

message UpdateRouteResponse {
    Route route = 1;
}

message GetRouteRequest {
    uint64 route_id      = 1;
    bool   need_customer = 2;
    bool   need_district = 3;
}

message GetRouteResponse {
    Route                            route     = 1;
    map<uint64, enterprise.Customer> customers = 2;
    map<uint64, enterprise.District> districts = 3;
}

message ListRouteRequest {
    string              q               = 1;
    common.PagingParams paging          = 2 [ (validate.rules).message.required = true ]; // 分页信息
    bool                need_group_user = 3;
}

message ListRouteResponse {
    repeated Route                    routes      = 1;
    common.PagingResult               paging      = 2;
    map<uint64, enterprise.GroupUser> group_users = 3;
}

message DeleteRouteRequest {
    uint64 route_id = 1;
}

message DeleteRouteResponse {
    Route route = 1;
}

message GetManyRouteRequest {
    repeated uint64 route_ids = 1;
}

message GetManyRouteResponse {
    map<uint64, Route>  routes = 1;
}

message GetManyCustomerRouteRequest {
    repeated uint64 customer_ids = 1;
}

message GetManyCustomerRouteResponse {
    map<uint64, uint64> customer_routes = 1; // customer_id: route_id
    map<uint64, Route>  routes          = 2;
}

message ListDriverDeliveryTaskRequest {
    order.CommonListOrder common_list_order            = 1;
    string                q                            = 2;
    common.PagingParams   paging                       = 3 [ (validate.rules).message.required = true ]; // 分页信息
    bool                  need_distribution_contractor = 4;
}

message ListDriverDeliveryTaskResponse {
    message DriverDeliveryTask {
        enterprise.GroupUser driver = 1;
        // repeated order.Order delivery_tasks = 2; // 一期不做展开任务，只需要汇总信息，并提供订单号方便按司机打印
        uint32 customer_count       = 2;
        uint32 order_count          = 3;
        string total_amount         = 4;
        repeated uint64 order_ids   = 5;
    }
    repeated DriverDeliveryTask                    driver_delivery_tasks    = 1;
    common.PagingResult                            paging                   = 2;
    map<uint64, enterprise.DistributionContractor> distribution_contractors = 3;
}

message UpdateDeliveryTaskRequest {
    repeated order.Order delivery_tasks = 1;
}

message UpdateDeliveryTaskResponse {
    repeated order.Order delivery_tasks = 1;
}
