import * as enterprise from '../enterprise'
import * as account from '../account'
import * as common from '../common'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  CODE_TOKEN_INVALID_CLIENTID = 2002001,
  CODE_TOKEN_INVALID_USERNAME_OR_PASSWORD = 2002002,
  CODE_TOKEN_INVALID_VERIFICATION_CODE = 2002003,
  CODE_TOKEN_INVALID_REFRESH_TOKEN = 2002004,
}
export interface Status {
}
export interface Code {
  code_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  client_id?: string
  account_id?: string
  code?: string
  scope?: string
  state?: string
}
export interface Token {
  token_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  expire_time?: string
  client_id?: string
  account_id?: string
  token?: string
  token_type?: string
}
export interface Session {
  session_id: string
  create_time?: string
  update_time?: string
  expire_time?: string
  access_token?: Token
  user_info?: UserInfo
}
export interface ReqCreateSession {
  // session_id: string
  // create_time?: string
  // update_time?: string
  expire_time?: string
  access_token?: Token
  user_info?: UserInfo
}
export interface UserInfo {
  client_id?: string
  account_id?: string
  group_id?: string
  station_id?: string
  sys_permissions?: string[]
  usr_permissions?: string[]
  group?: enterprise.Group
  group_user?: enterprise.GroupUser
  customer?: enterprise.Customer
  customer_user?: enterprise.CustomerUser
}
export interface CreateRefreshTokenRequest {
  token?: Token
}
export interface CreateRefreshTokenResponse {
  token?: Token
}
export interface UpdateRefreshTokenRequest {
  token?: Token
}
export interface UpdateRefreshTokenResponse {
  token?: Token
}
export interface DeleteRefreshTokenRequest {
  token_id?: string
}
export interface DeleteRefreshTokenResponse {
  token?: Token
}
export interface GetRefreshTokenRequest {
  token_id?: string
}
export interface GetRefreshTokenResponse {
  token?: Token
}
export interface CreateSessionRequest {
  session?: ReqCreateSession
}
export interface CreateSessionResponse {
  session: Session
}
export interface UpdateSessionRequest {
  session?: Session
}
export interface UpdateSessionResponse {
  session: Session
}
export interface DeleteSessionRequest {
  session_id?: string
}
export interface DeleteSessionResponse {
  session: Session
}
export interface GetSessionRequest {
  session_id?: string
}
export interface GetSessionResponse {
  session: Session
}
export interface GetUserInfoRequest {
}
export interface GetUserInfoResponse {
  user_info: UserInfo
}
export interface UpdateUserInfoRequest {
  station_id?: string
  user_id?: string
}
export interface UpdateUserInfoResponse {
  user_info: UserInfo
}
export interface AuthorizeRequest {
  response_type?: string
  client_id?: string
  client_secret?: string
  redirect_uri?: string
  scope?: string
  state?: string
}
export interface AuthorizeResponse {
  code?: string
  state?: string
  access_token?: string
  token_type?: string
  expires_in?: number
  refresh_token?: string
}
export interface TokenRequest {
  grant_type?: string
  redirect_uri?: string
  client_id?: string
  client_secret?: string
  code?: string
  username?: string
  password?: string
  refresh_token?: string
  scope?: string
  group_id?: string
  group_sn?: string
  wechat_app_id?: string
  wechat_code?: string
  wechat_encrypted_data?: string
  wechat_iv?: string
  phone?: string
}
export interface TokenResponse {
  access_token?: string
  token_type?: string
  expires_in?: number
  refresh_token?: string
}