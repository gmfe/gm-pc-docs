{
  "nested": {
    "ceres": {
      "nested": {
        "oauth": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/oauth/proto;proto"
          },
          "nested": {
            "OAuthService": {
              "methods": {
                "GetUserInfo": {
                  "requestType": "GetUserInfoRequest",
                  "responseType": "GetUserInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/oauth/OAuthService/GetUserInfo"
                  }
                },
                "UpdateUserInfo": {
                  "requestType": "UpdateUserInfoRequest",
                  "responseType": "UpdateUserInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/oauth/OAuthService/UpdateUserInfo"
                  }
                },
                "Authorize": {
                  "requestType": "AuthorizeRequest",
                  "responseType": "AuthorizeResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/oauth/OAuthService/Authorize"
                  }
                },
                "Token": {
                  "requestType": "TokenRequest",
                  "responseType": "TokenResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/oauth/OAuthService/Token"
                  }
                }
              }
            },
            "Status": {
              "fields": {},
              "nested": {
                "Code": {
                  "values": {
                    "CODE_UNSPECIFIED": 0,
                    "CODE_TOKEN_INVALID_CLIENTID": 2002001,
                    "CODE_TOKEN_INVALID_USERNAME_OR_PASSWORD": 2002002,
                    "CODE_TOKEN_INVALID_VERIFICATION_CODE": 2002003,
                    "CODE_TOKEN_INVALID_REFRESH_TOKEN": 2002004
                  }
                }
              }
            },
            "Code": {
              "fields": {
                "code_id": {
                  "type": "string",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "client_id": {
                  "type": "uint64",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "code": {
                  "type": "string",
                  "id": 20
                },
                "scope": {
                  "type": "string",
                  "id": 21
                },
                "state": {
                  "type": "string",
                  "id": 22
                }
              }
            },
            "Token": {
              "fields": {
                "token_id": {
                  "type": "string",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "expire_time": {
                  "type": "uint64",
                  "id": 7
                },
                "client_id": {
                  "type": "uint64",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "token": {
                  "type": "string",
                  "id": 21
                },
                "token_type": {
                  "type": "string",
                  "id": 22
                }
              }
            },
            "Session": {
              "fields": {
                "session_id": {
                  "type": "string",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 2
                },
                "update_time": {
                  "type": "uint64",
                  "id": 3
                },
                "expire_time": {
                  "type": "uint64",
                  "id": 4
                },
                "access_token": {
                  "type": "Token",
                  "id": 20
                },
                "user_info": {
                  "type": "UserInfo",
                  "id": 21
                }
              }
            },
            "UserInfo": {
              "fields": {
                "client_id": {
                  "type": "uint64",
                  "id": 1
                },
                "account_id": {
                  "type": "uint64",
                  "id": 2
                },
                "group_id": {
                  "type": "uint64",
                  "id": 3
                },
                "station_id": {
                  "type": "uint64",
                  "id": 4
                },
                "sys_permissions": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 50
                },
                "usr_permissions": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 51
                },
                "group": {
                  "type": "enterprise.Group",
                  "id": 100
                },
                "group_user": {
                  "type": "enterprise.GroupUser",
                  "id": 101
                },
                "customer": {
                  "type": "enterprise.Customer",
                  "id": 200
                },
                "customer_user": {
                  "type": "enterprise.CustomerUser",
                  "id": 201
                }
              }
            },
            "CreateRefreshTokenRequest": {
              "fields": {
                "token": {
                  "type": "Token",
                  "id": 1
                }
              }
            },
            "CreateRefreshTokenResponse": {
              "fields": {
                "token": {
                  "type": "Token",
                  "id": 1
                }
              }
            },
            "UpdateRefreshTokenRequest": {
              "fields": {
                "token": {
                  "type": "Token",
                  "id": 1
                }
              }
            },
            "UpdateRefreshTokenResponse": {
              "fields": {
                "token": {
                  "type": "Token",
                  "id": 1
                }
              }
            },
            "DeleteRefreshTokenRequest": {
              "fields": {
                "token_id": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteRefreshTokenResponse": {
              "fields": {
                "token": {
                  "type": "Token",
                  "id": 1
                }
              }
            },
            "GetRefreshTokenRequest": {
              "fields": {
                "token_id": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "GetRefreshTokenResponse": {
              "fields": {
                "token": {
                  "type": "Token",
                  "id": 1
                }
              }
            },
            "CreateSessionRequest": {
              "fields": {
                "session": {
                  "type": "Session",
                  "id": 1
                }
              }
            },
            "CreateSessionResponse": {
              "fields": {
                "session": {
                  "type": "Session",
                  "id": 1
                }
              }
            },
            "UpdateSessionRequest": {
              "fields": {
                "session": {
                  "type": "Session",
                  "id": 1
                }
              }
            },
            "UpdateSessionResponse": {
              "fields": {
                "session": {
                  "type": "Session",
                  "id": 1
                }
              }
            },
            "DeleteSessionRequest": {
              "fields": {
                "session_id": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteSessionResponse": {
              "fields": {
                "session": {
                  "type": "Session",
                  "id": 1
                }
              }
            },
            "GetSessionRequest": {
              "fields": {
                "session_id": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "GetSessionResponse": {
              "fields": {
                "session": {
                  "type": "Session",
                  "id": 1
                }
              }
            },
            "GetUserInfoRequest": {
              "fields": {}
            },
            "GetUserInfoResponse": {
              "fields": {
                "user_info": {
                  "type": "UserInfo",
                  "id": 1
                }
              }
            },
            "UpdateUserInfoRequest": {
              "fields": {
                "station_id": {
                  "type": "uint64",
                  "id": 1
                },
                "user_id": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "UpdateUserInfoResponse": {
              "fields": {
                "user_info": {
                  "type": "UserInfo",
                  "id": 1
                }
              }
            },
            "AuthorizeRequest": {
              "fields": {
                "response_type": {
                  "type": "string",
                  "id": 1
                },
                "client_id": {
                  "type": "string",
                  "id": 2
                },
                "client_secret": {
                  "type": "string",
                  "id": 3
                },
                "redirect_uri": {
                  "type": "string",
                  "id": 4
                },
                "scope": {
                  "type": "string",
                  "id": 5
                },
                "state": {
                  "type": "string",
                  "id": 6
                }
              }
            },
            "AuthorizeResponse": {
              "fields": {
                "code": {
                  "type": "string",
                  "id": 1
                },
                "state": {
                  "type": "string",
                  "id": 2
                },
                "access_token": {
                  "type": "string",
                  "id": 3
                },
                "token_type": {
                  "type": "string",
                  "id": 4
                },
                "expires_in": {
                  "type": "uint32",
                  "id": 5
                },
                "refresh_token": {
                  "type": "string",
                  "id": 6
                }
              }
            },
            "TokenRequest": {
              "fields": {
                "grant_type": {
                  "type": "string",
                  "id": 1
                },
                "redirect_uri": {
                  "type": "string",
                  "id": 2
                },
                "client_id": {
                  "type": "string",
                  "id": 3
                },
                "client_secret": {
                  "type": "string",
                  "id": 4
                },
                "code": {
                  "type": "string",
                  "id": 5
                },
                "username": {
                  "type": "string",
                  "id": 6
                },
                "password": {
                  "type": "string",
                  "id": 7
                },
                "refresh_token": {
                  "type": "string",
                  "id": 8
                },
                "scope": {
                  "type": "string",
                  "id": 9
                },
                "group_id": {
                  "type": "uint64",
                  "id": 100
                },
                "group_sn": {
                  "type": "string",
                  "id": 101
                },
                "wechat_app_id": {
                  "type": "string",
                  "id": 102
                },
                "wechat_code": {
                  "type": "string",
                  "id": 200
                },
                "wechat_encrypted_data": {
                  "type": "string",
                  "id": 201
                },
                "wechat_iv": {
                  "type": "string",
                  "id": 202
                },
                "phone": {
                  "type": "string",
                  "id": 210
                }
              }
            },
            "TokenResponse": {
              "fields": {
                "access_token": {
                  "type": "string",
                  "id": 1
                },
                "token_type": {
                  "type": "string",
                  "id": 2
                },
                "expires_in": {
                  "type": "uint32",
                  "id": 3
                },
                "refresh_token": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        },
        "enterprise": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/enterprise/proto;proto"
          },
          "nested": {
            "EnterpriseService": {
              "methods": {
                "InitializeRegion": {
                  "requestType": "InitializeRegionRequest",
                  "responseType": "InitializeRegionResponse"
                },
                "GetGroup": {
                  "requestType": "GetGroupRequest",
                  "responseType": "GetGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetGroup"
                  }
                },
                "ListGroup": {
                  "requestType": "ListGroupRequest",
                  "responseType": "ListGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListGroup"
                  }
                },
                "CreateGroup": {
                  "requestType": "CreateGroupRequest",
                  "responseType": "CreateGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateGroup",
                    "(common.options.annotation).codes": "DUPLICATE_GROUP_NAME"
                  }
                },
                "UpdateGroup": {
                  "requestType": "UpdateGroupRequest",
                  "responseType": "UpdateGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateGroup",
                    "(common.options.annotation).codes": "DUPLICATE_GROUP_NAME"
                  }
                },
                "GetGroupExtraInfo": {
                  "requestType": "GetGroupExtraInfoRequest",
                  "responseType": "GetGroupExtraInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetGroupExtraInfo"
                  }
                },
                "UpdateGroupExtraInfo": {
                  "requestType": "UpdateGroupExtraInfoRequest",
                  "responseType": "UpdateGroupExtraInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateGroupExtraInfo"
                  }
                },
                "ListGroupTimeZone": {
                  "requestType": "ListGroupTimeZoneRequest",
                  "responseType": "ListGroupTimeZoneResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListGroupTimeZone"
                  }
                },
                "ListPermissionGroup": {
                  "requestType": "ListPermissionGroupRequest",
                  "responseType": "ListPermissionGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListPermissionGroup"
                  }
                },
                "GetPermissionGroup": {
                  "requestType": "GetPermissionGroupRequest",
                  "responseType": "GetPermissionGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetPermissionGroup"
                  }
                },
                "UpdatePermissionGroup": {
                  "requestType": "UpdatePermissionGroupRequest",
                  "responseType": "UpdatePermissionGroupResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdatePermissionGroup"
                  }
                },
                "GetGroupPermission": {
                  "requestType": "GetGroupPermissionRequest",
                  "responseType": "GetGroupPermissionResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetGroupPermission"
                  }
                },
                "UpdateGroupPermission": {
                  "requestType": "UpdateGroupPermissionRequest",
                  "responseType": "UpdateGroupPermissionResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateGroupPermission"
                  }
                },
                "GetStation": {
                  "requestType": "GetStationRequest",
                  "responseType": "GetStationResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetStation"
                  }
                },
                "ListStation": {
                  "requestType": "ListStationRequest",
                  "responseType": "ListStationResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListStation"
                  }
                },
                "CreateStation": {
                  "requestType": "CreateStationRequest",
                  "responseType": "CreateStationResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateStation"
                  }
                },
                "UpdateStation": {
                  "requestType": "UpdateStationRequest",
                  "responseType": "UpdateStationResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateStation"
                  }
                },
                "UpdateStationAvailableCity": {
                  "requestType": "UpdateStationAvailableCityRequest",
                  "responseType": "UpdateStationAvailableCityResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateStationAvailableCity"
                  }
                },
                "GetSupplier": {
                  "requestType": "GetSupplierRequest",
                  "responseType": "GetSupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetSupplier"
                  }
                },
                "GetManySupplier": {
                  "requestType": "GetManySupplierRequest",
                  "responseType": "GetManySupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetManySupplier"
                  }
                },
                "ListSupplier": {
                  "requestType": "ListSupplierRequest",
                  "responseType": "ListSupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListSupplier"
                  }
                },
                "CreateSupplier": {
                  "requestType": "CreateSupplierRequest",
                  "responseType": "CreateSupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateSupplier"
                  }
                },
                "UpdateSupplier": {
                  "requestType": "UpdateSupplierRequest",
                  "responseType": "UpdateSupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateSupplier"
                  }
                },
                "DeleteSupplier": {
                  "requestType": "DeleteSupplierRequest",
                  "responseType": "DeleteSupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteSupplier"
                  }
                },
                "CleanSupplier": {
                  "requestType": "CleanSupplierRequest",
                  "responseType": "CleanSupplierResponse"
                },
                "BatchExportSupplier": {
                  "requestType": "BatchExportSupplierRequest",
                  "responseType": "BatchExportSupplierResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/BatchExportSupplier"
                  }
                },
                "GetGroupUser": {
                  "requestType": "GetGroupUserRequest",
                  "responseType": "GetGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetGroupUser"
                  }
                },
                "GetManyGroupUser": {
                  "requestType": "GetManyGroupUserRequest",
                  "responseType": "GetManyGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetManyGroupUser"
                  }
                },
                "ListGroupUser": {
                  "requestType": "ListGroupUserRequest",
                  "responseType": "ListGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListGroupUser"
                  }
                },
                "CreateGroupUser": {
                  "requestType": "CreateGroupUserRequest",
                  "responseType": "CreateGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateGroupUser",
                    "(common.options.annotation).codes": "DUPLICATE_USER_NAME,DUPLICATE_USER_USERNAME,DUPLICATE_USER_PHONE"
                  }
                },
                "UpdateGroupUser": {
                  "requestType": "UpdateGroupUserRequest",
                  "responseType": "UpdateGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateGroupUser"
                  }
                },
                "UpdateGroupUserPassword": {
                  "requestType": "UpdateGroupUserPasswordRequest",
                  "responseType": "UpdateGroupUserPasswordResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateGroupUserPassword"
                  }
                },
                "DeleteGroupUser": {
                  "requestType": "DeleteGroupUserRequest",
                  "responseType": "DeleteGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteGroupUser"
                  }
                },
                "UpdateGroupUserRole": {
                  "requestType": "UpdateGroupUserRoleRequest",
                  "responseType": "UpdateGroupUserRoleResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateGroupUserRole"
                  }
                },
                "GetRole": {
                  "requestType": "GetRoleRequest",
                  "responseType": "GetRoleResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetRole"
                  }
                },
                "ListRole": {
                  "requestType": "ListRoleRequest",
                  "responseType": "ListRoleResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListRole"
                  }
                },
                "CreateRole": {
                  "requestType": "CreateRoleRequest",
                  "responseType": "CreateRoleResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateRole",
                    "(common.options.annotation).codes": "DUPLICATE_ROLE_NAME"
                  }
                },
                "UpdateRole": {
                  "requestType": "UpdateRoleRequest",
                  "responseType": "UpdateRoleResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateRole",
                    "(common.options.annotation).codes": "DUPLICATE_ROLE_NAME"
                  }
                },
                "DeleteRole": {
                  "requestType": "DeleteRoleRequest",
                  "responseType": "DeleteRoleResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteRole"
                  }
                },
                "UpdateRolePermission": {
                  "requestType": "UpdateRolePermissionRequest",
                  "responseType": "UpdateRolePermissionResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateRolePermission"
                  }
                },
                "UpdateRoleGroupUser": {
                  "requestType": "UpdateRoleGroupUserRequest",
                  "responseType": "UpdateRoleGroupUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateRoleGroupUser"
                  }
                },
                "GetServicePeriod": {
                  "requestType": "GetServicePeriodRequest",
                  "responseType": "GetServicePeriodResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetServicePeriod"
                  }
                },
                "GetManyServicePeriod": {
                  "requestType": "GetManyServicePeriodRequest",
                  "responseType": "GetManyServicePeriodResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetManyServicePeriod"
                  }
                },
                "ListServicePeriod": {
                  "requestType": "ListServicePeriodRequest",
                  "responseType": "ListServicePeriodResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListServicePeriod"
                  }
                },
                "CreateServicePeriod": {
                  "requestType": "CreateServicePeriodRequest",
                  "responseType": "CreateServicePeriodResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateServicePeriod"
                  }
                },
                "UpdateServicePeriod": {
                  "requestType": "UpdateServicePeriodRequest",
                  "responseType": "UpdateServicePeriodResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateServicePeriod"
                  }
                },
                "DeleteServicePeriod": {
                  "requestType": "DeleteServicePeriodRequest",
                  "responseType": "DeleteServicePeriodResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteServicePeriod"
                  }
                },
                "CleanServicePeriod": {
                  "requestType": "CleanServicePeriodRequest",
                  "responseType": "CleanServicePeriodResponse"
                },
                "GetCustomer": {
                  "requestType": "GetCustomerRequest",
                  "responseType": "GetCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetCustomer"
                  }
                },
                "GetManyCustomer": {
                  "requestType": "GetManyCustomerRequest",
                  "responseType": "GetManyCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetManyCustomer"
                  }
                },
                "ListCustomer": {
                  "requestType": "ListCustomerRequest",
                  "responseType": "ListCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListCustomer"
                  }
                },
                "CreateCustomer": {
                  "requestType": "CreateCustomerRequest",
                  "responseType": "CreateCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateCustomer"
                  }
                },
                "CreateCustomerTree": {
                  "requestType": "CreateCustomerTreeRequest",
                  "responseType": "CreateCustomerTreeResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateCustomerTree"
                  }
                },
                "UpdateCustomer": {
                  "requestType": "UpdateCustomerRequest",
                  "responseType": "UpdateCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateCustomer"
                  }
                },
                "DeleteCustomer": {
                  "requestType": "DeleteCustomerRequest",
                  "responseType": "DeleteCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteCustomer"
                  }
                },
                "CleanCustomer": {
                  "requestType": "CleanCustomerRequest",
                  "responseType": "CleanCustomerResponse"
                },
                "BatchExportCustomer": {
                  "requestType": "BatchExportCustomerRequest",
                  "responseType": "BatchExportCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/BatchExportCustomer"
                  }
                },
                "BatchImportCustomer": {
                  "requestType": "BatchImportCustomerRequest",
                  "responseType": "BatchImportCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/BatchImportCustomer"
                  }
                },
                "GetBatchImportCustomerTemplate": {
                  "requestType": "GetBatchImportCustomerTemplateRequest",
                  "responseType": "GetBatchImportCustomerTemplateResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetBatchImportCustomerTemplate"
                  }
                },
                "CountNewCustomer": {
                  "requestType": "CountNewCustomerRequest",
                  "responseType": "CountNewCustomerResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CountNewCustomer"
                  }
                },
                "GetCustomerUser": {
                  "requestType": "GetCustomerUserRequest",
                  "responseType": "GetCustomerUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetCustomerUser"
                  }
                },
                "InternalGetCustomerUser": {
                  "requestType": "InternalGetCustomerUserRequest",
                  "responseType": "InternalGetCustomerUserResponse"
                },
                "GetManyCustomerUser": {
                  "requestType": "GetManyCustomerUserRequest",
                  "responseType": "GetManyCustomerUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetManyCustomerUser"
                  }
                },
                "ListCustomerUser": {
                  "requestType": "ListCustomerUserRequest",
                  "responseType": "ListCustomerUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListCustomerUser"
                  }
                },
                "CreateCustomerUser": {
                  "requestType": "CreateCustomerUserRequest",
                  "responseType": "CreateCustomerUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateCustomerUser",
                    "(common.options.annotation).codes": "DUPLICATE_USER_NAME,DUPLICATE_USER_USERNAME,DUPLICATE_USER_PHONE"
                  }
                },
                "UpdateCustomerUser": {
                  "requestType": "UpdateCustomerUserRequest",
                  "responseType": "UpdateCustomerUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateCustomerUser"
                  }
                },
                "UpdateCustomerUserPassword": {
                  "requestType": "UpdateCustomerUserPasswordRequest",
                  "responseType": "UpdateCustomerUserPasswordResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateCustomerUserPassword"
                  }
                },
                "DeleteCustomerUser": {
                  "requestType": "DeleteCustomerUserRequest",
                  "responseType": "DeleteCustomerUserResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteCustomerUser"
                  }
                },
                "CleanCustomerUser": {
                  "requestType": "CleanCustomerUserRequest",
                  "responseType": "CleanCustomerUserResponse"
                },
                "GetCustomerLabel": {
                  "requestType": "GetCustomerLabelRequest",
                  "responseType": "GetCustomerLabelResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetCustomerLabel"
                  }
                },
                "ListCustomerLabel": {
                  "requestType": "ListCustomerLabelRequest",
                  "responseType": "ListCustomerLabelResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListCustomerLabel"
                  }
                },
                "CreateCustomerLabel": {
                  "requestType": "CreateCustomerLabelRequest",
                  "responseType": "CreateCustomerLabelResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateCustomerLabel"
                  }
                },
                "UpdateCustomerLabel": {
                  "requestType": "UpdateCustomerLabelRequest",
                  "responseType": "UpdateCustomerLabelResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateCustomerLabel"
                  }
                },
                "DeleteCustomerLabel": {
                  "requestType": "DeleteCustomerLabelRequest",
                  "responseType": "DeleteCustomerLabelResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteCustomerLabel"
                  }
                },
                "GetDistributionContractor": {
                  "requestType": "GetDistributionContractorRequest",
                  "responseType": "GetDistributionContractorResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetDistributionContractor"
                  }
                },
                "ListDistributionContractor": {
                  "requestType": "ListDistributionContractorRequest",
                  "responseType": "ListDistributionContractorResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListDistributionContractor"
                  }
                },
                "CreateDistributionContractor": {
                  "requestType": "CreateDistributionContractorRequest",
                  "responseType": "CreateDistributionContractorResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateDistributionContractor"
                  }
                },
                "UpdateDistributionContractor": {
                  "requestType": "UpdateDistributionContractorRequest",
                  "responseType": "UpdateDistributionContractorResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/UpdateDistributionContractor"
                  }
                },
                "DeleteDistributionContractor": {
                  "requestType": "DeleteDistributionContractorRequest",
                  "responseType": "DeleteDistributionContractorResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteDistributionContractor"
                  }
                },
                "ListCountry": {
                  "requestType": "ListCountryRequest",
                  "responseType": "ListCountryResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListCountry"
                  }
                },
                "ListProvince": {
                  "requestType": "ListProvinceRequest",
                  "responseType": "ListProvinceResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListProvince"
                  }
                },
                "ListCity": {
                  "requestType": "ListCityRequest",
                  "responseType": "ListCityResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListCity"
                  }
                },
                "ListDistrict": {
                  "requestType": "ListDistrictRequest",
                  "responseType": "ListDistrictResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListDistrict"
                  }
                },
                "ListStreet": {
                  "requestType": "ListStreetRequest",
                  "responseType": "ListStreetResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListStreet"
                  }
                },
                "ListInvitationCode": {
                  "requestType": "ListInvitationCodeRequest",
                  "responseType": "ListInvitationCodeResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/ListInvitationCode"
                  }
                },
                "GetInvitationCode": {
                  "requestType": "GetInvitationCodeRequest",
                  "responseType": "GetInvitationCodeResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetInvitationCode"
                  }
                },
                "CreateInvitationCode": {
                  "requestType": "CreateInvitationCodeRequest",
                  "responseType": "CreateInvitationCodeResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/CreateInvitationCode"
                  }
                },
                "DeleteInvitationCode": {
                  "requestType": "DeleteInvitationCodeRequest",
                  "responseType": "DeleteInvitationCodeResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/DeleteInvitationCode"
                  }
                },
                "CleanInvitationCode": {
                  "requestType": "CleanInvitationCodeRequest",
                  "responseType": "CleanInvitationCodeResponse"
                },
                "GetUserInfo": {
                  "requestType": "GetUserInfoRequest",
                  "responseType": "GetUserInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/enterprise/EnterpriseService/GetUserInfo"
                  }
                }
              }
            },
            "Status": {
              "fields": {},
              "nested": {
                "Code": {
                  "values": {
                    "CODE_UNSPECIFIED": 0,
                    "DUPLICATE_ROLE_NAME": 23330001,
                    "DUPLICATE_USER_NAME": 23330002,
                    "DUPLICATE_USER_USERNAME": 23330004,
                    "DUPLICATE_USER_PHONE": 23330005,
                    "DUPLICATE_GROUP_NAME": 23330003
                  }
                },
                "DuplicateRoleNameDetail": {
                  "fields": {
                    "role_id": {
                      "type": "uint64",
                      "id": 1
                    }
                  }
                },
                "DuplicateUserNameDetail": {
                  "fields": {
                    "user_id": {
                      "type": "uint64",
                      "id": 1
                    }
                  }
                },
                "DuplicateUserUsernameDetail": {
                  "fields": {
                    "user_id": {
                      "type": "uint64",
                      "id": 1
                    }
                  }
                },
                "DuplicateUserPhoneDetail": {
                  "fields": {
                    "user_id": {
                      "type": "uint64",
                      "id": 1
                    }
                  }
                }
              }
            },
            "Group": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "is_valid": {
                  "type": "bool",
                  "id": 20
                },
                "name": {
                  "type": "string",
                  "id": 21,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "address": {
                  "type": "Address",
                  "id": 22,
                  "options": {
                    "deprecated": true
                  }
                },
                "time_zone": {
                  "type": "string",
                  "id": 23
                },
                "type": {
                  "type": "Type",
                  "id": 29,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "INTERNAL": 1,
                    "EXTERNAL": 2
                  }
                }
              }
            },
            "GroupExtraInfo": {
              "options": {
                "(dao.partition_count)": 1,
                "(dao.primary_key)": "group_id"
              },
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "attrs": {
                  "type": "Attrs",
                  "id": 20
                },
                "address": {
                  "type": "Address",
                  "id": 21
                },
                "source": {
                  "type": "Source",
                  "id": 22
                },
                "annual_sales_amount": {
                  "type": "AnnualSalesAmount",
                  "id": 25
                },
                "monthly_sales_amount": {
                  "type": "MonthlySalesAmount",
                  "id": 26
                },
                "type": {
                  "type": "Type",
                  "id": 27
                },
                "version": {
                  "type": "Version",
                  "id": 28
                },
                "state": {
                  "type": "State",
                  "id": 29
                },
                "saler": {
                  "type": "string",
                  "id": 30
                },
                "contract_amount": {
                  "type": "uint64",
                  "id": 31
                },
                "maintenance_amount": {
                  "type": "uint64",
                  "id": 32
                },
                "remark": {
                  "type": "string",
                  "id": 33
                },
                "up_time": {
                  "type": "uint64",
                  "id": 34
                },
                "downline_time": {
                  "type": "uint64",
                  "id": 35
                },
                "renewal_time": {
                  "type": "uint64",
                  "id": 36
                },
                "handover_time": {
                  "type": "uint64",
                  "id": 37
                }
              },
              "nested": {
                "Source": {
                  "values": {
                    "SOURCE_UNSPECIFIED": 0,
                    "SOURCE_PROMOTION": 1,
                    "SOURCE_REFERRAL": 2,
                    "SOURCE_SELF_EXPANSION": 3
                  }
                },
                "Target": {
                  "values": {
                    "TARGET_UNSPECIFIED": 0,
                    "TARGET_STORES": 1,
                    "TARGET_RESTAURANT": 2,
                    "TARGET_HOTEL": 3,
                    "TARGET_GROUP_MEALS": 4,
                    "TARGET_NUTRITIONAL_MEALS": 5,
                    "TARGET_INDIVIDUAL": 6,
                    "TARGET_RETAIL": 7,
                    "TARGET_OTHER": 8
                  }
                },
                "AnnualSalesAmount": {
                  "values": {
                    "ANNUAL_SALES_AMOUNT_UNSPECIFIED": 0,
                    "ANNUAL_SALES_AMOUNT_0_1000": 1,
                    "ANNUAL_SALES_AMOUNT_1000_3000": 2,
                    "ANNUAL_SALES_AMOUNT_3000_5000": 3,
                    "ANNUAL_SALES_AMOUNT_5000_10000": 4,
                    "ANNUAL_SALES_AMOUNT_10000_INF": 5
                  }
                },
                "MonthlySalesAmount": {
                  "values": {
                    "MONTHLY_SALES_AMOUNT_UNSPECIFIED": 0,
                    "MONTHLY_SALES_AMOUNT_0_50": 1,
                    "MONTHLY_SALES_AMOUNT_50_100": 2,
                    "MONTHLY_SALES_AMOUNT_100_200": 3,
                    "MONTHLY_SALES_AMOUNT_200_500": 4,
                    "MONTHLY_SALES_AMOUNT_500_1000": 5,
                    "MONTHLY_SALES_AMOUNT_1000_INF": 6
                  }
                },
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_NORMAL": 1,
                    "TYPE_KA": 2
                  }
                },
                "Version": {
                  "values": {
                    "VERSION_UNSPECIFIED": 0,
                    "VERSION_STANDARD": 1
                  }
                },
                "State": {
                  "values": {
                    "STATE_UNSPECIFIED": 0,
                    "STATE_NORMAL": 1,
                    "STATE_ONLINE": 2,
                    "STATE_OFFLINE": 3,
                    "STATE_STOP": 4
                  }
                },
                "Attrs": {
                  "fields": {
                    "targets": {
                      "rule": "repeated",
                      "type": "Target",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Station": {
              "options": {
                "(dao.partition_count)": 1,
                "(dao.model_type)": "TYPE_ENTERPRISE_STATION"
              },
              "fields": {
                "station_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 5
                },
                "update_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 12
                },
                "default_quotation_id": {
                  "type": "uint64",
                  "id": 13
                },
                "attrs": {
                  "type": "Attrs",
                  "id": 20
                },
                "name": {
                  "type": "string",
                  "id": 23,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "description": {
                  "type": "string",
                  "id": 24
                },
                "is_valid": {
                  "type": "bool",
                  "id": 28
                },
                "type": {
                  "type": "Type",
                  "id": 21,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "address": {
                  "type": "Address",
                  "id": 22,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "NORMAL": 1
                  }
                },
                "Attrs": {
                  "fields": {
                    "available_city_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 1
                    }
                  }
                }
              }
            },
            "CreditType": {
              "values": {
                "CREDIT_TYPE_UNSPECIFIED": 0,
                "CREDIT_TYPE_AMOUNT": 1,
                "CREDIT_TYPE_DAILY": 3,
                "CREDIT_TYPE_WEEKLY": 4,
                "CREDIT_TYPE_MONTHLY": 5,
                "CREDIT_TYPE_CUSTOMIZED": 6,
                "CREDIT_TYPE_HALF_MONTHLY": 8
              }
            },
            "Supplier": {
              "options": {
                "(dao.partition_count)": 1,
                "(dao.model_type)": "TYPE_ENTERPRISE_SUPPLIER"
              },
              "fields": {
                "supplier_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "default_purchase_id": {
                  "type": "uint64",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "name": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "description": {
                  "type": "string",
                  "id": 21
                },
                "is_valid": {
                  "type": "bool",
                  "id": 22
                },
                "address": {
                  "type": "Address",
                  "id": 23
                },
                "credit_type": {
                  "type": "CreditType",
                  "id": 24
                },
                "phone": {
                  "type": "string",
                  "id": 26
                },
                "customized_code": {
                  "type": "string",
                  "id": 27,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "attrs": {
                  "type": "Attrs",
                  "id": 30
                }
              },
              "nested": {
                "Attrs": {
                  "fields": {
                    "china_vat_invoice": {
                      "type": "ChinaVatInvoice",
                      "id": 1
                    },
                    "qualification_images": {
                      "rule": "repeated",
                      "type": "common.Image",
                      "id": 2
                    },
                    "available_category_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 3
                    }
                  }
                }
              }
            },
            "DistributionContractor": {
              "options": {
                "(dao.partition_count)": 10,
                "(dao.model_type)": "TYPE_ENTERPRISE_DISTRIBUTION_CONTRACTOR"
              },
              "fields": {
                "distribution_contractor_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 2
                },
                "update_time": {
                  "type": "uint64",
                  "id": 3
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 4
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "name": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "Permission": {
              "values": {
                "PERMISSION_UNSPECIFIED": 0,
                "PERMISSION_MERCHANDISE_VIEW_QUOTATION": 10,
                "PERMISSION_MERCHANDISE_CREATE_QUOTATION": 11,
                "PERMISSION_MERCHANDISE_UPDATE_QUOTATION": 12,
                "PERMISSION_MERCHANDISE_DELETE_QUOTATION": 13,
                "PERMISSION_MERCHANDISE_VIEW_NOT_PACKAGE_SKU_SSU": 20,
                "PERMISSION_MERCHANDISE_CREATE_NOT_PACKAGE_SKU_SSU": 21,
                "PERMISSION_MERCHANDISE_UPDATE_NOT_PACKAGE_SKU_SSU": 22,
                "PERMISSION_MERCHANDISE_DELETE_NOT_PACKAGE_SKU_SSU": 23,
                "PERMISSION_MERCHANDISE_VIEW_PACKAGE_SKU_SSU": 30,
                "PERMISSION_MERCHANDISE_CREATE_PACKAGE_SKU_SSU": 31,
                "PERMISSION_MERCHANDISE_UPDATE_PACKAGE_SKU_SSU": 32,
                "PERMISSION_MERCHANDISE_DELETE_PACKAGE_SKU_SSU": 33,
                "PERMISSION_PRODUCTION_VIEW_BOM": 40,
                "PERMISSION_PRODUCTION_CREATE_BOM": 41,
                "PERMISSION_PRODUCTION_UPDATE_BOM": 42,
                "PERMISSION_PRODUCTION_DELETE_BOM": 43,
                "PERMISSION_MERCHANDISE_VIEW_CATEGORY": 50,
                "PERMISSION_MERCHANDISE_CREATE_CATEGORY": 51,
                "PERMISSION_MERCHANDISE_UPDATE_CATEGORY": 52,
                "PERMISSION_MERCHANDISE_DELETE_CATEGORY": 53,
                "PERMISSION_ESHOP_VIEW_MENU": 500,
                "PERMISSION_ESHOP_UPDATE_MENU": 502,
                "PERMISSION_ESHOP_VIEW_MENU_DETAIL": 504,
                "PERMISSION_ESHOP_UPDATE_MENU_DETAIL": 505,
                "PERMISSION_ESHOP_CREATE_MENU": 501,
                "PERMISSION_ESHOP_DELETE_MENU": 503,
                "PERMISSION_ESHOP_VIEW_MENU_PERIOD": 510,
                "PERMISSION_ESHOP_CREATE_MENU_PERIOD": 511,
                "PERMISSION_ESHOP_UPDATE_MENU_PERIOD": 512,
                "PERMISSION_ESHOP_DELETE_MENU_PERIOD": 513,
                "PERMISSION_ORDER_VIEW_ORDER": 60,
                "PERMISSION_ORDER_CREATE_ORDER": 61,
                "PERMISSION_ORDER_UPDATE_ORDER": 62,
                "PERMISSION_ORDER_DELETE_ORDER": 63,
                "PERMISSION_ORDER_AMEND_ORDER": 64,
                "PERMISSION_ORDER_RELEASE_PROCESS_PLAN": 65,
                "PERMISSION_ORDER_RELEASE_NONPROCESS_PLAN": 66,
                "PERMISSION_ORDER_VIEW_ESHOP_STUDENT_ORDER": 530,
                "PERMISSION_ORDER_DELETE_ESHOP_STUDENT_ORDER": 531,
                "PERMISSION_ORDER_VIEW_ESHOP_STUFF_ORDER": 532,
                "PERMISSION_ORDER_DELETE_ESHOP_STUFF_ORDER": 533,
                "PERMISSION_ORDER_VIEW_LEAVE_APPLICATION": 539,
                "PERMISSION_PURCHASE_VIEW_PURCHASE_TASK": 70,
                "PERMISSION_PURCHASE_CREATE_PURCHASE_TASK": 71,
                "PERMISSION_PURCHASE_UPDATE_PURCHASE_TASK": 72,
                "PERMISSION_PURCHASE_DELETE_PURCHASE_TASK": 73,
                "PERMISSION_PURCHASE_VIEW_PURCHASE_SHEET": 80,
                "PERMISSION_PURCHASE_CREATE_PURCHASE_SHEET": 81,
                "PERMISSION_PURCHASE_UPDATE_PURCHASE_SHEET": 82,
                "PERMISSION_PURCHASE_DELETE_PURCHASE_SHEET": 83,
                "PERMISSION_ENTERPRISE_VIEW_PURCHASER": 90,
                "PERMISSION_ENTERPRISE_CREATE_PURCHASER": 91,
                "PERMISSION_ENTERPRISE_UPDATE_PURCHASER": 92,
                "PERMISSION_ENTERPRISE_DELETE_PURCHASER": 93,
                "PERMISSION_PURCHASE_VIEW_INQUIRY_PRICE": 100,
                "PERMISSION_PURCHASE_IMPORT_INQUIRY_PRICE": 101,
                "PERMISSION_PRODUCTION_LIST_PRODUCETASK": 110,
                "PERMISSION_PRODUCTION_CREATE_PRODUCETASK": 111,
                "PERMISSION_PRODUCTION_UPDATE_PRODUCETASK": 112,
                "PERMISSION_PRODUCTION_DELETE_PRODUCETASK": 113,
                "PERMISSION_PRODUCTION_LIST_PACKTASK": 120,
                "PERMISSION_PRODUCTION_CREATE_PACKTASK": 121,
                "PERMISSION_PRODUCTION_UPDATE_PACKTASK": 122,
                "PERMISSION_PRODUCTION_DELETE_PACKTASK": 123,
                "PERMISSION_PRODUCTION_VIEW_PRODUCEPROGRESS": 130,
                "PERMISSION_PRODUCTION_VIEW_PACKPROGRESS": 131,
                "PERMISSION_PRODUCTION_VIEW_PRODUCEANALYTICS": 132,
                "PERMISSION_PRODUCTION_VIEW_PACKANALYTICS": 133,
                "PERMISSION_PRODUCTION_PRINT_BOX_LABLE": 134,
                "PERMISSION_DELIVERY_VIEW_TASK": 140,
                "PERMISSION_DELIVERY_UPDATE_TASK": 141,
                "PERMISSION_DELIVERY_PRINT_TASK": 142,
                "PERMISSION_ENTERPRISE_VIEW_DRIVER": 150,
                "PERMISSION_ENTERPRISE_CREATE_DRIVER": 151,
                "PERMISSION_ENTERPRISE_UPDATE_DRIVER": 152,
                "PERMISSION_ENTERPRISE_DELETE_DRIVER": 153,
                "PERMISSION_ENTERPRISE_CREATE_DISTRIBUTION_CONTRACTOR": 160,
                "PERMISSION_ENTERPRISE_UPDATE_DISTRIBUTION_CONTRACTOR": 161,
                "PERMISSION_ENTERPRISE_DELETE_DISTRIBUTION_CONTRACTOR": 162,
                "PERMISSION_DELIVERY_VIEW_ROUTE": 170,
                "PERMISSION_DELIVERY_CREATE_ROUTE": 171,
                "PERMISSION_DELIVERY_UPDATE_ROUTE": 172,
                "PERMISSION_DELIVERY_DELETE_ROUTE": 173,
                "PERMISSION_INVENTORY_VIEW_PURCHASE_IN_SHEET": 180,
                "PERMISSION_INVENTORY_CREATE_PURCHASE_IN_SHEET": 181,
                "PERMISSION_INVENTORY_UPDATE_PURCHASE_IN_SHEET": 182,
                "PERMISSION_INVENTORY_SUBMIT_PURCHASE_IN_SHEET": 183,
                "PERMISSION_INVENTORY_APPROVE_PURCHASE_IN_SHEET": 184,
                "PERMISSION_INVENTORY_NOT_APPROVE_PURCHASE_IN_SHEET": 185,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_PURCHASE_IN_SHEET": 186,
                "PERMISSION_INVENTORY_DELETE_PURCHASE_IN_SHEET": 187,
                "PERMISSION_INVENTORY_EXPORT_PURCHASE_IN_SHEET": 188,
                "PERMISSION_INVENTORY_PRINT_PURCHASE_IN_SHEET": 189,
                "PERMISSION_INVENTORY_VIEW_REFUND_OUT_SHEET": 200,
                "PERMISSION_INVENTORY_CREATE_REFUND_OUT_SHEET": 201,
                "PERMISSION_INVENTORY_UPDATE_REFUND_OUT_SHEET": 202,
                "PERMISSION_INVENTORY_SUBMIT_REFUND_OUT_SHEET": 203,
                "PERMISSION_INVENTORY_APPROVE_REFUND_OUT_SHEET": 204,
                "PERMISSION_INVENTORY_NOT_APPROVE_REFUND_OUT_SHEET": 205,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_REFUND_OUT_SHEET": 206,
                "PERMISSION_INVENTORY_DELETE_REFUND_OUT_SHEET": 207,
                "PERMISSION_INVENTORY_EXPORT_REFUND_OUT_SHEET": 208,
                "PERMISSION_INVENTORY_PRINT_REFUND_OUT_SHEET": 209,
                "PERMISSION_INVENTORY_VIEW_SALE_OUT_SHEET": 220,
                "PERMISSION_INVENTORY_CREATE_SALE_OUT_SHEET": 221,
                "PERMISSION_INVENTORY_UPDATE_SALE_OUT_SHEET": 222,
                "PERMISSION_INVENTORY_SUBMIT_SALE_OUT_SHEET": 223,
                "PERMISSION_INVENTORY_APPROVE_SALE_OUT_SHEET": 224,
                "PERMISSION_INVENTORY_NOT_APPROVE_SALE_OUT_SHEET": 225,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_SALE_OUT_SHEET": 226,
                "PERMISSION_INVENTORY_DELETE_SALE_OUT_SHEET": 227,
                "PERMISSION_INVENTORY_EXPORT_SALE_OUT_SHEET": 228,
                "PERMISSION_INVENTORY_PRINT_SALE_OUT_SHEET": 229,
                "PERMISSION_INVENTORY_VIEW_PRODUCT_IN": 230,
                "PERMISSION_INVENTORY_CREATE_PRODUCT_IN": 231,
                "PERMISSION_INVENTORY_UPDATE_PRODUCT_IN": 232,
                "PERMISSION_INVENTORY_SUBMIT_PRODUCT_IN": 233,
                "PERMISSION_INVENTORY_APPROVE_PRODUCT_IN": 234,
                "PERMISSION_INVENTORY_NOT_APPROVE_PRODUCT_IN": 235,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_PRODUCT_IN": 236,
                "PERMISSION_INVENTORY_DELETE_PRODUCT_IN": 237,
                "PERMISSION_INVENTORY_EXPORT_PRODUCT_IN": 238,
                "PERMISSION_INVENTORY_PRINT_PRODUCT_IN": 239,
                "PERMISSION_INVENTORY_VIEW_MATERIAL_IN_250": 250,
                "PERMISSION_INVENTORY_CREATE_MATERIAL_IN_251": 251,
                "PERMISSION_INVENTORY_UPDATE_MATERIAL_IN_252": 252,
                "PERMISSION_INVENTORY_SUBMIT_MATERIAL_IN_253": 253,
                "PERMISSION_INVENTORY_APPROVE_MATERIAL_IN_254": 254,
                "PERMISSION_INVENTORY_NOT_APPROVE_MATERIAL_IN_255": 255,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_MATERIAL_IN_256": 256,
                "PERMISSION_INVENTORY_DELETE_MATERIAL_IN_257": 257,
                "PERMISSION_INVENTORY_EXPORT_MATERIAL_IN_258": 258,
                "PERMISSION_INVENTORY_PRINT_MATERIAL_IN_259": 259,
                "PERMISSION_INVENTORY_VIEW_MATERIAL_OUT": 270,
                "PERMISSION_INVENTORY_CREATE_MATERIAL_OUT": 271,
                "PERMISSION_INVENTORY_UPDATE_MATERIAL_OUT": 272,
                "PERMISSION_INVENTORY_SUBMIT_MATERIAL_OUT": 273,
                "PERMISSION_INVENTORY_APPROVE_MATERIAL_OUT": 274,
                "PERMISSION_INVENTORY_NOT_APPROVE_MATERIAL_OUT": 275,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_MATERIAL_OUT": 276,
                "PERMISSION_INVENTORY_DELETE_MATERIAL_OUT": 277,
                "PERMISSION_INVENTORY_EXPORT_MATERIAL_OUT": 278,
                "PERMISSION_INVENTORY_PRINT_MATERIAL_OUT": 279,
                "PERMISSION_INVENTORY_VIEW_OTHER_IN": 290,
                "PERMISSION_INVENTORY_CREATE_OTHER_IN": 291,
                "PERMISSION_INVENTORY_UPDATE_OTHER_IN": 292,
                "PERMISSION_INVENTORY_SUBMIT_OTHER_IN": 293,
                "PERMISSION_INVENTORY_APPROVE_OTHER_IN": 294,
                "PERMISSION_INVENTORY_NOT_APPROVE_OTHER_IN": 295,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_OTHER_IN": 296,
                "PERMISSION_INVENTORY_DELETE_OTHER_IN": 297,
                "PERMISSION_INVENTORY_EXPORT_OTHER_IN": 298,
                "PERMISSION_INVENTORY_PRINT_OTHER_IN": 299,
                "PERMISSION_INVENTORY_VIEW_OTHER_OUT": 310,
                "PERMISSION_INVENTORY_CREATE_OTHER_OUT": 311,
                "PERMISSION_INVENTORY_UPDATE_OTHER_OUT": 312,
                "PERMISSION_INVENTORY_SUBMIT_OTHER_OUT": 313,
                "PERMISSION_INVENTORY_APPROVE_OTHER_OUT": 314,
                "PERMISSION_INVENTORY_NOT_APPROVE_OTHER_OUT": 315,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_OTHER_OUT": 316,
                "PERMISSION_INVENTORY_DELETE_OTHER_OUT": 317,
                "PERMISSION_INVENTORY_EXPORT_OTHER_OUT": 318,
                "PERMISSION_INVENTORY_PRINT_OTHER_OUT": 319,
                "PERMISSION_INVENTORY_VIEW_ADJUST_SHEET": 330,
                "PERMISSION_INVENTORY_VIEW_INVENTORY_SHEET": 340,
                "PERMISSION_INVENTORY_CREATE_INVENTORY_SHEET": 341,
                "PERMISSION_INVENTORY_UPDATE_INVENTORY_SHEET": 342,
                "PERMISSION_INVENTORY_SUBMIT_INVENTORY_SHEET": 343,
                "PERMISSION_INVENTORY_APPROVE_INVENTORY_SHEET": 344,
                "PERMISSION_INVENTORY_NOT_APPROVE_INVENTORY_SHEET": 345,
                "PERMISSION_INVENTORY_CANCEL_APPROVE_INVENTORY_SHEET": 346,
                "PERMISSION_INVENTORY_EXPORT_INVENTORY_SHEET": 347,
                "PERMISSION_INVENTORY_PRINT_INVENTORY_SHEET": 348,
                "PERMISSION_INVENTORY_DELETE_INVENTORY_SHEET": 349,
                "PERMISSION_INVENTORY_VIEW_STOCK": 360,
                "PERMISSION_INVENTORY_VIEW_STOCK_LIST": 361,
                "PERMISSION_INVENTORY_EXPORT_STOCK_LIST": 362,
                "PERMISSION_INVENTORY_VIEW_IN_STOCK_LOG": 363,
                "PERMISSION_INVENTORY_EXPORT_IN_STOCK_LOG": 364,
                "PERMISSION_INVENTORY_VIEW_OUT_STOCK_LOG": 365,
                "PERMISSION_INVENTORY_EXPORT_OUT_STOCK_LOG": 366,
                "PERMISSION_INVENTORY_VIEW_CHANGE_STOCK_LOG": 367,
                "PERMISSION_INVENTORY_EXPORT_CHANGE_STOCK_LOG": 368,
                "PERMISSION_ENTERPRISE_VIEW_CUSTOMER": 380,
                "PERMISSION_ENTERPRISE_CREATE_CUSTOMER": 381,
                "PERMISSION_ENTERPRISE_UPDATE_CUSTOMER": 382,
                "PERMISSION_ENTERPRISE_DELETE_CUSTOMER": 383,
                "PERMISSION_ENTERPRISE_VIEW_INVITATION_CODE": 390,
                "PERMISSION_ENTERPRISE_VIEW_SCHOOL_CLASS": 520,
                "PERMISSION_ENTERPRISE_CREATE_SCHOOL_CLASS": 521,
                "PERMISSION_ENTERPRISE_UPDATE_SCHOOL_CLASS": 522,
                "PERMISSION_ENTERPRISE_DELETE_SCHOOL_CLASS": 523,
                "PERMISSION_ENTERPRISE_VIEW_STUDENT": 540,
                "PERMISSION_ENTERPRISE_VIEW_STUFF": 541,
                "PERMISSION_ENTERPRISE_VIEW_ESHOP_INVITATION_CODE": 391,
                "PERMISSION_ANALYTICS_VIEW_MENU_SETTLEMENT": 550,
                "PERMISSION_ENTERPRISE_VIEW_SERVICE_PERIOD": 400,
                "PERMISSION_ENTERPRISE_CREATE_SERVICE_PERIOD": 401,
                "PERMISSION_ENTERPRISE_UPDATE_SERVICE_PERIOD": 402,
                "PERMISSION_ENTERPRISE_DELETE_SERVICE_PERIOD": 403,
                "PERMISSION_PREFERENCE_VIEW_APPOINT_TIME_SETTINGS": 410,
                "PERMISSION_PREFERENCE_UPDATE_APPOINT_TIME_SETTINGS": 411,
                "PERMISSION_PREFERENCE_VIEW_PURCHASE_SETTINGS": 420,
                "PERMISSION_PREFERENCE_UPDATE_PURCHASE_SETTINGS": 421,
                "PERMISSION_PRODUCTION_VIEW_SETTINGS": 430,
                "PERMISSION_PRODUCTION_UPDATE_SETTINGS": 431,
                "PERMISSION_PREFERENCE_INVENTORY_SETTINGS": 440,
                "PERMISSION_PREFERENCE_PRODUCTION_SETTINGS": 441,
                "PERMISSION_PREFERENCE_VIEW_IMPORT_TEMPLATE": 450,
                "PERMISSION_PREFERENCE_CREATE_IMPORT_TEMPLATE": 451,
                "PERMISSION_PREFERENCE_UPDATE_IMPORT_TEMPLATE": 452,
                "PERMISSION_PREFERENCE_DELETE_IMPORT_TEMPLATE": 453,
                "PERMISSION_PREFERENCE_VIEW_PRINTING_TEMPLATE": 460,
                "PERMISSION_PREFERENCE_CREATE_PRINTING_TEMPLATE": 461,
                "PERMISSION_PREFERENCE_UPDATE_PRINTING_TEMPLATE": 462,
                "PERMISSION_PREFERENCE_DELETE_PRINTING_TEMPLATE": 463,
                "PERMISSION_PREFERENCE_UPDATE_SOCIAL_SHOP_LAYOUT": 490,
                "PERMISSION_PREFERENCE_UPDATE_EDUCATION_SHOP_LAYOUT": 491,
                "PERMISSION_MES_VIEW_PRODUCE": 470,
                "PERMISSION_MES_VIEW_PACK": 471,
                "PERMISSION_MES_VIEW_SORTING": 472,
                "PERMISSION_SORTING_VIEW_SORTING_INFO": 480,
                "PERMISSION_SORTING_VIEW_SORTING_TASK": 481,
                "PERMISSION_SORTING_EDIT_SORTING_TASK": 482,
                "PERMISSION_SORTING_EXPORT_SORTING_PERFORMANCE": 483
              }
            },
            "GroupUser": {
              "options": {
                "(dao.partition_count)": 10,
                "(dao.model_type)": "TYPE_ENTERPRISE_GROUP_USER"
              },
              "fields": {
                "group_user_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "distribution_contractor_id": {
                  "type": "uint64",
                  "id": 12
                },
                "name": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "is_valid": {
                  "type": "bool",
                  "id": 21
                },
                "type": {
                  "type": "Type",
                  "id": 27,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "attrs": {
                  "type": "Attrs",
                  "id": 28
                },
                "username": {
                  "type": "string",
                  "id": 40
                },
                "phone": {
                  "type": "string",
                  "id": 41
                },
                "email": {
                  "type": "string",
                  "id": 42
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "UNSPECIFIED": 0,
                    "GROUP_ADMIN": 8,
                    "NORMAL": 9
                  }
                },
                "Status": {
                  "values": {
                    "STATUS_UNSPECIFIED": 0,
                    "STATUS_CAN_LOGIN_PURCHASE_APP": 256,
                    "STATUS_CAN_LOGIN_DRIVER_APP": 512
                  }
                },
                "Attrs": {
                  "fields": {
                    "visable_all_stations": {
                      "type": "bool",
                      "id": 1
                    },
                    "visable_station_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 2
                    },
                    "permission_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 3
                    },
                    "bounded_customer_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 4
                    },
                    "distribution_contractor_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 5
                    },
                    "car_license_plate_number": {
                      "type": "string",
                      "id": 6
                    },
                    "id_number": {
                      "type": "string",
                      "id": 7
                    }
                  }
                }
              }
            },
            "Role": {
              "options": {
                "(dao.partition_count)": 10,
                "(dao.model_type)": "TYPE_ENTERPRISE_ROLE"
              },
              "fields": {
                "role_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 2
                },
                "update_time": {
                  "type": "uint64",
                  "id": 3
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 4
                },
                "group_id": {
                  "type": "uint64",
                  "id": 15
                },
                "name": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "description": {
                  "type": "string",
                  "id": 21
                },
                "type": {
                  "type": "Type",
                  "id": 23,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              },
              "reserved": [
                [
                  24,
                  24
                ]
              ],
              "nested": {
                "Type": {
                  "values": {
                    "UNSPECIFIED": 0,
                    "NORMAL": 1,
                    "BUILT_IN_DRIVER": 2,
                    "BUILT_IN_PURCHASER": 3,
                    "BUILT_IN_ADMIN": 4
                  }
                }
              }
            },
            "GroupPermissionRelation": {
              "options": {
                "(dao.partition_count)": 1,
                "(dao.primary_key)": "relation_id"
              },
              "fields": {
                "relation_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 2
                },
                "update_time": {
                  "type": "uint64",
                  "id": 3
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 4
                },
                "group_id": {
                  "type": "uint64",
                  "id": 11
                },
                "permission_id": {
                  "type": "uint64",
                  "id": 12
                }
              }
            },
            "RolePermissionRelation": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.primary_key)": "relation_id"
              },
              "fields": {
                "relation_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 2
                },
                "update_time": {
                  "type": "uint64",
                  "id": 3
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 4
                },
                "role_id": {
                  "type": "uint64",
                  "id": 11
                },
                "permission_id": {
                  "type": "uint64",
                  "id": 12
                },
                "group_id": {
                  "type": "uint64",
                  "id": 13
                }
              }
            },
            "GroupUserRoleRelation": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.primary_key)": "relation_id"
              },
              "fields": {
                "relation_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 2
                },
                "update_time": {
                  "type": "uint64",
                  "id": 3
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 4
                },
                "role_id": {
                  "type": "uint64",
                  "id": 11
                },
                "group_user_id": {
                  "type": "uint64",
                  "id": 12
                },
                "group_id": {
                  "type": "uint64",
                  "id": 13
                }
              }
            },
            "ServicePeriod": {
              "options": {
                "(dao.partition_count)": 10,
                "(dao.model_type)": "TYPE_ENTERPRISE_SERVICE_PERIOD"
              },
              "fields": {
                "service_period_id": {
                  "type": "uint64",
                  "id": 1
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "menu_period_group_id": {
                  "type": "uint64",
                  "id": 11
                },
                "name": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "description": {
                  "type": "string",
                  "id": 21
                },
                "type": {
                  "type": "Type",
                  "id": 30
                },
                "order_create_min_time": {
                  "type": "int64",
                  "id": 22,
                  "options": {
                    "(validate.rules).int64.gte": 0,
                    "(validate.rules).int64.lt": 86400000
                  }
                },
                "order_create_max_time": {
                  "type": "int64",
                  "id": 23,
                  "options": {
                    "(validate.rules).int64.gte": 0,
                    "(validate.rules).int64.lt": 172800000
                  }
                },
                "order_receive_min_time": {
                  "type": "int64",
                  "id": 28,
                  "options": {
                    "(validate.rules).int64.gte": 0,
                    "(validate.rules).int64.lt": 86400000
                  }
                },
                "order_receive_max_time": {
                  "type": "int64",
                  "id": 29,
                  "options": {
                    "(validate.rules).int64.gte": 0,
                    "(validate.rules).int64.lt": 172800000
                  }
                },
                "order_receive_min_date": {
                  "type": "int64",
                  "id": 24,
                  "options": {
                    "(validate.rules).int64.gte": 0,
                    "(validate.rules).int64.lte": 60
                  }
                },
                "order_receive_max_date": {
                  "type": "int64",
                  "id": 25,
                  "options": {
                    "(validate.rules).int64.gte": 0,
                    "(validate.rules).int64.lte": 60
                  }
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_DEFAULT_MENU_PERIOD": 3,
                    "TYPE_CUSTOMIZED_MENU_PERIOD": 4
                  }
                }
              }
            },
            "Country": {
              "options": {
                "(dao.partition_count)": 1
              },
              "fields": {
                "country_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "iso_code": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.len": 2
                  }
                },
                "currency_iso_code": {
                  "type": "string",
                  "id": 21,
                  "options": {
                    "(validate.rules).string.len": 3
                  }
                }
              }
            },
            "Province": {
              "options": {
                "(dao.partition_count)": 1
              },
              "fields": {
                "province_id": {
                  "type": "uint64",
                  "id": 1
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "country_id": {
                  "type": "uint64",
                  "id": 10,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "gov_code": {
                  "type": "string",
                  "id": 21
                },
                "local_name": {
                  "type": "string",
                  "id": 23,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "City": {
              "options": {
                "(dao.partition_count)": 1
              },
              "fields": {
                "city_id": {
                  "type": "uint64",
                  "id": 1
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "country_id": {
                  "type": "uint64",
                  "id": 10,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "province_id": {
                  "type": "uint64",
                  "id": 11,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "gov_code": {
                  "type": "string",
                  "id": 21
                },
                "local_name": {
                  "type": "string",
                  "id": 23,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "District": {
              "options": {
                "(dao.partition_count)": 1
              },
              "fields": {
                "district_id": {
                  "type": "uint64",
                  "id": 1
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "country_id": {
                  "type": "uint64",
                  "id": 10,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "city_id": {
                  "type": "uint64",
                  "id": 11,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "gov_code": {
                  "type": "string",
                  "id": 21
                },
                "local_name": {
                  "type": "string",
                  "id": 23,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "Street": {
              "options": {
                "(dao.partition_count)": 1
              },
              "fields": {
                "street_id": {
                  "type": "uint64",
                  "id": 1
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "country_id": {
                  "type": "uint64",
                  "id": 10,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "district_id": {
                  "type": "uint64",
                  "id": 11,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "gov_code": {
                  "type": "string",
                  "id": 21
                },
                "local_name": {
                  "type": "string",
                  "id": 23,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "Address": {
              "fields": {
                "city_id": {
                  "type": "uint64",
                  "id": 13
                },
                "district_id": {
                  "type": "uint64",
                  "id": 14
                },
                "street_id": {
                  "type": "uint64",
                  "id": 15
                },
                "receiver": {
                  "type": "string",
                  "id": 20
                },
                "phone": {
                  "type": "string",
                  "id": 21
                },
                "address": {
                  "type": "string",
                  "id": 22
                },
                "poi_title": {
                  "type": "string",
                  "id": 25
                },
                "poi_address": {
                  "type": "string",
                  "id": 26
                },
                "geotag": {
                  "type": "Geotag",
                  "id": 23
                },
                "is_default": {
                  "type": "bool",
                  "id": 24
                }
              },
              "reserved": [
                [
                  11,
                  11
                ],
                [
                  12,
                  12
                ]
              ]
            },
            "ChinaVatInvoice": {
              "fields": {
                "company_name": {
                  "type": "string",
                  "id": 1
                },
                "company_address": {
                  "type": "string",
                  "id": 2
                },
                "company_phone": {
                  "type": "string",
                  "id": 3
                },
                "invoice_type": {
                  "type": "InvoiceType",
                  "id": 4
                },
                "taxpayer_identity_number": {
                  "type": "string",
                  "id": 5
                },
                "bank_name": {
                  "type": "string",
                  "id": 7
                },
                "bank_account": {
                  "type": "string",
                  "id": 8
                },
                "bank_card_owner_name": {
                  "type": "string",
                  "id": 11
                },
                "max_invoice_amount": {
                  "type": "string",
                  "id": 9
                },
                "business_license_number": {
                  "type": "string",
                  "id": 10
                },
                "financial_contact_name": {
                  "type": "string",
                  "id": 12
                },
                "financial_contact_phone": {
                  "type": "string",
                  "id": 13
                },
                "taxpayer_type": {
                  "type": "TaxpayerType",
                  "id": 14
                }
              },
              "nested": {
                "InvoiceType": {
                  "values": {
                    "UNSPECIFIED": 0,
                    "VAT_NORMAL": 1,
                    "VAT_SPECIAL": 2
                  }
                },
                "TaxpayerType": {
                  "values": {
                    "TAXPAYER_TYPE_UNSPECIFIED": 0,
                    "TAXPAYER_TYPE_NORMAL": 1,
                    "TAXPAYER_TYPE_SMALL": 2,
                    "TAXPAYER_TYPE_NONE": 3
                  }
                }
              }
            },
            "Geotag": {
              "fields": {
                "latitude": {
                  "type": "string",
                  "id": 1
                },
                "longitude": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CustomerLabelRelation": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.primary_key)": "relation_id"
              },
              "fields": {
                "relation_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "customer_id": {
                  "type": "uint64",
                  "id": 11
                },
                "customer_label_id": {
                  "type": "uint64",
                  "id": 12
                }
              }
            },
            "CustomerLabel": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.model_type)": "TYPE_ENTERPRISE_CUSTOMER_LABEL"
              },
              "fields": {
                "customer_label_id": {
                  "type": "uint64",
                  "id": 1
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "name": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "Customer": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.model_type)": "TYPE_ENTERPRISE_CUSTOMER"
              },
              "fields": {
                "customer_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "parent_id": {
                  "type": "uint64",
                  "id": 11
                },
                "create_group_user_id": {
                  "type": "uint64",
                  "id": 12
                },
                "sales_group_user_id": {
                  "type": "uint64",
                  "id": 13
                },
                "bound_station_id": {
                  "type": "uint64",
                  "id": 15
                },
                "name": {
                  "type": "string",
                  "id": 23,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "remark": {
                  "type": "string",
                  "id": 24
                },
                "customized_code": {
                  "type": "string",
                  "id": 25
                },
                "type": {
                  "type": "Type",
                  "id": 26,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "is_reviewed": {
                  "type": "bool",
                  "id": 27
                },
                "is_in_whitelist": {
                  "type": "bool",
                  "id": 28
                },
                "is_frozen": {
                  "type": "bool",
                  "id": 22
                },
                "level": {
                  "type": "uint32",
                  "id": 33
                },
                "child_number": {
                  "type": "uint32",
                  "id": 34
                },
                "settlement": {
                  "type": "Settlement",
                  "id": 29
                },
                "settlement_method": {
                  "type": "SettlementMethod",
                  "id": 31
                },
                "credit_type": {
                  "type": "CreditType",
                  "id": 32
                },
                "phone": {
                  "type": "string",
                  "id": 50
                },
                "gender": {
                  "type": "common.Gender",
                  "id": 51
                },
                "parent_phone": {
                  "type": "string",
                  "id": 52
                },
                "parent_name": {
                  "type": "string",
                  "id": 53
                },
                "city_id": {
                  "type": "uint64",
                  "id": 40
                },
                "district_id": {
                  "type": "uint64",
                  "id": 41
                },
                "street_id": {
                  "type": "uint64",
                  "id": 42
                },
                "attrs": {
                  "type": "Attrs",
                  "id": 30
                }
              },
              "reserved": [
                [
                  14,
                  14
                ]
              ],
              "nested": {
                "Status": {
                  "values": {
                    "STATUS_UNSPECIFIED": 0,
                    "STATUS_IS_BILL_TARGET": 256,
                    "STATUS_IS_SHIP_TARGET": 512
                  }
                },
                "Attrs": {
                  "fields": {
                    "addresses": {
                      "rule": "repeated",
                      "type": "Address",
                      "id": 1
                    },
                    "parent_ids": {
                      "rule": "repeated",
                      "type": "uint64",
                      "id": 2
                    },
                    "children_number": {
                      "type": "uint32",
                      "id": 5,
                      "options": {
                        "deprecated": true
                      }
                    },
                    "menu_period_relation": {
                      "keyType": "uint64",
                      "type": "uint64",
                      "id": 6
                    }
                  }
                },
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_VIRTUAL": 1,
                    "TYPE_VIRTUAL_STUDENT": 3,
                    "TYPE_VIRTUAL_SCHOOL_STAFF": 4,
                    "TYPE_SOCIAL": 2,
                    "TYPE_SCHOOL": 5,
                    "TYPE_CLASS": 6
                  }
                },
                "SettlementMethod": {
                  "values": {
                    "SETTLEMENT_METHOD_UNSPECIFIED": 0,
                    "SETTLEMENT_METHOD_ADVANCE_PAYMENT": 1,
                    "SETTLEMENT_METHOD_DEFERRED_PAYMENT": 2
                  }
                },
                "Settlement": {
                  "fields": {
                    "weekly_or_monthly_credit_start_day": {
                      "type": "int32",
                      "id": 12
                    },
                    "weekly_or_monthly_credit_settle_day": {
                      "type": "int32",
                      "id": 13
                    },
                    "customized_credit_start_time": {
                      "type": "int32",
                      "id": 19
                    },
                    "customized_credit_proied_days": {
                      "type": "int32",
                      "id": 16
                    },
                    "customized_credit_deley_days": {
                      "type": "int32",
                      "id": 17
                    },
                    "china_vat_invoice": {
                      "type": "ChinaVatInvoice",
                      "id": 20
                    }
                  },
                  "reserved": [
                    [
                      6,
                      6
                    ],
                    [
                      7,
                      7
                    ]
                  ]
                }
              }
            },
            "CustomerUser": {
              "options": {
                "(dao.partition_count)": 1,
                "(dao.model_type)": "TYPE_ENTERPRISE_CUSTOMER_USER"
              },
              "fields": {
                "customer_user_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "customer_id": {
                  "type": "uint64",
                  "id": 11
                },
                "account_id": {
                  "type": "uint64",
                  "id": 12
                },
                "name": {
                  "type": "string",
                  "id": 20
                },
                "username": {
                  "type": "string",
                  "id": 40
                },
                "phone": {
                  "type": "string",
                  "id": 41
                },
                "email": {
                  "type": "string",
                  "id": 42
                }
              }
            },
            "CustomerServicePeriodRelation": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.primary_key)": "relation_id"
              },
              "fields": {
                "relation_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 12
                },
                "customer_id": {
                  "type": "uint64",
                  "id": 10
                },
                "service_period_id": {
                  "type": "uint64",
                  "id": 11
                }
              }
            },
            "InvitationCode": {
              "options": {
                "(dao.partition_count)": 100,
                "(dao.model_type)": "TYPE_ENTERPRISE_INVITATION_CODE"
              },
              "fields": {
                "invitation_code_id": {
                  "type": "uint64",
                  "id": 1
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "group_id": {
                  "type": "uint64",
                  "id": 10
                },
                "service_period_id": {
                  "type": "uint64",
                  "id": 11
                },
                "quotation_id": {
                  "type": "uint64",
                  "id": 12
                },
                "type": {
                  "type": "Type",
                  "id": 21,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "used": {
                  "type": "bool",
                  "id": 20
                },
                "root_customer_id": {
                  "type": "uint64",
                  "id": 22
                },
                "text": {
                  "type": "string",
                  "id": 23
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TEMPORARY": 1,
                    "FIXED": 2,
                    "EDUCATION_FIXED": 3
                  }
                }
              }
            },
            "CreateAccountParams": {
              "fields": {
                "username": {
                  "type": "string",
                  "id": 30
                },
                "password": {
                  "type": "string",
                  "id": 31
                },
                "phone": {
                  "type": "string",
                  "id": 32
                },
                "email": {
                  "type": "string",
                  "id": 33
                },
                "wechat_openid": {
                  "type": "string",
                  "id": 34
                },
                "wechat_unionid": {
                  "type": "string",
                  "id": 35
                },
                "wechat_nickname": {
                  "type": "string",
                  "id": 36
                },
                "wechat_avatar": {
                  "type": "string",
                  "id": 37
                }
              }
            },
            "UpdateAccountParams": {
              "fields": {
                "password": {
                  "type": "string",
                  "id": 31,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "UpdateCurrentAccountParams": {
              "fields": {
                "password": {
                  "type": "string",
                  "id": 31,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                },
                "origin_password": {
                  "type": "string",
                  "id": 51,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "InitializeRegionRequest": {
              "fields": {
                "testing": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "InitializeRegionResponse": {
              "fields": {}
            },
            "GetGroupRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "GetGroupResponse": {
              "fields": {
                "group": {
                  "type": "Group",
                  "id": 1
                }
              }
            },
            "ListGroupRequest": {
              "fields": {
                "group_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListGroupResponse": {
              "fields": {
                "groups": {
                  "rule": "repeated",
                  "type": "Group",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateGroupRequest": {
              "fields": {
                "group": {
                  "type": "Group",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateGroupResponse": {
              "fields": {
                "group": {
                  "type": "Group",
                  "id": 1
                }
              }
            },
            "UpdateGroupRequest": {
              "fields": {
                "group": {
                  "type": "Group",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateGroupResponse": {
              "fields": {
                "group": {
                  "type": "Group",
                  "id": 1
                }
              }
            },
            "UpdateGroupExtraInfoRequest": {
              "fields": {
                "group_extra_info": {
                  "type": "GroupExtraInfo",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateGroupExtraInfoResponse": {
              "fields": {
                "group_extra_info": {
                  "type": "GroupExtraInfo",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "GetGroupExtraInfoRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetGroupExtraInfoResponse": {
              "fields": {
                "group_extra_info": {
                  "type": "GroupExtraInfo",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListGroupTimeZoneRequest": {
              "fields": {}
            },
            "ListGroupTimeZoneResponse": {
              "fields": {
                "time_zones": {
                  "keyType": "uint64",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListPermissionGroupRequest": {
              "fields": {
                "permissions": {
                  "rule": "repeated",
                  "type": "Permission",
                  "id": 1,
                  "options": {
                    "(validate.rules).repeated.min_items": 1,
                    "(validate.rules).repeated.max_items": 10
                  }
                }
              }
            },
            "ListPermissionGroupResponse": {
              "fields": {
                "permissions": {
                  "keyType": "uint32",
                  "type": "common.Uint64Set",
                  "id": 1
                }
              }
            },
            "GetPermissionGroupRequest": {
              "fields": {
                "permission": {
                  "type": "Permission",
                  "id": 1
                }
              }
            },
            "GetPermissionGroupResponse": {
              "fields": {
                "group_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "UpdatePermissionGroupRequest": {
              "fields": {
                "permission": {
                  "type": "Permission",
                  "id": 1
                },
                "group_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "UpdatePermissionGroupResponse": {
              "fields": {}
            },
            "GetGroupPermissionRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetGroupPermissionResponse": {
              "fields": {
                "permissions": {
                  "rule": "repeated",
                  "type": "Permission",
                  "id": 1
                }
              }
            },
            "UpdateGroupPermissionRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                },
                "permissions": {
                  "rule": "repeated",
                  "type": "Permission",
                  "id": 2
                }
              }
            },
            "UpdateGroupPermissionResponse": {
              "fields": {}
            },
            "GetStationRequest": {
              "fields": {
                "station_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "GetStationResponse": {
              "fields": {
                "station": {
                  "type": "Station",
                  "id": 1
                }
              }
            },
            "ListStationRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListStationResponse": {
              "fields": {
                "stations": {
                  "rule": "repeated",
                  "type": "Station",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateStationRequest": {
              "fields": {
                "station": {
                  "type": "Station",
                  "id": 1
                }
              }
            },
            "CreateStationResponse": {
              "fields": {
                "station": {
                  "type": "Station",
                  "id": 1
                }
              }
            },
            "UpdateStationRequest": {
              "fields": {
                "station": {
                  "type": "Station",
                  "id": 1
                }
              }
            },
            "UpdateStationResponse": {
              "fields": {
                "station": {
                  "type": "Station",
                  "id": 1
                }
              }
            },
            "UpdateStationAvailableCityRequest": {
              "fields": {
                "station_id": {
                  "type": "uint64",
                  "id": 1
                },
                "available_city_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "UpdateStationAvailableCityResponse": {
              "fields": {
                "station": {
                  "type": "Station",
                  "id": 1
                }
              }
            },
            "GetSupplierRequest": {
              "fields": {
                "supplier_id": {
                  "type": "uint64",
                  "id": 1
                },
                "customized_code": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "GetSupplierResponse": {
              "fields": {
                "supplier": {
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "GetManySupplierRequest": {
              "fields": {
                "supplier_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetManySupplierResponse": {
              "fields": {
                "suppliers": {
                  "keyType": "uint64",
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "ListSupplierRequest": {
              "fields": {
                "paging": {
                  "type": "common.PagingParams",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "q": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListSupplierResponse": {
              "fields": {
                "suppliers": {
                  "rule": "repeated",
                  "type": "Supplier",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateSupplierRequest": {
              "fields": {
                "supplier": {
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "CreateSupplierResponse": {
              "fields": {
                "supplier": {
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "UpdateSupplierRequest": {
              "fields": {
                "supplier": {
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "UpdateSupplierResponse": {
              "fields": {
                "supplier": {
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "DeleteSupplierRequest": {
              "fields": {
                "supplier_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "DeleteSupplierResponse": {
              "fields": {
                "supplier": {
                  "type": "Supplier",
                  "id": 1
                }
              }
            },
            "CleanSupplierRequest": {
              "fields": {}
            },
            "CleanSupplierResponse": {
              "fields": {}
            },
            "BatchExportSupplierRequest": {
              "fields": {
                "q": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "BatchExportSupplierResponse": {
              "fields": {
                "task_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetGroupUserRequest": {
              "fields": {
                "group_user_id": {
                  "type": "uint64",
                  "id": 1
                },
                "account_id": {
                  "type": "uint64",
                  "id": 4
                },
                "username": {
                  "type": "string",
                  "id": 3
                },
                "need_distribution_contractor": {
                  "type": "bool",
                  "id": 2
                },
                "need_roles": {
                  "type": "bool",
                  "id": 11
                },
                "need_permissions": {
                  "type": "bool",
                  "id": 12
                }
              }
            },
            "GetGroupUserResponse": {
              "fields": {
                "group_user": {
                  "type": "GroupUser",
                  "id": 1
                },
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 2
                },
                "roles": {
                  "keyType": "uint64",
                  "type": "Role",
                  "id": 4
                },
                "permissions": {
                  "rule": "repeated",
                  "type": "Permission",
                  "id": 5
                }
              }
            },
            "GetManyGroupUserRequest": {
              "fields": {
                "group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetManyGroupUserResponse": {
              "fields": {
                "group_users": {
                  "keyType": "uint64",
                  "type": "GroupUser",
                  "id": 1
                }
              }
            },
            "ListGroupUserRequest": {
              "fields": {
                "group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 3
                },
                "account_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 4
                },
                "role_types": {
                  "rule": "repeated",
                  "type": "Role.Type",
                  "id": 5
                },
                "q": {
                  "type": "string",
                  "id": 6
                },
                "is_valid": {
                  "type": "common.Filters.Bool",
                  "id": 7
                },
                "need_roles": {
                  "type": "bool",
                  "id": 11
                },
                "need_distribution_contractor": {
                  "type": "bool",
                  "id": 12
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 13,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListGroupUserResponse": {
              "fields": {
                "group_users": {
                  "rule": "repeated",
                  "type": "GroupUser",
                  "id": 1
                },
                "role_relation": {
                  "keyType": "uint64",
                  "type": "common.Uint64Set",
                  "id": 2
                },
                "roles": {
                  "keyType": "uint64",
                  "type": "Role",
                  "id": 4
                },
                "distribution_contractors": {
                  "keyType": "uint64",
                  "type": "DistributionContractor",
                  "id": 3
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 6,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateGroupUserRequest": {
              "fields": {
                "group_user": {
                  "type": "GroupUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "account": {
                  "type": "CreateAccountParams",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "bind_to_driver_role": {
                  "type": "bool",
                  "id": 4
                },
                "bind_to_purchaser_role": {
                  "type": "bool",
                  "id": 5
                },
                "role_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 6
                }
              }
            },
            "CreateGroupUserResponse": {
              "fields": {
                "group_user": {
                  "type": "GroupUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateGroupUserRequest": {
              "fields": {
                "group_user": {
                  "type": "GroupUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "account": {
                  "type": "UpdateAccountParams",
                  "id": 2
                }
              }
            },
            "UpdateGroupUserPasswordRequest": {
              "fields": {
                "account": {
                  "type": "UpdateCurrentAccountParams",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateGroupUserPasswordResponse": {
              "fields": {}
            },
            "UpdateGroupUserResponse": {
              "fields": {
                "group_user": {
                  "type": "GroupUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "DeleteGroupUserRequest": {
              "fields": {
                "group_user_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteGroupUserResponse": {
              "fields": {
                "group_user": {
                  "type": "GroupUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateGroupUserRoleRequest": {
              "fields": {
                "group_user_id": {
                  "type": "uint64",
                  "id": 1
                },
                "role_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "UpdateGroupUserRoleResponse": {
              "fields": {}
            },
            "GetRoleRequest": {
              "fields": {
                "role_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "need_permissions": {
                  "type": "bool",
                  "id": 2
                },
                "need_group_users": {
                  "type": "bool",
                  "id": 3
                }
              }
            },
            "GetRoleResponse": {
              "fields": {
                "role": {
                  "type": "Role",
                  "id": 1
                },
                "permissions": {
                  "rule": "repeated",
                  "type": "Permission",
                  "id": 2
                },
                "group_users": {
                  "rule": "repeated",
                  "type": "GroupUser",
                  "id": 3
                }
              }
            },
            "ListRoleRequest": {
              "fields": {
                "station_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                },
                "role_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 3
                },
                "q": {
                  "type": "string",
                  "id": 8
                },
                "types": {
                  "rule": "repeated",
                  "type": "Role.Type",
                  "id": 6
                },
                "need_group_users": {
                  "type": "bool",
                  "id": 4
                },
                "need_permissions": {
                  "type": "bool",
                  "id": 7
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 5,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              },
              "reserved": [
                [
                  1,
                  1
                ]
              ]
            },
            "ListRoleResponse": {
              "fields": {
                "roles": {
                  "rule": "repeated",
                  "type": "Role",
                  "id": 1
                },
                "group_user_relation": {
                  "keyType": "uint64",
                  "type": "common.Uint64Set",
                  "id": 2
                },
                "group_users": {
                  "keyType": "uint64",
                  "type": "GroupUser",
                  "id": 5
                },
                "permissions": {
                  "keyType": "uint64",
                  "type": "PermissionSet",
                  "id": 4
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 3,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              },
              "nested": {
                "PermissionSet": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "Permission",
                      "id": 1
                    }
                  }
                }
              }
            },
            "CreateRoleRequest": {
              "fields": {
                "role": {
                  "type": "Role",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateRoleResponse": {
              "fields": {
                "role": {
                  "type": "Role",
                  "id": 1
                }
              }
            },
            "UpdateRoleRequest": {
              "fields": {
                "role": {
                  "type": "Role",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateRoleResponse": {
              "fields": {
                "role": {
                  "type": "Role",
                  "id": 1
                }
              }
            },
            "DeleteRoleRequest": {
              "fields": {
                "role_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteRoleResponse": {
              "fields": {
                "role": {
                  "type": "Role",
                  "id": 1
                }
              }
            },
            "UpdateRolePermissionRequest": {
              "fields": {
                "role_id": {
                  "type": "uint64",
                  "id": 1
                },
                "permissions": {
                  "rule": "repeated",
                  "type": "Permission",
                  "id": 2
                }
              }
            },
            "UpdateRolePermissionResponse": {
              "fields": {}
            },
            "UpdateRoleGroupUserRequest": {
              "fields": {
                "role_id": {
                  "type": "uint64",
                  "id": 1
                },
                "group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "UpdateRoleGroupUserResponse": {
              "fields": {}
            },
            "GetServicePeriodRequest": {
              "fields": {
                "service_period_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "revision": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "GetServicePeriodResponse": {
              "fields": {
                "service_period": {
                  "type": "ServicePeriod",
                  "id": 1
                }
              }
            },
            "GetManyServicePeriodRequest": {
              "fields": {
                "service_period_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetManyServicePeriodResponse": {
              "fields": {
                "service_periods": {
                  "keyType": "uint64",
                  "type": "ServicePeriod",
                  "id": 1
                }
              }
            },
            "ListServicePeriodRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                },
                "station_id": {
                  "type": "uint64",
                  "id": 2
                },
                "service_period_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 3
                },
                "service_period_type": {
                  "type": "ServicePeriod.Type",
                  "id": 6,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 5,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListServicePeriodResponse": {
              "fields": {
                "service_periods": {
                  "rule": "repeated",
                  "type": "ServicePeriod",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateServicePeriodRequest": {
              "fields": {
                "service_period": {
                  "type": "ServicePeriod",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateServicePeriodResponse": {
              "fields": {
                "service_period": {
                  "type": "ServicePeriod",
                  "id": 1
                }
              }
            },
            "UpdateServicePeriodRequest": {
              "fields": {
                "service_period": {
                  "type": "ServicePeriod",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateServicePeriodResponse": {
              "fields": {
                "service_period": {
                  "type": "ServicePeriod",
                  "id": 1
                }
              }
            },
            "DeleteServicePeriodRequest": {
              "fields": {
                "service_period_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteServicePeriodResponse": {
              "fields": {
                "service_period": {
                  "type": "ServicePeriod",
                  "id": 1
                }
              }
            },
            "CleanServicePeriodRequest": {
              "fields": {}
            },
            "CleanServicePeriodResponse": {
              "fields": {}
            },
            "GetCustomerRequest": {
              "fields": {
                "customer_id": {
                  "type": "uint64",
                  "id": 1
                },
                "customer_customized_code": {
                  "type": "string",
                  "id": 5
                },
                "need_quotations": {
                  "type": "bool",
                  "id": 2
                },
                "need_customer_label": {
                  "type": "bool",
                  "id": 3
                },
                "need_service_period": {
                  "type": "bool",
                  "id": 4
                },
                "need_menus": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "GetCustomerResponse": {
              "fields": {
                "customer": {
                  "type": "Customer",
                  "id": 1
                },
                "quotation_relations": {
                  "rule": "repeated",
                  "type": "QuotationCustomerRelation",
                  "id": 2
                },
                "menu_relations": {
                  "rule": "repeated",
                  "type": "MenuCustomerRelation",
                  "id": 3
                },
                "customer_labels": {
                  "keyType": "uint64",
                  "type": "CustomerLabel",
                  "id": 21
                },
                "service_periods": {
                  "keyType": "uint64",
                  "type": "ServicePeriod",
                  "id": 22
                }
              }
            },
            "GetManyCustomerRequest": {
              "fields": {
                "customer_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetManyCustomerResponse": {
              "fields": {
                "customers": {
                  "keyType": "uint64",
                  "type": "Customer",
                  "id": 1
                }
              }
            },
            "ListCustomerRequest": {
              "fields": {
                "paging": {
                  "type": "common.PagingParams",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "need_quotations": {
                  "type": "bool",
                  "id": 2
                },
                "need_group_users": {
                  "type": "bool",
                  "id": 3
                },
                "need_service_periods": {
                  "type": "bool",
                  "id": 4
                },
                "need_deleted": {
                  "type": "bool",
                  "id": 5
                },
                "need_customer_label": {
                  "type": "bool",
                  "id": 6
                },
                "need_child_customers": {
                  "type": "bool",
                  "id": 7
                },
                "need_menus": {
                  "type": "bool",
                  "id": 8
                },
                "is_frozen": {
                  "type": "common.Filters.Bool",
                  "id": 10
                },
                "is_in_whitelist": {
                  "type": "common.Filters.Bool",
                  "id": 11
                },
                "credit_types": {
                  "rule": "repeated",
                  "type": "CreditType",
                  "id": 12
                },
                "quotation_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 13
                },
                "service_period_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 14
                },
                "create_group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 15
                },
                "sales_group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 16
                },
                "customer_label_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 26
                },
                "q": {
                  "type": "string",
                  "id": 17
                },
                "parent_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 18
                },
                "level": {
                  "type": "uint32",
                  "id": 19
                },
                "is_bill_target": {
                  "type": "common.Filters.Bool",
                  "id": 20
                },
                "is_ship_target": {
                  "type": "common.Filters.Bool",
                  "id": 21
                },
                "city_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 22
                },
                "district_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 23
                },
                "street_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 25
                },
                "customer_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 24
                },
                "type": {
                  "type": "Customer.Type",
                  "id": 27
                }
              }
            },
            "ListCustomerResponse": {
              "fields": {
                "customers": {
                  "rule": "repeated",
                  "type": "Customer",
                  "id": 1,
                  "options": {
                    "(validate.rules).repeated.min_items": 0
                  }
                },
                "quotation_relations": {
                  "rule": "repeated",
                  "type": "QuotationCustomerRelation",
                  "id": 3
                },
                "menu_relations": {
                  "rule": "repeated",
                  "type": "MenuCustomerRelation",
                  "id": 5
                },
                "service_period_relation": {
                  "keyType": "uint64",
                  "type": "common.Uint64Set",
                  "id": 6
                },
                "service_periods": {
                  "keyType": "uint64",
                  "type": "ServicePeriod",
                  "id": 7
                },
                "customer_label_relation": {
                  "keyType": "uint64",
                  "type": "common.Uint64Set",
                  "id": 20
                },
                "customer_labels": {
                  "keyType": "uint64",
                  "type": "CustomerLabel",
                  "id": 21
                },
                "group_users": {
                  "keyType": "uint64",
                  "type": "GroupUser",
                  "id": 4
                },
                "child_customer_relation": {
                  "keyType": "uint64",
                  "type": "common.Uint64Set",
                  "id": 22
                },
                "child_customers": {
                  "keyType": "uint64",
                  "type": "Customer",
                  "id": 23
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 8,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateCustomerRequest": {
              "fields": {
                "customer": {
                  "type": "Customer",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "invitation_code_id": {
                  "type": "uint64",
                  "id": 2
                },
                "quotation_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 3
                },
                "service_period_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 4
                },
                "customer_label_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 5
                }
              }
            },
            "CreateCustomerResponse": {
              "fields": {
                "customer": {
                  "type": "Customer",
                  "id": 1
                }
              }
            },
            "UpdateCustomerRequest": {
              "fields": {
                "customer": {
                  "type": "Customer",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "quotation_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                },
                "service_period_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 3
                },
                "customer_label_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 4
                }
              }
            },
            "UpdateCustomerResponse": {
              "fields": {
                "customer": {
                  "type": "Customer",
                  "id": 1
                }
              }
            },
            "DeleteCustomerRequest": {
              "fields": {
                "customer_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteCustomerResponse": {
              "fields": {
                "customer": {
                  "type": "Customer",
                  "id": 1
                }
              }
            },
            "CleanCustomerRequest": {
              "fields": {}
            },
            "CleanCustomerResponse": {
              "fields": {}
            },
            "BatchExportCustomerRequest": {
              "fields": {
                "customer_type": {
                  "type": "Customer.Type",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "BatchExportCustomerResponse": {
              "fields": {
                "task_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "BatchImportCustomerRequest": {
              "fields": {
                "customer_type": {
                  "type": "Customer.Type",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "file_url": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "BatchImportCustomerResponse": {
              "fields": {
                "task_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetBatchImportCustomerTemplateRequest": {
              "fields": {
                "customer_type": {
                  "type": "Customer.Type",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "GetBatchImportCustomerTemplateResponse": {
              "fields": {
                "file_url": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "(validate.rules).string.min_len": 1
                  }
                }
              }
            },
            "CountNewCustomerRequest": {
              "fields": {
                "begin_datetime": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gte": 1
                  }
                },
                "end_datetime": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "(validate.rules).uint64.gte": 1
                  }
                }
              }
            },
            "CountNewCustomerResponse": {
              "fields": {
                "ranges": {
                  "rule": "repeated",
                  "type": "Range",
                  "id": 1
                }
              },
              "nested": {
                "Range": {
                  "fields": {
                    "begin_datetime": {
                      "type": "uint64",
                      "id": 1
                    },
                    "end_datetime": {
                      "type": "uint64",
                      "id": 2
                    },
                    "count": {
                      "type": "uint32",
                      "id": 3
                    }
                  }
                }
              }
            },
            "QuotationCustomerRelation": {
              "fields": {
                "station_id": {
                  "type": "uint64",
                  "id": 1
                },
                "customer_id": {
                  "type": "uint64",
                  "id": 2
                },
                "quotation_id": {
                  "type": "uint64",
                  "id": 3
                }
              }
            },
            "MenuCustomerRelation": {
              "fields": {
                "station_id": {
                  "type": "uint64",
                  "id": 1
                },
                "customer_id": {
                  "type": "uint64",
                  "id": 2
                },
                "menu_id": {
                  "type": "uint64",
                  "id": 3
                },
                "customer_type": {
                  "type": "Customer.Type",
                  "id": 4
                }
              }
            },
            "CreateCustomerTreeRequest": {
              "fields": {
                "root_customer_request": {
                  "type": "CreateCustomerRequest",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "child_customer_request": {
                  "type": "CreateCustomerRequest",
                  "id": 2
                },
                "root_customer_user_request": {
                  "type": "CreateCustomerUserRequest",
                  "id": 3
                }
              }
            },
            "CreateCustomerTreeResponse": {
              "fields": {
                "root_customer_response": {
                  "type": "CreateCustomerResponse",
                  "id": 1
                },
                "child_customer_response": {
                  "type": "CreateCustomerResponse",
                  "id": 2
                },
                "root_customer_user_response": {
                  "type": "CreateCustomerUserResponse",
                  "id": 3
                }
              }
            },
            "GetCustomerUserRequest": {
              "fields": {
                "customer_user_id": {
                  "type": "uint64",
                  "id": 1
                },
                "account_id": {
                  "type": "uint64",
                  "id": 2
                },
                "need_account": {
                  "type": "bool",
                  "id": 3
                }
              }
            },
            "GetCustomerUserResponse": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1
                },
                "account": {
                  "type": "account.Account",
                  "id": 2
                }
              }
            },
            "InternalGetCustomerUserRequest": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "group_id": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "InternalGetCustomerUserResponse": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1
                }
              }
            },
            "GetManyCustomerUserRequest": {
              "fields": {
                "customer_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetManyCustomerUserResponse": {
              "fields": {
                "customer_users": {
                  "keyType": "uint64",
                  "type": "CustomerUser",
                  "id": 1
                }
              }
            },
            "ListCustomerUserRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "customer_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 4
                },
                "account_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                },
                "customer_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 3
                },
                "q": {
                  "type": "string",
                  "id": 6
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 5,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListCustomerUserResponse": {
              "fields": {
                "customer_users": {
                  "rule": "repeated",
                  "type": "CustomerUser",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateCustomerUserRequest": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "account": {
                  "type": "CreateAccountParams",
                  "id": 2
                }
              }
            },
            "CreateCustomerUserResponse": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1
                }
              }
            },
            "UpdateCustomerUserRequest": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "account": {
                  "type": "UpdateAccountParams",
                  "id": 2
                }
              }
            },
            "UpdateCustomerUserResponse": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1
                }
              }
            },
            "UpdateCustomerUserPasswordRequest": {
              "fields": {
                "account": {
                  "type": "UpdateCurrentAccountParams",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "UpdateCustomerUserPasswordResponse": {
              "fields": {}
            },
            "DeleteCustomerUserRequest": {
              "fields": {
                "customer_user_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteCustomerUserResponse": {
              "fields": {
                "customer_user": {
                  "type": "CustomerUser",
                  "id": 1
                }
              }
            },
            "CleanCustomerUserRequest": {
              "fields": {}
            },
            "CleanCustomerUserResponse": {
              "fields": {}
            },
            "GetCustomerLabelRequest": {
              "fields": {
                "customer_label_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetCustomerLabelResponse": {
              "fields": {
                "customer_label": {
                  "type": "CustomerLabel",
                  "id": 1
                }
              }
            },
            "ListCustomerLabelRequest": {
              "fields": {
                "q": {
                  "type": "string",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 10,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListCustomerLabelResponse": {
              "fields": {
                "customer_labels": {
                  "rule": "repeated",
                  "type": "CustomerLabel",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateCustomerLabelRequest": {
              "fields": {
                "customer_label": {
                  "type": "CustomerLabel",
                  "id": 1
                }
              }
            },
            "CreateCustomerLabelResponse": {
              "fields": {
                "customer_label": {
                  "type": "CustomerLabel",
                  "id": 1
                }
              }
            },
            "UpdateCustomerLabelRequest": {
              "fields": {
                "customer_label": {
                  "type": "CustomerLabel",
                  "id": 1
                }
              }
            },
            "UpdateCustomerLabelResponse": {
              "fields": {
                "customer_label": {
                  "type": "CustomerLabel",
                  "id": 1
                }
              }
            },
            "DeleteCustomerLabelRequest": {
              "fields": {
                "customer_label_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "DeleteCustomerLabelResponse": {
              "fields": {
                "customer_label": {
                  "type": "CustomerLabel",
                  "id": 1
                }
              }
            },
            "GetDistributionContractorRequest": {
              "fields": {
                "distribution_contractor_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                },
                "need_group_user_ids": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "GetDistributionContractorResponse": {
              "fields": {
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 1
                },
                "group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "ListDistributionContractorRequest": {
              "fields": {
                "group_id": {
                  "type": "uint64",
                  "id": 1
                },
                "need_group_users": {
                  "type": "bool",
                  "id": 2
                },
                "q": {
                  "type": "string",
                  "id": 4
                },
                "paging": {
                  "type": "common.PagingParams",
                  "id": 10,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "ListDistributionContractorResponse": {
              "fields": {
                "distribution_contractors": {
                  "rule": "repeated",
                  "type": "DistributionContractor",
                  "id": 1
                },
                "group_user_ids": {
                  "keyType": "uint64",
                  "type": "common.Uint64Set",
                  "id": 2
                },
                "group_users": {
                  "keyType": "uint64",
                  "type": "GroupUser",
                  "id": 4
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 3,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateDistributionContractorRequest": {
              "fields": {
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateDistributionContractorResponse": {
              "fields": {
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 1
                }
              }
            },
            "UpdateDistributionContractorRequest": {
              "fields": {
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 1
                },
                "group_user_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "UpdateDistributionContractorResponse": {
              "fields": {
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 1
                }
              }
            },
            "DeleteDistributionContractorRequest": {
              "fields": {
                "distribution_contractor_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteDistributionContractorResponse": {
              "fields": {
                "distribution_contractor": {
                  "type": "DistributionContractor",
                  "id": 1
                }
              }
            },
            "ListCountryRequest": {
              "fields": {
                "country_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "ListCountryResponse": {
              "fields": {
                "countries": {
                  "rule": "repeated",
                  "type": "Country",
                  "id": 1
                }
              }
            },
            "ListProvinceRequest": {
              "fields": {
                "country_id": {
                  "type": "uint64",
                  "id": 1
                },
                "province_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "ListProvinceResponse": {
              "fields": {
                "provinces": {
                  "rule": "repeated",
                  "type": "Province",
                  "id": 1,
                  "options": {
                    "(validate.rules).repeated.min_items": 0
                  }
                }
              }
            },
            "ListCityRequest": {
              "fields": {
                "province_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                },
                "city_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "ListCityResponse": {
              "fields": {
                "cities": {
                  "rule": "repeated",
                  "type": "City",
                  "id": 1,
                  "options": {
                    "(validate.rules).repeated.min_items": 0
                  }
                }
              }
            },
            "ListDistrictRequest": {
              "fields": {
                "city_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                },
                "district_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "ListDistrictResponse": {
              "fields": {
                "districts": {
                  "rule": "repeated",
                  "type": "District",
                  "id": 1,
                  "options": {
                    "(validate.rules).repeated.min_items": 0
                  }
                }
              }
            },
            "ListStreetRequest": {
              "fields": {
                "district_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                },
                "street_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "ListStreetResponse": {
              "fields": {
                "streets": {
                  "rule": "repeated",
                  "type": "Street",
                  "id": 1,
                  "options": {
                    "(validate.rules).repeated.min_items": 0
                  }
                }
              }
            },
            "ListInvitationCodeRequest": {
              "fields": {
                "paging": {
                  "type": "common.PagingParams",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "invitation_code_types": {
                  "rule": "repeated",
                  "type": "InvitationCode.Type",
                  "id": 2
                }
              }
            },
            "ListInvitationCodeResponse": {
              "fields": {
                "invitation_codes": {
                  "rule": "repeated",
                  "type": "InvitationCode",
                  "id": 1
                },
                "paging": {
                  "type": "common.PagingResult",
                  "id": 2,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "GetInvitationCodeRequest": {
              "fields": {
                "invitation_code_id": {
                  "type": "uint64",
                  "id": 1
                },
                "text": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "GetInvitationCodeResponse": {
              "fields": {
                "invitation_code": {
                  "type": "InvitationCode",
                  "id": 1
                }
              }
            },
            "CreateInvitationCodeRequest": {
              "fields": {
                "invitation_code": {
                  "type": "InvitationCode",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                }
              }
            },
            "CreateInvitationCodeResponse": {
              "fields": {
                "invitation_code": {
                  "type": "InvitationCode",
                  "id": 1
                }
              }
            },
            "DeleteInvitationCodeRequest": {
              "fields": {
                "invitation_code_id": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "(validate.rules).uint64.gt": 0
                  }
                }
              }
            },
            "DeleteInvitationCodeResponse": {
              "fields": {
                "invitation_code": {
                  "type": "InvitationCode",
                  "id": 1
                }
              }
            },
            "CleanInvitationCodeRequest": {
              "fields": {}
            },
            "CleanInvitationCodeResponse": {
              "fields": {}
            },
            "GetUserInfoRequest": {
              "fields": {}
            },
            "GetUserInfoResponse": {
              "fields": {
                "user_info": {
                  "type": "UserInfo",
                  "id": 1
                }
              },
              "nested": {
                "UserInfo": {
                  "fields": {
                    "client_id": {
                      "type": "uint64",
                      "id": 1
                    },
                    "account_id": {
                      "type": "uint64",
                      "id": 2
                    },
                    "group_id": {
                      "type": "uint64",
                      "id": 3
                    },
                    "station_id": {
                      "type": "uint64",
                      "id": 4
                    },
                    "group": {
                      "type": "Group",
                      "id": 100
                    },
                    "group_user": {
                      "type": "GroupUser",
                      "id": 101
                    },
                    "customer": {
                      "type": "Customer",
                      "id": 200
                    },
                    "customer_user": {
                      "type": "CustomerUser",
                      "id": 201
                    }
                  }
                }
              }
            }
          }
        },
        "account": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/account/proto;proto"
          },
          "nested": {
            "AccountService": {
              "methods": {
                "CreateAccount": {
                  "requestType": "CreateAccountRequest",
                  "responseType": "CreateAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/CreateAccount"
                  }
                },
                "UpdateAccount": {
                  "requestType": "UpdateAccountRequest",
                  "responseType": "UpdateAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/UpdateAccount"
                  }
                },
                "DeleteAccount": {
                  "requestType": "DeleteAccountRequest",
                  "responseType": "DeleteAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/DeleteAccount"
                  }
                },
                "GetAccount": {
                  "requestType": "GetAccountRequest",
                  "responseType": "GetAccountResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/GetAccount"
                  }
                },
                "CreateProfile": {
                  "requestType": "CreateProfileRequest",
                  "responseType": "CreateProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/CreateProfile"
                  }
                },
                "UpdateProfile": {
                  "requestType": "UpdateProfileRequest",
                  "responseType": "UpdateProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/UpdateProfile"
                  }
                },
                "GetProfile": {
                  "requestType": "GetProfileRequest",
                  "responseType": "GetProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/GetProfile"
                  }
                },
                "ListProfile": {
                  "requestType": "ListProfileRequest",
                  "responseType": "ListProfileResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/account/AccountService/ListProfile"
                  }
                }
              }
            },
            "Account": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "type": {
                  "type": "Type",
                  "id": 10,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "scope": {
                  "type": "uint64",
                  "id": 11
                },
                "subtype": {
                  "type": "uint64",
                  "id": 12
                },
                "username": {
                  "type": "string",
                  "id": 30
                },
                "password": {
                  "type": "string",
                  "id": 31
                },
                "phone": {
                  "type": "string",
                  "id": 32
                },
                "email": {
                  "type": "string",
                  "id": 33
                },
                "wechat_openid": {
                  "type": "string",
                  "id": 34
                },
                "wechat_unionid": {
                  "type": "string",
                  "id": 35
                },
                "wechat_nickname": {
                  "type": "string",
                  "id": 36
                },
                "wechat_avatar": {
                  "type": "string",
                  "id": 37
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_PUBLIC": 1,
                    "TYPE_PRIVATE": 2
                  }
                },
                "Status": {
                  "values": {
                    "STATUS_UNSPECIFIED": 0,
                    "STATUS_DISABLED": 256
                  }
                }
              }
            },
            "Profile": {
              "fields": {
                "profile_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "create_time": {
                  "type": "uint64",
                  "id": 4
                },
                "update_time": {
                  "type": "uint64",
                  "id": 5
                },
                "delete_time": {
                  "type": "uint64",
                  "id": 6
                },
                "nickname": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "(validate.rules).string.max_len": 64
                  }
                },
                "avatar": {
                  "type": "string",
                  "id": 21
                }
              }
            },
            "CreateAccountRequest": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "CreateAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "UpdateAccountRequest": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "UpdateAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "DeleteAccountRequest": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "DeleteAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "GetAccountRequest": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                },
                "type": {
                  "type": "Account.Type",
                  "id": 2
                },
                "scope": {
                  "type": "uint64",
                  "id": 3
                },
                "subtype": {
                  "type": "uint64",
                  "id": 4
                },
                "username": {
                  "type": "string",
                  "id": 30
                },
                "phone": {
                  "type": "string",
                  "id": 32
                },
                "email": {
                  "type": "string",
                  "id": 33
                },
                "wechat_unionid": {
                  "type": "string",
                  "id": 35
                }
              }
            },
            "GetAccountResponse": {
              "fields": {
                "account": {
                  "type": "Account",
                  "id": 1
                }
              }
            },
            "CreateProfileRequest": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "CreateProfileResponse": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "UpdateProfileRequest": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "UpdateProfileResponse": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "GetProfileRequest": {
              "fields": {
                "profile_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetProfileResponse": {
              "fields": {
                "profile": {
                  "type": "Profile",
                  "id": 1
                }
              }
            },
            "ListProfileRequest": {
              "fields": {
                "profile_ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "ListProfileResponse": {
              "fields": {
                "profiles": {
                  "rule": "repeated",
                  "type": "Profile",
                  "id": 1
                }
              }
            }
          }
        },
        "common": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/common/proto;proto"
          },
          "nested": {
            "Status": {
              "fields": {},
              "nested": {
                "Code": {
                  "values": {
                    "OK": 0,
                    "CANCELED": 1,
                    "UNKNOWN": 2,
                    "INVALID_ARGUMENT": 3,
                    "DEADLINE_EXCEEDED": 4,
                    "NOT_FOUND": 5,
                    "ALREADY_EXISTS": 6,
                    "PERMISSION_DENIED": 7,
                    "RESOURCE_EXHAUSTED": 8,
                    "FAILED_PRECONDITION": 9,
                    "ABORTED": 10,
                    "OUT_OF_RANGE": 11,
                    "UNIMPLEMENTED": 12,
                    "INTERNAL": 13,
                    "UNAVAILABLE": 14,
                    "DATA_LOSS": 15,
                    "UNAUTHENTICATED": 16,
                    "DATABASE_ERROR": 1001,
                    "ASYNC_ERROR": 1002,
                    "CACHE_NOT_EXISTED": 1003,
                    "DATA_EXPIRED": 1004,
                    "DUPLICATE_CUSTOMIZED_CODE": 1005,
                    "REDIS_ERROR": 1006,
                    "REDIS_LOCKED": 1007
                  }
                },
                "InvalidArgumentDetail": {
                  "fields": {
                    "reason": {
                      "type": "string",
                      "id": 1
                    }
                  }
                }
              }
            },
            "Uint64Set": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "StringSet": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Model": {
              "fields": {},
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_ACCOUNT_ACCOUNT": 1,
                    "TYPE_PRODUCTION_PROCESSTYPE": 2,
                    "TYPE_PRODUCTION_PROCESSTEMPLATE": 3,
                    "TYPE_PRODUCTION_PROCESSOR": 4,
                    "TYPE_PRODUCTION_BOM": 5,
                    "TYPE_PRODUCTION_TASK": 6,
                    "TYPE_PRODUCTION_TASKINPUT": 7,
                    "TYPE_PRODUCTION_TASKPROCESS": 8,
                    "TYPE_PRODUCTION_TASKWEIGHT": 47,
                    "TYPE_PRODUCTION_TASKOUTPUT": 66,
                    "TYPE_INVENTORY_STOCKSHEET": 9,
                    "TYPE_INVENTORY_STOCKLOG": 10,
                    "TYPE_INVENTORY_BATCHLOG": 11,
                    "TYPE_INVENTORY_SHELF": 12,
                    "TYPE_INVENTORY_BATCH": 13,
                    "TYPE_INVENTORY_SKUUNITSTOCK": 14,
                    "TYPE_INVENTORY_SKUSTOCK": 15,
                    "TYPE_INVENTORY_STATEMENT": 16,
                    "TYPE_INVENTORY_ADJUSTSHEET": 17,
                    "TYPE_INVENTORY_ADJUSTLOG": 18,
                    "TYPE_INVENTORY_CUSTOMERTURNOVER": 19,
                    "TYPE_INVENTORY_REPLACE": 20,
                    "TYPE_ORDER_ORDER": 21,
                    "TYPE_ORDER_ORDER_DETAIL": 22,
                    "TYPE_ORDER_ORDER_IMPORT_TEMPLETE": 23,
                    "TYPE_ORDER_ESHOP_ORDER": 48,
                    "TYPE_ORDER_ESHOP_ORDER_DETAIL": 49,
                    "TYPE_ORDER_ESHOP_MENU_PERIOD_GROUP": 70,
                    "TYPE_ORDER_ESHOP_LEAVE_APPLICATION": 71,
                    "TYPE_ORDER_ESHOP_MENU": 72,
                    "TYPE_ORDER_ESHOP_MENU_DETAIL": 73,
                    "TYPE_ENTERPRISE_GROUP": 24,
                    "TYPE_ENTERPRISE_GROUP_USER": 25,
                    "TYPE_ENTERPRISE_STATION": 26,
                    "TYPE_ENTERPRISE_CUSTOMER": 27,
                    "TYPE_ENTERPRISE_CUSTOMER_USER": 28,
                    "TYPE_ENTERPRISE_CUSTOMER_LABEL": 45,
                    "TYPE_ENTERPRISE_SERVICE_PERIOD": 29,
                    "TYPE_ENTERPRISE_SUPPLIER": 30,
                    "TYPE_ENTERPRISE_DISTRIBUTION_CONTRACTOR": 31,
                    "TYPE_ENTERPRISE_ROLE": 32,
                    "TYPE_ENTERPRISE_INVITATION_CODE": 34,
                    "TYPE_ENTERPRISE_SHOP_DIY_SETTING": 46,
                    "TYPE_PURCHASE_TASK": 35,
                    "TYPE_PURCHASE_SHEET": 36,
                    "TYPE_PURCHASE_BATCH": 37,
                    "TYPE_PURCHASE_INQUIRY_PRICE": 38,
                    "TYPE_PURCHASE_SRC_RELATION": 50,
                    "TYPE_OPERATION_OPERATION": 39,
                    "TYPE_MERCHANDISE_CATEGORY": 40,
                    "TYPE_MERCHANDISE_SPU": 41,
                    "TYPE_MERCHANDISE_SKU": 42,
                    "TYPE_MERCHANDISE_QUOTATION": 43,
                    "TYPE_MERCHANDISE_FAVORITE": 100,
                    "TYPE_MERCHANDISE_FAVORITE_SSU": 101,
                    "TYPE_ASYNCTASK_TASK": 44,
                    "TYPE_SORTING_TAG": 51,
                    "TYPE_SORTING_SKU_GROUP": 52,
                    "TYPE_SORTING_BASKET": 53,
                    "TYPE_SORTING_SKU_GROUP_SKU": 65,
                    "TYPE_ROUTE": 54,
                    "TYPE_MENU": 55,
                    "TYPE_MENU_DETAIL_ID": 56,
                    "TYPE_PREFERENCE_PRINTING_TEMPLATE": 57,
                    "TYPE_PREFERENCE_INNER_LABEL_PRINTING_TEMPLATE": 58,
                    "TYPE_PREFERENCE_SHOP": 59,
                    "TYPE_PREFERENCE_SHOP_LAYOUT_SETTINGS": 60,
                    "TYPE_PREFERENCE_SHOP_BANNER": 67,
                    "TYPE_PURCHASE_SETTINGS": 61,
                    "TYPE_INVENTORY_SETTINGS": 62,
                    "TYPE_APPOINT_TIME_SETTINGS": 63,
                    "TYPE_PRECISION_SETTINGS": 64,
                    "TYPE_SORTING_SETTINGS": 68,
                    "TYPE_PRODUCTION_SETTINGS": 74,
                    "TYPE_AFTER_SALE_ORDER": 80,
                    "TYPE_AFTER_SALE_ORDER_DETAIL": 81,
                    "TYPE_BOSS_PERMISSION_SET": 90,
                    "TYPE_DATA_SYNC_SEQUENCE": 200,
                    "TYPE_FINANCE_SETTLE": 300,
                    "TYPE_FINANCE_AMOUNT_DISCOUNT": 301,
                    "TYPE_FINANCE_TRANSACTION_FLOW": 302,
                    "TYPE_FINANCE_ACCOUNT_BALANCE": 303,
                    "TYPE_FAKE_ANALYTICS_EXAMPLE": 1000000,
                    "TYPE_FAKE_ANALYTICS_EXAMPLE_TYPE_B": 1000001
                  }
                }
              }
            },
            "Filters": {
              "fields": {},
              "nested": {
                "Bool": {
                  "values": {
                    "ALL": 0,
                    "TRUE": 1,
                    "FALSE": 2
                  }
                }
              }
            },
            "App": {
              "fields": {},
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_STATION": 1,
                    "TYPE_BSHOP": 2,
                    "TYPE_CSHOP": 3,
                    "TYPE_ESHOP": 4,
                    "TYPE_CMD": 5
                  }
                }
              }
            },
            "Image": {
              "fields": {
                "type": {
                  "type": "Type",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "height": {
                  "type": "uint32",
                  "id": 2
                },
                "weight": {
                  "type": "uint32",
                  "id": 3
                },
                "path": {
                  "type": "string",
                  "id": 4,
                  "options": {
                    "(validate.rules).string.min_len": 3
                  }
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_QINIU": 1,
                    "TYPE_TENCENT_COS": 2
                  }
                }
              }
            },
            "SortBy": {
              "fields": {
                "field": {
                  "type": "int32",
                  "id": 1
                },
                "desc": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "PagingParams": {
              "fields": {
                "offset": {
                  "type": "uint32",
                  "id": 1
                },
                "sequence": {
                  "type": "uint64",
                  "id": 3
                },
                "all": {
                  "type": "bool",
                  "id": 5
                },
                "limit": {
                  "type": "uint32",
                  "id": 2,
                  "options": {
                    "(validate.rules).uint32.lte": 1000
                  }
                },
                "need_count": {
                  "type": "bool",
                  "id": 4
                }
              }
            },
            "PagingResult": {
              "fields": {
                "has_more": {
                  "type": "bool",
                  "id": 1
                },
                "count": {
                  "type": "uint32",
                  "id": 4
                }
              }
            },
            "SyncOptions": {
              "fields": {
                "model_type": {
                  "type": "Model.Type",
                  "id": 1
                },
                "partition": {
                  "type": "uint64",
                  "id": 2
                },
                "sequence_min": {
                  "type": "uint64",
                  "id": 3
                },
                "sequence_max": {
                  "type": "uint64",
                  "id": 4
                },
                "limit": {
                  "type": "uint32",
                  "id": 6,
                  "options": {
                    "(validate.rules).uint32.gte": 2,
                    "(validate.rules).uint32.lte": 1000
                  }
                }
              }
            },
            "Gender": {
              "values": {
                "GENDER_UNSPECIFIED": 0,
                "GENDER_FEMALE": 1,
                "GENDER_MALE": 2
              }
            },
            "options": {
              "options": {
                "java_multiple_files": true,
                "go_package": "code.guanmai.cn/back_end/ceres/common/proto;proto"
              },
              "nested": {
                "annotation": {
                  "type": "Annotation",
                  "id": 50007,
                  "extend": "google.protobuf.MethodOptions"
                },
                "Annotation": {
                  "fields": {
                    "codes": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                }
              }
            }
          }
        },
        "dao": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/cmd/protoc-gen-dao/proto;proto"
          },
          "nested": {
            "UserType": {
              "values": {
                "UNSPECIFIED": 0,
                "CUSTOMER_USER": 1,
                "GROUP_USER": 2
              }
            },
            "partition_count": {
              "type": "uint32",
              "id": 80000,
              "extend": "google.protobuf.MessageOptions"
            },
            "model_type": {
              "type": "common.Model.Type",
              "id": 80001,
              "extend": "google.protobuf.MessageOptions"
            },
            "sn_type": {
              "type": "idgenerator.SerialConfig.Type",
              "id": 80002,
              "extend": "google.protobuf.MessageOptions"
            },
            "primary_key": {
              "type": "string",
              "id": 80003,
              "extend": "google.protobuf.MessageOptions"
            },
            "user_type": {
              "type": "UserType",
              "id": 80003,
              "extend": "google.protobuf.FieldOptions"
            }
          }
        },
        "idgenerator": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/idgenerator/proto;proto"
          },
          "nested": {
            "IDGeneratorService": {
              "methods": {
                "GenerateId": {
                  "requestType": "GenerateIdRequest",
                  "responseType": "GenerateIdResponse"
                },
                "GenerateIds": {
                  "requestType": "GenerateIdsRequest",
                  "responseType": "GenerateIdsResponse"
                },
                "GenerateSn": {
                  "requestType": "GenerateSnRequest",
                  "responseType": "GenerateSnResponse"
                },
                "GenerateSns": {
                  "requestType": "GenerateSnsRequest",
                  "responseType": "GenerateSnsResponse"
                },
                "GenerateIdSn": {
                  "requestType": "GenerateIdSnRequest",
                  "responseType": "GenerateIdSnResponse"
                },
                "UpdateSerialConfig": {
                  "requestType": "UpdateSerialConfigRequest",
                  "responseType": "UpdateSerialConfigResponse"
                }
              }
            },
            "SerialConfig": {
              "fields": {
                "scope": {
                  "type": "uint64",
                  "id": 1
                },
                "serial_type": {
                  "type": "Type",
                  "id": 2
                },
                "segmentation_type": {
                  "type": "SegmentationType",
                  "id": 20
                },
                "timezone": {
                  "type": "string",
                  "id": 21
                },
                "prefix": {
                  "type": "string",
                  "id": 22
                },
                "sequence_width": {
                  "type": "uint32",
                  "id": 23
                },
                "sequence_min": {
                  "type": "uint32",
                  "id": 24
                },
                "sequence_max": {
                  "type": "uint32",
                  "id": 25
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_ORDER_ORDER": 100,
                    "TYPE_ORDER_ESHOP": 101,
                    "TYPE_STOCK_SHEET_PURCHASE_IN": 201,
                    "TYPE_STOCK_SHEET_PRODUCT_IN": 202,
                    "TYPE_STOCK_SHEET_MATERIAL_IN": 203,
                    "TYPE_STOCK_SHEET_REFUND_IN": 204,
                    "TYPE_STOCK_SHEET_TRANSFER_IN": 205,
                    "TYPE_STOCK_SHEET_OTHER_IN": 206,
                    "TYPE_STOCK_SHEET_SALE_OUT": 207,
                    "TYPE_STOCK_SHEET_MATERIAL_OUT": 208,
                    "TYPE_STOCK_SHEET_REFUND_OUT": 209,
                    "TYPE_STOCK_SHEET_OTHER_OUT": 210,
                    "TYPE_STOCK_SHEET_INVENTORY": 211,
                    "TYPE_STOCK_SHEET_TURNOVER_LOAN": 212,
                    "TYPE_STOCK_SHEET_TURNOVER_REVERT": 213,
                    "TYPE_ADJUST_SHEET": 299,
                    "TYPE_PURCHASE_TASK": 300,
                    "TYPE_PURCHASE_SHEET": 301,
                    "TYPE_PRODUCTION_TASK_PACK": 320,
                    "TYPE_PRODUCTION_TASK_PRODUCT": 321,
                    "TYPE_PRODUCTION_TASK_SHEET": 322,
                    "TYPE_PRODUCTION_TASK_WEIGHT": 323,
                    "TYPE_FINANCE_SETTLE": 400,
                    "TYPE_FINANCE_AMOUNT_DISCOUNT": 401,
                    "TYPE_FINANCE_TRANSACTION_FLOW": 402,
                    "TYPE_FINANCE_ACCOUNT_BALANCE": 403,
                    "TYPE_FINANCE_CUSTOMER_SETTLE": 404,
                    "TYPE_FINANCE_SUPPLIER_SETTLE": 405,
                    "TYPE_AFTER_SALE_ORDER": 500
                  }
                },
                "SegmentationType": {
                  "values": {
                    "SEGMENTATION_TYPE_UNSPECIFIED": 0,
                    "SEGMENTATION_TYPE_YYYYMMDD": 1,
                    "SEGMENTATION_TYPE_YYMMDD": 2
                  }
                }
              }
            },
            "SerialSegmentation": {
              "fields": {
                "scope": {
                  "type": "uint64",
                  "id": 1
                },
                "serial_type": {
                  "type": "SerialConfig.Type",
                  "id": 2
                },
                "segmentation": {
                  "type": "uint32",
                  "id": 3
                },
                "sequence": {
                  "type": "uint32",
                  "id": 20
                }
              }
            },
            "GenerateIdRequest": {
              "fields": {
                "model_type": {
                  "type": "common.Model.Type",
                  "id": 1
                }
              }
            },
            "GenerateIdResponse": {
              "fields": {
                "id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GenerateIdsRequest": {
              "fields": {
                "model_type": {
                  "type": "common.Model.Type",
                  "id": 1
                },
                "count": {
                  "type": "uint32",
                  "id": 2
                }
              }
            },
            "GenerateIdsResponse": {
              "fields": {
                "ids": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GenerateSnRequest": {
              "fields": {
                "scope": {
                  "type": "uint64",
                  "id": 1
                },
                "serial_type": {
                  "type": "SerialConfig.Type",
                  "id": 2
                },
                "timestamp": {
                  "type": "uint64",
                  "id": 3
                }
              }
            },
            "GenerateSnResponse": {
              "fields": {
                "sn": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "GenerateSnsRequest": {
              "fields": {
                "scope": {
                  "type": "uint64",
                  "id": 1
                },
                "serial_type": {
                  "type": "SerialConfig.Type",
                  "id": 2
                },
                "timestamp": {
                  "type": "uint64",
                  "id": 3
                },
                "count": {
                  "type": "uint32",
                  "id": 4
                }
              }
            },
            "GenerateSnsResponse": {
              "fields": {
                "sns": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "GenerateIdSnRequest": {
              "fields": {
                "id_request": {
                  "type": "GenerateIdRequest",
                  "id": 1
                },
                "sn_request": {
                  "type": "GenerateSnRequest",
                  "id": 2
                }
              }
            },
            "GenerateIdSnResponse": {
              "fields": {
                "id_response": {
                  "type": "GenerateIdResponse",
                  "id": 1
                },
                "sn_response": {
                  "type": "GenerateSnResponse",
                  "id": 2
                }
              }
            },
            "UpdateSerialConfigRequest": {
              "fields": {
                "config": {
                  "type": "SerialConfig",
                  "id": 1
                }
              }
            },
            "UpdateSerialConfigResponse": {
              "fields": {}
            }
          }
        }
      }
    },
    "validate": {
      "options": {
        "go_package": "github.com/envoyproxy/protoc-gen-validate/validate",
        "java_package": "io.envoyproxy.pgv.validate"
      },
      "nested": {
        "disabled": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.MessageOptions"
        },
        "required": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.OneofOptions"
        },
        "rules": {
          "type": "FieldRules",
          "id": 1071,
          "extend": "google.protobuf.FieldOptions"
        },
        "FieldRules": {
          "oneofs": {
            "type": {
              "oneof": [
                "float",
                "double",
                "int32",
                "int64",
                "uint32",
                "uint64",
                "sint32",
                "sint64",
                "fixed32",
                "fixed64",
                "sfixed32",
                "sfixed64",
                "bool",
                "string",
                "bytes",
                "enum",
                "repeated",
                "map",
                "any",
                "duration",
                "timestamp"
              ]
            }
          },
          "fields": {
            "message": {
              "type": "MessageRules",
              "id": 17
            },
            "float": {
              "type": "FloatRules",
              "id": 1
            },
            "double": {
              "type": "DoubleRules",
              "id": 2
            },
            "int32": {
              "type": "Int32Rules",
              "id": 3
            },
            "int64": {
              "type": "Int64Rules",
              "id": 4
            },
            "uint32": {
              "type": "UInt32Rules",
              "id": 5
            },
            "uint64": {
              "type": "UInt64Rules",
              "id": 6
            },
            "sint32": {
              "type": "SInt32Rules",
              "id": 7
            },
            "sint64": {
              "type": "SInt64Rules",
              "id": 8
            },
            "fixed32": {
              "type": "Fixed32Rules",
              "id": 9
            },
            "fixed64": {
              "type": "Fixed64Rules",
              "id": 10
            },
            "sfixed32": {
              "type": "SFixed32Rules",
              "id": 11
            },
            "sfixed64": {
              "type": "SFixed64Rules",
              "id": 12
            },
            "bool": {
              "type": "BoolRules",
              "id": 13
            },
            "string": {
              "type": "StringRules",
              "id": 14
            },
            "bytes": {
              "type": "BytesRules",
              "id": 15
            },
            "enum": {
              "type": "EnumRules",
              "id": 16
            },
            "repeated": {
              "type": "RepeatedRules",
              "id": 18
            },
            "map": {
              "type": "MapRules",
              "id": 19
            },
            "any": {
              "type": "AnyRules",
              "id": 20
            },
            "duration": {
              "type": "DurationRules",
              "id": 21
            },
            "timestamp": {
              "type": "TimestampRules",
              "id": 22
            }
          }
        },
        "FloatRules": {
          "fields": {
            "const": {
              "type": "float",
              "id": 1
            },
            "lt": {
              "type": "float",
              "id": 2
            },
            "lte": {
              "type": "float",
              "id": 3
            },
            "gt": {
              "type": "float",
              "id": 4
            },
            "gte": {
              "type": "float",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "float",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "float",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "DoubleRules": {
          "fields": {
            "const": {
              "type": "double",
              "id": 1
            },
            "lt": {
              "type": "double",
              "id": 2
            },
            "lte": {
              "type": "double",
              "id": 3
            },
            "gt": {
              "type": "double",
              "id": 4
            },
            "gte": {
              "type": "double",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "double",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "double",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Int32Rules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "lt": {
              "type": "int32",
              "id": 2
            },
            "lte": {
              "type": "int32",
              "id": 3
            },
            "gt": {
              "type": "int32",
              "id": 4
            },
            "gte": {
              "type": "int32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Int64Rules": {
          "fields": {
            "const": {
              "type": "int64",
              "id": 1
            },
            "lt": {
              "type": "int64",
              "id": 2
            },
            "lte": {
              "type": "int64",
              "id": 3
            },
            "gt": {
              "type": "int64",
              "id": 4
            },
            "gte": {
              "type": "int64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "UInt32Rules": {
          "fields": {
            "const": {
              "type": "uint32",
              "id": 1
            },
            "lt": {
              "type": "uint32",
              "id": 2
            },
            "lte": {
              "type": "uint32",
              "id": 3
            },
            "gt": {
              "type": "uint32",
              "id": 4
            },
            "gte": {
              "type": "uint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "UInt64Rules": {
          "fields": {
            "const": {
              "type": "uint64",
              "id": 1
            },
            "lt": {
              "type": "uint64",
              "id": 2
            },
            "lte": {
              "type": "uint64",
              "id": 3
            },
            "gt": {
              "type": "uint64",
              "id": 4
            },
            "gte": {
              "type": "uint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SInt32Rules": {
          "fields": {
            "const": {
              "type": "sint32",
              "id": 1
            },
            "lt": {
              "type": "sint32",
              "id": 2
            },
            "lte": {
              "type": "sint32",
              "id": 3
            },
            "gt": {
              "type": "sint32",
              "id": 4
            },
            "gte": {
              "type": "sint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SInt64Rules": {
          "fields": {
            "const": {
              "type": "sint64",
              "id": 1
            },
            "lt": {
              "type": "sint64",
              "id": 2
            },
            "lte": {
              "type": "sint64",
              "id": 3
            },
            "gt": {
              "type": "sint64",
              "id": 4
            },
            "gte": {
              "type": "sint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Fixed32Rules": {
          "fields": {
            "const": {
              "type": "fixed32",
              "id": 1
            },
            "lt": {
              "type": "fixed32",
              "id": 2
            },
            "lte": {
              "type": "fixed32",
              "id": 3
            },
            "gt": {
              "type": "fixed32",
              "id": 4
            },
            "gte": {
              "type": "fixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Fixed64Rules": {
          "fields": {
            "const": {
              "type": "fixed64",
              "id": 1
            },
            "lt": {
              "type": "fixed64",
              "id": 2
            },
            "lte": {
              "type": "fixed64",
              "id": 3
            },
            "gt": {
              "type": "fixed64",
              "id": 4
            },
            "gte": {
              "type": "fixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SFixed32Rules": {
          "fields": {
            "const": {
              "type": "sfixed32",
              "id": 1
            },
            "lt": {
              "type": "sfixed32",
              "id": 2
            },
            "lte": {
              "type": "sfixed32",
              "id": 3
            },
            "gt": {
              "type": "sfixed32",
              "id": 4
            },
            "gte": {
              "type": "sfixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SFixed64Rules": {
          "fields": {
            "const": {
              "type": "sfixed64",
              "id": 1
            },
            "lt": {
              "type": "sfixed64",
              "id": 2
            },
            "lte": {
              "type": "sfixed64",
              "id": 3
            },
            "gt": {
              "type": "sfixed64",
              "id": 4
            },
            "gte": {
              "type": "sfixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "BoolRules": {
          "fields": {
            "const": {
              "type": "bool",
              "id": 1
            }
          }
        },
        "StringRules": {
          "oneofs": {
            "well_known": {
              "oneof": [
                "email",
                "hostname",
                "ip",
                "ipv4",
                "ipv6",
                "uri",
                "uri_ref",
                "address",
                "uuid",
                "well_known_regex"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "string",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 19
            },
            "min_len": {
              "type": "uint64",
              "id": 2
            },
            "max_len": {
              "type": "uint64",
              "id": 3
            },
            "len_bytes": {
              "type": "uint64",
              "id": 20
            },
            "min_bytes": {
              "type": "uint64",
              "id": 4
            },
            "max_bytes": {
              "type": "uint64",
              "id": 5
            },
            "pattern": {
              "type": "string",
              "id": 6
            },
            "prefix": {
              "type": "string",
              "id": 7
            },
            "suffix": {
              "type": "string",
              "id": 8
            },
            "contains": {
              "type": "string",
              "id": 9
            },
            "not_contains": {
              "type": "string",
              "id": 23
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 10
            },
            "not_in": {
              "rule": "repeated",
              "type": "string",
              "id": 11
            },
            "email": {
              "type": "bool",
              "id": 12
            },
            "hostname": {
              "type": "bool",
              "id": 13
            },
            "ip": {
              "type": "bool",
              "id": 14
            },
            "ipv4": {
              "type": "bool",
              "id": 15
            },
            "ipv6": {
              "type": "bool",
              "id": 16
            },
            "uri": {
              "type": "bool",
              "id": 17
            },
            "uri_ref": {
              "type": "bool",
              "id": 18
            },
            "address": {
              "type": "bool",
              "id": 21
            },
            "uuid": {
              "type": "bool",
              "id": 22
            },
            "well_known_regex": {
              "type": "KnownRegex",
              "id": 24
            },
            "strict": {
              "type": "bool",
              "id": 25,
              "options": {
                "default": true
              }
            }
          }
        },
        "KnownRegex": {
          "values": {
            "UNKNOWN": 0,
            "HTTP_HEADER_NAME": 1,
            "HTTP_HEADER_VALUE": 2
          }
        },
        "BytesRules": {
          "oneofs": {
            "well_known": {
              "oneof": [
                "ip",
                "ipv4",
                "ipv6"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "bytes",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 13
            },
            "min_len": {
              "type": "uint64",
              "id": 2
            },
            "max_len": {
              "type": "uint64",
              "id": 3
            },
            "pattern": {
              "type": "string",
              "id": 4
            },
            "prefix": {
              "type": "bytes",
              "id": 5
            },
            "suffix": {
              "type": "bytes",
              "id": 6
            },
            "contains": {
              "type": "bytes",
              "id": 7
            },
            "in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 8
            },
            "not_in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 9
            },
            "ip": {
              "type": "bool",
              "id": 10
            },
            "ipv4": {
              "type": "bool",
              "id": 11
            },
            "ipv6": {
              "type": "bool",
              "id": 12
            }
          }
        },
        "EnumRules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "defined_only": {
              "type": "bool",
              "id": 2
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 3,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int32",
              "id": 4,
              "options": {
                "packed": false
              }
            }
          }
        },
        "MessageRules": {
          "fields": {
            "skip": {
              "type": "bool",
              "id": 1
            },
            "required": {
              "type": "bool",
              "id": 2
            }
          }
        },
        "RepeatedRules": {
          "fields": {
            "min_items": {
              "type": "uint64",
              "id": 1
            },
            "max_items": {
              "type": "uint64",
              "id": 2
            },
            "unique": {
              "type": "bool",
              "id": 3
            },
            "items": {
              "type": "FieldRules",
              "id": 4
            }
          }
        },
        "MapRules": {
          "fields": {
            "min_pairs": {
              "type": "uint64",
              "id": 1
            },
            "max_pairs": {
              "type": "uint64",
              "id": 2
            },
            "no_sparse": {
              "type": "bool",
              "id": 3
            },
            "keys": {
              "type": "FieldRules",
              "id": 4
            },
            "values": {
              "type": "FieldRules",
              "id": 5
            }
          }
        },
        "AnyRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 2
            },
            "not_in": {
              "rule": "repeated",
              "type": "string",
              "id": 3
            }
          }
        },
        "DurationRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Duration",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Duration",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Duration",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Duration",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Duration",
              "id": 6
            },
            "in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 7
            },
            "not_in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 8
            }
          }
        },
        "TimestampRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Timestamp",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Timestamp",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Timestamp",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Timestamp",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Timestamp",
              "id": 6
            },
            "lt_now": {
              "type": "bool",
              "id": 7
            },
            "gt_now": {
              "type": "bool",
              "id": 8
            },
            "within": {
              "type": "google.protobuf.Duration",
              "id": 9
            }
          }
        }
      }
    },
    "google": {
      "nested": {
        "api": {
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "additional_bindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "public_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weak_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "message_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "source_code_info": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nested_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extension_range": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneof_decl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reserved_range": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reserved_name": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "type_name": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "default_value": {
                  "type": "string",
                  "id": 7
                },
                "oneof_index": {
                  "type": "int32",
                  "id": 9
                },
                "json_name": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "input_type": {
                  "type": "string",
                  "id": 2
                },
                "output_type": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "client_streaming": {
                  "type": "bool",
                  "id": 5
                },
                "server_streaming": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "FileOptions": {
              "fields": {
                "java_package": {
                  "type": "string",
                  "id": 1
                },
                "java_outer_classname": {
                  "type": "string",
                  "id": 8
                },
                "java_multiple_files": {
                  "type": "bool",
                  "id": 10
                },
                "java_generate_equals_and_hash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "java_string_check_utf8": {
                  "type": "bool",
                  "id": 27
                },
                "optimize_for": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "go_package": {
                  "type": "string",
                  "id": 11
                },
                "cc_generic_services": {
                  "type": "bool",
                  "id": 16
                },
                "java_generic_services": {
                  "type": "bool",
                  "id": 17
                },
                "py_generic_services": {
                  "type": "bool",
                  "id": 18
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23
                },
                "cc_enable_arenas": {
                  "type": "bool",
                  "id": 31
                },
                "objc_class_prefix": {
                  "type": "string",
                  "id": 36
                },
                "csharp_namespace": {
                  "type": "string",
                  "id": 37
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "message_set_wire_format": {
                  "type": "bool",
                  "id": 1
                },
                "no_standard_descriptor_accessor": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "map_entry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "weak": {
                  "type": "bool",
                  "id": 10
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allow_alias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifier_value": {
                  "type": "string",
                  "id": 3
                },
                "positive_int_value": {
                  "type": "uint64",
                  "id": 4
                },
                "negative_int_value": {
                  "type": "int64",
                  "id": 5
                },
                "double_value": {
                  "type": "double",
                  "id": 6
                },
                "string_value": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregate_value": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "name_part": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "is_extension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leading_comments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailing_comments": {
                      "type": "string",
                      "id": 4
                    },
                    "leading_detached_comments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "source_file": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}