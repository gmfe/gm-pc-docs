import * as asynctask from '../asynctask'
import * as common from '../common'
import * as oauth from '../oauth'
import * as enterprise from '../enterprise'
import * as account from '../account'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as merchandise from '../merchandise'
import * as preference from '../preference'
export interface SkuUnit {
  sku_id: string
  unit_id: string
}
export enum ChangeType {
  CHANGE_UNSPECIFIED = 0,
  CHANGE_TYPE_ADD = 1,
  CHANGE_TYPE_SUB = 2,
  CHANGE_TYPE_SET = 3,
}
export enum OperateType {
  OPERATE_TYPE_UNSPECIFIED = 0,
  OPERATE_TYPE_PURCHASE_IN = 100,
  OPERATE_TYPE_PRODUCT_IN = 101,
  OPERATE_TYPE_MATERIAL_IN = 102,
  OPERATE_TYPE_REFUND_IN = 103,
  OPERATE_TYPE_TRANSFER_IN = 104,
  OPERATE_TYPE_OTHER_IN = 105,
  OPERATE_TYPE_SALE_OUT_ROLL_BACK = 106,
  OPERATE_TYPE_REFUND_OUT_ROLL_BACK = 111,
  OPERATE_TYPE_OTHER_OUT_ROLL_BACK = 109,
  OPERATE_TYPE_MATERIAL_OUT_ROLL_BACK = 112,
  OPERATE_TYPE_TURNOVER_LOAN = 113,
  OPERATE_TYPE_TURNOVER_REVERT = 114,
  OPERATE_TYPE_SALE_OUT = 501,
  OPERATE_TYPE_MATERIAL_OUT = 502,
  OPERATE_TYPE_REFUND_OUT = 503,
  OPERATE_TYPE_OTHER_OUT = 504,
  OPERATE_TYPE_PURCHASE_IN_ROLL_BACK = 505,
  OPERATE_TYPE_PRODUCT_IN_ROLL_BACK = 507,
  OPERATE_TYPE_MATERIAL_IN_ROLL_BACK = 509,
  OPERATE_TYPE_OTHER_IN_ROLL_BACK = 511,
  OPERATE_TYPE_LOSS = 1000,
  OPERATE_TYPE_INCREASE = 1001,
  OPERATE_TYPE_CHECK = 1003,
  OPERATE_TYPE_REPLACE_OUT = 900,
  OPERATE_TYPE_REPLACE_IN = 901,
  OPERATE_TYPE_VIRTUAL_IN = 1100,
  OPERATE_TYPE_VIRTUAL_IN_ROLL_BACK = 1101,
  OPERATE_TYPE_ALL = 1,
  BASE_UPDATE = 2,
}
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  STOCK_ERROR_STATUS_UNKNOWN = 20770001,
  SHEET_STATUS_INVALID = 20770002,
  CROSS_UPDATE = 20770003,
  AUTHENTICATION_ERROR = 20770004,
  DUPLICATE_SHELF_NAME = 20770005,
  LACK_OF_STOCK = 20770006,
  FAIL_GET_ID = 20770007,
  MERCHANDISE_NOT_FOUND = 20770008,
  REVERT_TURNOVER_RESULT_LESS_THTAN_ZERO = 20770009,
  REDISLOCK_BUSY = 20770010,
  REDISLOCK_ERROR = 20770011,
  COST_ALLOCATION_MONEY_ZERO = 20770012,
  CANCEL_USED_BATCH = 20770013,
  STOCK_DATA_ERROR = 20770014,
  STOCK_SHEET_TOTAL_PRICE_NEGATIVE = 20770015,
  PARENT_SHELF_STOCK_OPERATE = 20770016,
  SHELF_DELETED_OR_NOT_EXISTS = 20770017,
  BATCH_DELETED_OR_NOT_EXISTS = 20770018,
  UPDATE_FUTURE_BATCH = 20770019,
  FUTURE_OPERATE_ERROR = 20770020,
  CHECK_STOCK_DISTINCT_SIGN = 20770021,
  VIRTUAL_BATCH_HAD_BEEN_REPLACED = 20770022,
  REPLECE_STOCK_SUBMIT_TIME_TOO_LATE = 20770023,
  REVERT_NO_BATCH_MATCH = 20770024,
  CANCEL_PAID_SHEET = 20770025,
}
export interface Status_DuplicateShelfNameDetail {
  name?: string
}
export interface Status_LackOfStockDetail_Detail {
  sku_id?: string
  unit_id?: string
  batch_id?: string
  batch_serial_no?: string
  stock?: merchandise.UnitStock
}
export interface Status_LackOfStockDetail {
  details?: Status_LackOfStockDetail_Detail[]
}
export interface Status_UpdateFutureBatchDetail {
  batch_serial_no?: string
  detail_index?: string
}
export interface Status_CheckStockDistinctSignDetail {
  detail_index?: string
  update_batch_index?: string
}
export interface Status_CancelUsedBatchDetail {
  batch_serial_no?: string
  batch_id?: string
  sku_id?: string
}
export interface Status_BatchDeleteOrNotExistsDetail_Detail {
  batch_id?: string
  batch_serial_no?: string
  delete_time?: string
}
export interface Status_BatchDeleteOrNotExistsDetail {
  details?: Status_BatchDeleteOrNotExistsDetail_Detail[]
}
export interface Status {
}
export interface Price {
  base_unit: string
  sku_unit: string
}
export interface UnitStocks {
  unit_stocks?: { [key: string]: merchandise.UnitStock }
}
export interface Shelf {
  shelf_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  parent_id?: string
  name?: string
  remark?: string
  is_leaf?: boolean
}
export interface ReqCreateShelf {
  // shelf_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  parent_id?: string
  name?: string
  remark?: string
  is_leaf?: boolean
}
export enum Batch_BatchType {
  BATCH_TYPE_UNSPECIFIED = 0,
  BATCH_TYPE_CONST = 1,
  BATCH_TYPE_TMP = 2,
}
export interface Batch_MatchFrozen {
  stock?: merchandise.UnitStock
  details?: { [key: string]: merchandise.UnitStock }
}
export interface Batch {
  batch_id: string
  create_time?: string
  in_stock_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  spu_id: string
  sku_id: string
  base_unit_id: string
  sku_unit_id: string
  in_stock_sheet_id?: string
  batch_serial_no?: string
  stock?: merchandise.UnitStock
  input_stock: merchandise.UnitValueSet
  base_unit_quantity?: string
  production_time?: string
  expiry_time?: string
  production_task_id?: string
  supplier_id?: string
  shelf_id?: string
  type: Batch_BatchType
  remark?: string
  origin_stock?: merchandise.UnitStock
  source_sheet_type?: StockSheet_SheetType
  stock_sheet_serial_no?: string
  production_task_serial_no?: string
  is_remaining?: boolean
  match_frozen?: Batch_MatchFrozen
  target_customer_id?: string
}
export interface ReqCreateBatch {
  // batch_id: string
  // create_time?: string
  in_stock_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  spu_id: string
  sku_id: string
  base_unit_id: string
  sku_unit_id: string
  in_stock_sheet_id?: string
  batch_serial_no?: string
  stock?: merchandise.UnitStock
  input_stock: merchandise.UnitValueSet
  base_unit_quantity?: string
  production_time?: string
  expiry_time?: string
  production_task_id?: string
  supplier_id?: string
  shelf_id?: string
  type: Batch_BatchType
  remark?: string
  origin_stock?: merchandise.UnitStock
  source_sheet_type?: StockSheet_SheetType
  stock_sheet_serial_no?: string
  production_task_serial_no?: string
  is_remaining?: boolean
  match_frozen?: Batch_MatchFrozen
  target_customer_id?: string
}
export interface BatchLog {
  batch_log_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  status?: string
  group_id?: string
  station_id?: string
  spu_id: string
  sku_id: string
  base_unit_id: string
  sku_unit_id: string
  batch_id: string
  stock_log_id?: string
  stock_sheet_id?: string
  operate_type?: OperateType
  old_stock?: merchandise.UnitStock
  origin_update_stock?: StockSheet_UpdateBatch
  update_stock?: StockSheet_UpdateBatch
  new_stock?: merchandise.UnitStock
  submit_time?: string
  stock_sheet_type?: StockSheet_SheetType
  stock_sheet_serial_no?: string
  batch_serial_no?: string
  production_task_id?: string
  batch_type?: Batch_BatchType
}
export interface ReqCreateBatchLog {
  // batch_log_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  status?: string
  // group_id?: string
  station_id?: string
  spu_id: string
  sku_id: string
  base_unit_id: string
  sku_unit_id: string
  batch_id: string
  stock_log_id?: string
  stock_sheet_id?: string
  operate_type?: OperateType
  old_stock?: merchandise.UnitStock
  origin_update_stock?: StockSheet_UpdateBatch
  update_stock?: StockSheet_UpdateBatch
  new_stock?: merchandise.UnitStock
  submit_time?: string
  stock_sheet_type?: StockSheet_SheetType
  stock_sheet_serial_no?: string
  batch_serial_no?: string
  production_task_id?: string
  batch_type?: Batch_BatchType
}
export enum PendingType {
  PENDING_TYPE_UNSPECIFIED = 0,
  PENDING_TYPE_PRODUCT_IN = 1,
  PENDING_TYPE_MATERIAL_OUT = 2,
  PENDING_TYPE_MATERIAL_IN = 3,
  PENDING_TYPE_PURCHASE_IN = 4,
  PENDING_TYPE_ORDER = 5,
  PENDING_TYPE_VIRTUAL = 6,
}
export enum SkuUnitStock_Config {
  SALE_STOCK_UNSPECIFIED = 0,
  SALE_STOCK_NO_CONFIG = 1,
  SALE_STOCK_AVAILABLE_STOCK = 2,
  SALE_STOCK_VIRTUAL_STOCK = 3,
}
export interface SkuUnitStock_PendingStock_PendingStockDetail {
  pending_type?: PendingType
  quantity?: merchandise.UnitStock
  sku_id?: string
  base_unit_id?: string
  sku_unit_id?: string
  spu_id?: string
  time?: string
  serial_no?: string
  sheet_id?: string
}
export interface SkuUnitStock_PendingStock {
  pending_stocks?: { [key: string]: SkuUnitStock_PendingStock_PendingStockDetail }
}
export interface SkuUnitStock {
  sku_unit_stock_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  spu_id?: string
  sku_id?: string
  base_unit_id?: string
  sku_unit_id?: string
  time?: string
  stock?: merchandise.UnitStock
  frozen_stock_detail?: SkuUnitStock_PendingStock
  in_transit_stock_detail?: SkuUnitStock_PendingStock
  base_unit_quantity?: string
  frozen_stock?: merchandise.UnitStock
  in_transit_stock?: merchandise.UnitStock
  virtual_stock?: merchandise.UnitStock
  config?: SkuUnitStock_Config
  available_stock?: merchandise.UnitStock
  is_remaining?: boolean
}
export interface ReqCreateSkuUnitStock {
  // sku_unit_stock_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  spu_id?: string
  sku_id?: string
  base_unit_id?: string
  sku_unit_id?: string
  time?: string
  stock?: merchandise.UnitStock
  frozen_stock_detail?: SkuUnitStock_PendingStock
  in_transit_stock_detail?: SkuUnitStock_PendingStock
  base_unit_quantity?: string
  frozen_stock?: merchandise.UnitStock
  in_transit_stock?: merchandise.UnitStock
  virtual_stock?: merchandise.UnitStock
  config?: SkuUnitStock_Config
  available_stock?: merchandise.UnitStock
  is_remaining?: boolean
}
export enum SkuStock_Status {
  STATUS_UNSPECIFIED = 0,
  STATUS_IS_REMAINING = 256,
  STATUS_IS_VIRTUAL_STOCK = 512,
}
export interface SkuStock {
  sku_stock_id?: string
  status?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  spu_id: string
  sku_id: string
  base_unit_id: string
  stock?: merchandise.UnitStock
  base_unit_quantity: string
  frozen_stock?: merchandise.UnitStock
  in_transit_stock?: merchandise.UnitStock
  unit_stocks?: { [key: string]: SkuUnitStock }
  available_stock?: merchandise.UnitStock
  unit_stock_list?: SkuUnitStock[]
  is_remaining?: boolean
  virtual_stock?: merchandise.UnitStock
  batches?: Batch[]
}
export interface ReqCreateSkuStock {
  // sku_stock_id?: string
  status?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  spu_id: string
  sku_id: string
  base_unit_id: string
  stock?: merchandise.UnitStock
  base_unit_quantity: string
  frozen_stock?: merchandise.UnitStock
  in_transit_stock?: merchandise.UnitStock
  unit_stocks?: { [key: string]: SkuUnitStock }
  available_stock?: merchandise.UnitStock
  unit_stock_list?: SkuUnitStock[]
  is_remaining?: boolean
  virtual_stock?: merchandise.UnitStock
  batches?: Batch[]
}
export enum CostAllocation_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_PRICE = 1,
  TYPE_QUANTITY = 2,
}
export enum CostAllocation_Reason {
  REASON_UNSPECIFIED = 0,
  REASON_TRANSPORT = 1,
  REASON_OTHER = 2,
}
export enum CostAllocation_MoneyType {
  MONEY_UNSPECIFIED = 0,
  MONEY_ADD = 1,
  MONEY_SUB = 2,
}
export interface CostAllocation {
  type?: CostAllocation_Type
  reason?: CostAllocation_Reason
  money: string
  money_type?: CostAllocation_MoneyType
  sku_units?: SkuUnit[]
  remark?: string
  effected?: boolean
  creator_id: string
  create_time?: string
}
export interface CostAllocations {
  details?: CostAllocation[]
}
export interface StockSheet_UpdateBatch {
  batch_id: string
  stock?: merchandise.UnitStock
  update_price?: boolean
  batch_serial_no?: string
  origin_stock?: merchandise.UnitStock
  operate_type?: OperateType
  input_stock: merchandise.UnitValueSet
  old_stock?: merchandise.UnitStock
}
export enum StockSheet_Detail_DetailType {
  DETAIL_TYPE_UNSPECIFIED = 0,
  DETAIL_TYPE_SKU = 1,
  DETAIL_TYPE_TURNOVER = 2,
}
export interface StockSheet_Detail {
  detail_id?: string
  create_batches?: Batch[]
  update_batches?: StockSheet_UpdateBatch[]
  production_task_id?: string
  spu_id?: string
  sku_id: string
  base_unit_id?: string
  sku_unit_id: string
  remark?: string
  input_stock: merchandise.UnitValueSet
  amount: string
  origin_stock?: merchandise.UnitStock
  stock?: merchandise.UnitStock
  operator_id?: string
  old_stock?: merchandise.UnitStock
  original_input_stock?: merchandise.UnitValueSet
  sku_unit_rate?: string
  replace_batch_id?: string
  production_task_serial_no?: string
  creator_id?: string
  detail_type?: StockSheet_Detail_DetailType
  related_detail_id?: string
  target_customer_id?: string
  production_cost?: string
  is_by_product?: boolean
}
export interface StockSheet_Details {
  details: StockSheet_Detail[]
}
export enum StockSheet_SheetType {
  SHEET_TYPE_UNSPECIFIED = 0,
  SHEET_TYPE_PURCHASE_IN = 100,
  SHEET_TYPE_PRODUCT_IN = 110,
  SHEET_TYPE_MATERIAL_IN = 120,
  SHEET_TYPE_REFUND_IN = 130,
  SHEET_TYPE_TRANSFER_IN = 140,
  SHEET_TYPE_OTHER_IN = 150,
  SHEET_TYPE_SALE_OUT = 300,
  SHEET_TYPE_MATERIAL_OUT = 310,
  SHEET_TYPE_REFUND_OUT = 320,
  SHEET_TYPE_OTHER_OUT = 330,
  SHEET_TYPE_INVENTORY = 600,
  SHEET_TYPE_TRANSFER = 400,
  SHEET_TYPE_TURNOVER_LOAN = 700,
  SHEET_TYPE_TURNOVER_REVERT = 800,
  SHEET_TYPE_REPLACE = 900,
}
export enum StockSheet_SheetStatus {
  SHEET_STATUS_UNSPECIFIED = 0,
  SHEET_STATUS_NOT_SUBMITTED = 1,
  SHEET_STATUS_SUBMITTED = 2,
  SHEET_STATUS_NOT_APPROVED = 3,
  SHEET_STATUS_APPROVED = 4,
  SHEET_STATUS_CANCEL_APPROVAL = 5,
  SHEET_STATUS_DELETED = 6,
  SHEET_STATUS_PAID = 7,
}
export enum StockSheet_TargetType {
  SHEET_TARGET_TYPE_UNSPECIFIED = 0,
  SHEET_TARGET_TYPE_CUSTOMER = 1,
  SHEET_TARGET_TYPE_SUPPLIER = 2,
  SHEET_TARGET_TYPE_OTHER = 3,
}
export enum StockSheet_Status {
  STATUS_UNSPECIFIED = 0,
  STATUS_REPLACE = 256,
  STATUS_PRINTED = 512,
}
export enum StockSheet_PayStatus {
  PAY_STATUS_UNSPECIFIED = 0,
  PAY_STATUS_NOT_PAID = 1,
  PAY_STATUS_READY_TO_PAY = 2,
  PAY_STATUS_PAID = 3,
}
export enum StockSheet_RelatedSheetType {
  RELATED_SHEET_TYPE_UNSPECIFIED = 0,
  RELATED_SHEET_TYPE_ORDER = 2,
  RELATED_SHEET_TYPE_PURCHASE_SHEET = 3,
  RELATED_SHEET_TYPE_STOCK_SHEET = 4,
  RELATED_SHEET_TYPE_PRODUCTION = 5,
}
export interface StockSheet {
  stock_sheet_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  sheet_type: StockSheet_SheetType
  status?: string
  group_id?: string
  station_id?: string
  target_id?: string
  statement_id?: string
  sku_id?: string
  related_sheet_id?: string
  related_sheet_serial_no?: string
  sheet_status: StockSheet_SheetStatus
  submit_time?: string
  commit_time?: string
  creator_id?: string
  remark?: string
  discounts?: CostAllocations
  cost_allocation?: CostAllocations
  total_price?: string
  details: StockSheet_Details
  related_sheet_type?: StockSheet_RelatedSheetType
  target_type?: StockSheet_TargetType
  target_name?: string
  last_adjust_time?: string
  batch_index?: string
  driver_id?: string
  settle_sheet_id?: string
  settle_sheet_serial_no?: string
  pay_status?: StockSheet_PayStatus
  stock_sheet_serial_no?: string
  response_time?: string
}
export interface ReqCreateStockSheet {
  // stock_sheet_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  sheet_type: StockSheet_SheetType
  status?: string
  // group_id?: string
  station_id?: string
  target_id?: string
  statement_id?: string
  sku_id?: string
  related_sheet_id?: string
  related_sheet_serial_no?: string
  sheet_status: StockSheet_SheetStatus
  submit_time?: string
  commit_time?: string
  creator_id?: string
  remark?: string
  discounts?: CostAllocations
  cost_allocation?: CostAllocations
  total_price?: string
  details: StockSheet_Details
  related_sheet_type?: StockSheet_RelatedSheetType
  target_type?: StockSheet_TargetType
  target_name?: string
  last_adjust_time?: string
  batch_index?: string
  driver_id?: string
  settle_sheet_id?: string
  settle_sheet_serial_no?: string
  pay_status?: StockSheet_PayStatus
  stock_sheet_serial_no?: string
  response_time?: string
}
export interface StockLog {
  stock_log_id: string
  submit_time?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  spu_id?: string
  sku_id?: string
  base_unit_id?: string
  sku_unit_id?: string
  operator_id?: string
  stock_sheet_id?: string
  production_task_id?: string
  target_id?: string
  detail_id?: string
  old_stock?: merchandise.UnitStock
  new_stock?: merchandise.UnitStock
  operate_type: OperateType
  cancel_time?: string
  sheet_type: StockSheet_SheetType
  target_type?: StockSheet_TargetType
  target_name?: string
  stock_sheet_serial_no?: string
  production_task_serial_no?: string
  target_customer_id?: string
  related_sheet_serial_no?: string
  driver_id?: string
}
export interface ReqCreateStockLog {
  // stock_log_id: string
  submit_time?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  spu_id?: string
  sku_id?: string
  base_unit_id?: string
  sku_unit_id?: string
  operator_id?: string
  stock_sheet_id?: string
  production_task_id?: string
  target_id?: string
  detail_id?: string
  old_stock?: merchandise.UnitStock
  new_stock?: merchandise.UnitStock
  operate_type: OperateType
  cancel_time?: string
  sheet_type: StockSheet_SheetType
  target_type?: StockSheet_TargetType
  target_name?: string
  stock_sheet_serial_no?: string
  production_task_serial_no?: string
  target_customer_id?: string
  related_sheet_serial_no?: string
  driver_id?: string
}
export enum AdjustSheet_AdjustSheetStatus {
  ADJUST_SHEET_STATUS_UNSPECIFIED = 0,
  ADJUST_SHEET_STATUS_NOT_SUBMITTED = 1,
  ADJUST_SHEET_STATUS_ADJUSTING = 2,
  ADJUST_SHEET_STATUS_DONE = 3,
  ADJUST_SHEET_STATUS_FAIL = 4,
}
export interface AdjustSheet_Detail {
  batch_id: string
  original_price: string
  adjust_price: string
  replace_batch_id?: string
  sku_id: string
  stock_amount: string
  unit_id: string
  adjust_time?: string
  submit_time?: string
}
export interface AdjustSheet_Details {
  details?: AdjustSheet_Detail[]
}
export interface AdjustSheet {
  adjust_sheet_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  station_id?: string
  group_id?: string
  adjust_sheet_serial_no?: string
  details?: AdjustSheet_Details
  adjust_sheet_status?: AdjustSheet_AdjustSheetStatus
  stock_sheet_id?: string
  stock_sheet_serial_no?: string
  stock_sheet_type?: StockSheet_SheetType
  async_task_id?: string
  creator_id?: string
}
export interface ReqCreateAdjustSheet {
  // adjust_sheet_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  station_id?: string
  // group_id?: string
  adjust_sheet_serial_no?: string
  details?: AdjustSheet_Details
  adjust_sheet_status?: AdjustSheet_AdjustSheetStatus
  stock_sheet_id?: string
  stock_sheet_serial_no?: string
  stock_sheet_type?: StockSheet_SheetType
  async_task_id?: string
  creator_id?: string
}
export interface CustomerTurnover_Stocks {
  unit_stocks?: { [key: string]: merchandise.UnitStock }
}
export interface CustomerTurnover {
  customer_turnover_id?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  customer_id?: string
  base_unit_id?: string
  stocks?: CustomerTurnover_Stocks
  stock_list?: merchandise.UnitStock[]
}
export interface ReqCreateCustomerTurnover {
  // customer_turnover_id?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  customer_id?: string
  base_unit_id?: string
  stocks?: CustomerTurnover_Stocks
  stock_list?: merchandise.UnitStock[]
}
export enum TimeType {
  TIME_TYPE_UNSPECIFIED = 0,
  TIME_TYPE_CREATE = 1,
  TIME_TYPE_SUBMIT = 2,
  TIME_TYPE_COMMIT = 3,
  TIME_TYPE_ORDER_RECEIVE = 11,
}
export interface CheckSkuUnit {
  sku_unit?: SkuUnit
  request_quantity?: merchandise.UnitStock
  pass?: boolean
  real_quantity?: merchandise.UnitStock
}
export interface ReplaceBatch_ReplaceDetail {
  const_batch_id?: string
  stock?: merchandise.UnitStock
  all?: boolean
  result_replace_quantity?: string
  const_batch_serial_no?: string
  sku_unit_id?: string
}
export interface ReplaceBatch {
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  sku_id?: string
  base_unit_id?: string
  virtual_batch_id?: string
  details?: ReplaceBatch_ReplaceDetail[]
}
export interface ReqCreateReplaceBatch {
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  sku_id?: string
  base_unit_id?: string
  virtual_batch_id?: string
  details?: ReplaceBatch_ReplaceDetail[]
}
export enum RequestDetail {
  REQUEST_DETAIL_UNSPECIFIED = 0,
  REQUEST_DETAIL_SKUS = 256,
  REQUEST_DETAIL_SHELVES = 512,
}
export interface StockSummary {
  group_id?: string
  station_id?: string
  target_id?: string
  target_type?: StockSheet_TargetType
  base_unit_id?: string
  sku_unit_id?: string
  date_time?: string
  beigin_stock?: merchandise.UnitStock
  end_stock?: merchandise.UnitStock
  operate_stock?: { [key: string]: merchandise.UnitStock }
}
export interface Additional {
  skuinfos?: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  units?: { [key: string]: merchandise.Unit }
  suppliers?: { [key: string]: enterprise.Supplier }
  customer_users?: { [key: string]: enterprise.CustomerUser }
  shelfs?: { [key: string]: Shelf }
  group_users?: { [key: string]: enterprise.GroupUser }
  batches?: { [key: string]: Batch }
  customers?: { [key: string]: enterprise.Customer }
  sku_stocks?: { [key: string]: SkuStock }
}
export interface ListStockSummaryRequest {
  paging: common.PagingParams
  category_ids?: string[]
  sku_id?: string
  q?: string
  begin_time: string
  end_time: string
  operate_type?: OperateType
}
export interface ListStockSummaryResponse {
  paging: common.PagingResult
  stock_summaries: StockSummary[]
}
export interface UpdateOrderStockRequest {
  check_data: CheckSkuUnit[]
}
export interface UpdateOrderStockResponse {
  check_data?: CheckSkuUnit[]
  code?: string
}
export interface UpdatePendingStockRequest {
  id?: string
  pending_stocks?: SkuUnitStock_PendingStock_PendingStockDetail[]
}
export interface UpdatePendingStockResponse {
  id?: string
}
export interface CreateStockSheetRequest {
  stock_sheet: ReqCreateStockSheet
  recommend_price?: boolean
}
export interface CreateStockSheetResponse {
  stock_sheet: StockSheet
  async_task_id?: string
}
export interface UpdateSkuUnitStockConfigRequest {
  sku_unit?: SkuUnit
  config?: SkuUnitStock_Config
  virtual_stock?: merchandise.UnitStock
}
export interface UpdateSkuUnitStockConfigResponse {
  sku_unit?: SkuUnit
}
export interface UpdateStockSheetRequest {
  stock_sheet_id: string
  stock_sheet: StockSheet
  operate_type?: OperateType
}
export interface UpdateStockSheetResponse {
  stock_sheet: StockSheet
  async_task_id?: string
}
export interface DeleteStockSheetRequest {
  stock_sheet_id: string
}
export interface DeleteStockSheetResponse {
  stock_sheet: StockSheet
}
export interface GetStockSheetRequest {
  stock_sheet_id: string
  with_additional?: boolean
}
export interface GetStockSheetResponse {
  stock_sheet: StockSheet
  additional: Additional
}
export interface ListStockSheetRequest {
  paging: common.PagingParams
  stock_sheet_type?: StockSheet_SheetType
  time_type?: TimeType
  begin_time?: string
  end_time?: string
  target_id?: string
  q?: string
  stock_sheet_status?: StockSheet_SheetStatus
  sheet_ids?: string[]
  customer_tags?: string[]
  is_printed?: common.Filters_Bool
  route_ids?: string[]
  sheet_nos?: string[]
  with_additional?: boolean
  esc?: boolean
  customer_label_ids?: string[]
  stock_sheet_types?: StockSheet_SheetType[]
  customer_q?: string
  sku_q?: string
  pay_status?: StockSheet_PayStatus[]
}
export interface ListStockSheetResponse {
  paging: common.PagingResult
  stock_sheets: StockSheet[]
  additional?: Additional
  find_out_filter?: boolean
}
export interface GetManyStockSheetRequest {
  ids?: string[]
}
export interface GetManyStockSheetResponse {
  stock_sheets: { [key: string]: StockSheet }
}
export interface CleanStockSheetRequest {
}
export interface CleanStockSheetResponse {
}
export interface CreateSkuStockRequest {
  sku_stock: ReqCreateSkuStock
}
export interface CreateSkuStockResponse {
  sku_stock: SkuStock
}
export interface UpdateSkuStockRequest {
  sku_stock_id: string
  sku_stock: SkuStock
}
export interface UpdateSkuStockResponse {
  sku_stock: SkuStock
}
export interface DeleteSkuStockRequest {
  sku_stock_id: string
}
export interface DeleteSkuStockResponse {
  sku_stock: SkuStock
}
export interface ListSkuStockRequest {
  paging: common.PagingParams
  sku_ids?: string[]
  q?: string
  request_detail?: RequestDetail
  category_ids?: string[]
  sku_type?: merchandise.Sku_SkuType
  with_additional?: boolean
  remaining_only?: boolean
  unit_stock_map?: boolean
}
export interface ListSkuStockResponse {
  paging: common.PagingResult
  sku_stocks: SkuStock[]
  additional?: Additional
}
export interface GetSkuStockRequest {
  sku_stock_id?: string
  sku_id?: string
  with_additional?: boolean
}
export interface GetSkuStockResponse {
  sku_stock: SkuStock
  additional: Additional
}
export interface GetManySkuStockRequest {
  sku_ids?: string[]
}
export interface GetManySkuStockResponse {
  sku_stocks: { [key: string]: SkuStock }
}
export interface CleanSkuStockRequest {
}
export interface CleanSkuStockResponse {
}
export interface CreateSkuUnitStockRequest {
  sku_unit_stock: ReqCreateSkuUnitStock
}
export interface CreateSkuUnitStockResponse {
  sku_unit_stock: SkuUnitStock
}
export interface UpdateSkuUnitStockRequest {
  sku_unit_stock_id: string
  sku_unit_stock: SkuUnitStock
}
export interface UpdateSkuUnitStockResponse {
  sku_unit_stock: SkuUnitStock
}
export interface DeleteSkuUnitStockRequest {
  sku_unit_stock_id: string
}
export interface DeleteSkuUnitStockResponse {
  sku_unit_stock: SkuUnitStock
}
export interface ListSkuUnitStockRequest {
  paging: common.PagingParams
  sku_id?: string
  sku_unit_id?: string
  q?: string
  with_additional?: boolean
  remaining_only?: boolean
}
export interface ListSkuUnitStockResponse {
  paging: common.PagingResult
  sku_unit_stocks: { [key: string]: SkuUnitStock }
  additional?: Additional
}
export interface GetSkuUnitStockRequest {
  sku_unit_stock_id?: string
  sku_id?: string
  unit_id?: string
}
export interface GetSkuUnitStockResponse {
  sku_unit_stock: SkuUnitStock
  sku_available_stock?: merchandise.UnitStock
}
export interface CleanSkuUnitStockRequest {
}
export interface CleanSkuUnitStockResponse {
}
export interface CreateBatchRequest {
  batch: ReqCreateBatch
}
export interface CreateBatchResponse {
  batch: Batch
}
export interface UpdateBatchRequest {
  batch_id: string
  batch: Batch
}
export interface UpdateBatchResponse {
  batch: Batch
}
export interface DeleteBatchRequest {
  batch_id: string
}
export interface DeleteBatchResponse {
  batch: Batch
}
export interface ListBatchRequest {
  paging: common.PagingParams
  batches_ids?: string[]
  supplier_id?: string
  q?: string
  begin_time?: string
  end_time?: string
  sku_id?: string
  base_unit_id?: string
  sku_unit_id?: string
  shelf_ids?: string[]
  with_additional?: boolean
  batch_type?: Batch_BatchType
  remaining?: common.Filters_Bool
  production_task_id?: string
  need_virual_batch?: boolean
  target_customer_ids?: string[]
}
export interface ListBatchResponse {
  paging: common.PagingResult
  batches: Batch[]
  additional?: Additional
}
export interface GetBatchRequest {
  batch_id: string
  with_additional?: boolean
}
export interface GetBatchResponse {
  batch: Batch
  additional: Additional
}
export interface CleanBatchRequest {
}
export interface CleanBatchResponse {
}
export interface CreateStockLogRequest {
  stock_log: ReqCreateStockLog
}
export interface CreateStockLogResponse {
  stock_log: StockLog
}
export interface UpdateStockLogRequest {
  stock_log_id: string
  stock_log: StockLog
}
export interface UpdateStockLogResponse {
  stock_log: StockLog
}
export interface DeleteStockLogRequest {
  stock_log_id: string
}
export interface DeleteStockLogResponse {
  stock_log: StockLog
}
export interface CleanStockLogRequest {
}
export interface CleanStockLogResponse {
}
export interface ListStockLogRequest {
  paging: common.PagingParams
  operate_type: OperateType
  stock_sheet_id?: string
  target_id?: string
  category_ids?: string[]
  q?: string
  begin_time?: string
  end_time?: string
  sku_id?: string
  unit_id?: string
  show_cancelled?: boolean
  sku_type?: merchandise.Sku_SkuType
  target_customer_ids?: string[]
  with_additional?: boolean
  esc?: boolean
  operate_types?: OperateType[]
}
export interface ListStockLogResponse {
  paging: common.PagingResult
  stock_logs: StockLog[]
  additional?: Additional
}
export interface GetStockLogRequest {
  stock_log_id: string
}
export interface GetStockLogResponse {
  stock_log: StockLog
}
export interface CreateBatchLogRequest {
  batch_log: ReqCreateBatchLog
}
export interface CreateBatchLogResponse {
  batch_log: BatchLog
}
export interface UpdateBatchLogRequest {
  batch_log_id: string
  batch_log: BatchLog
}
export interface UpdateBatchLogResponse {
  batch_log: BatchLog
}
export interface DeleteBatchLogRequest {
  batch_log_id: string
}
export interface DeleteBatchLogResponse {
  batch_log: BatchLog
}
export interface ListBatchLogRequest {
  paging: common.PagingParams
  batch_id?: string
  q?: string
  begin_time?: string
  end_time?: string
  with_additional?: boolean
  sku_ids?: string[]
  production_task_ids?: string[]
  operates?: OperateType[]
}
export interface ListBatchLogResponse {
  paging: common.PagingResult
  batch_logs: BatchLog[]
  additional?: Additional
}
export interface GetBatchLogRequest {
  batch_log_id: string
}
export interface GetBatchLogResponse {
  batch_log: BatchLog
}
export interface CleanBatchLogRequest {
}
export interface CleanBatchLogResponse {
}
export interface CreateShelfRequest {
  shelf: ReqCreateShelf
}
export interface CreateShelfResponse {
  shelf: Shelf
}
export interface UpdateShelfRequest {
  shelf_id: string
  shelf: Shelf
}
export interface UpdateShelfResponse {
  shelf_id?: string
  shelf: Shelf
}
export interface DeleteShelfRequest {
  shelf_id: string
}
export interface DeleteShelfResponse {
  shelf_id?: string
  shelf: Shelf
}
export interface ListShelfRequest {
  shelf_ids?: string[]
  with_deleted?: boolean
}
export interface ListShelfResponse {
  shelves: Shelf[]
}
export interface GetShelfRequest {
  shelf_id: string
}
export interface GetShelfResponse {
  shelf: Shelf
}
export interface CleanShelfRequest {
}
export interface CleanShelfResponse {
}
export interface CreateAdjustSheetRequest {
  adjust_sheet: ReqCreateAdjustSheet
}
export interface CreateAdjustSheetResponse {
  adjust_sheet: AdjustSheet
}
export interface UpdateAdjustSheetRequest {
  adjust_sheet_id: string
  adjust_sheet: AdjustSheet
}
export interface UpdateAdjustSheetResponse {
  adjust_sheet: AdjustSheet
}
export interface DeleteAdjustSheetRequest {
  adjust_sheet_id: string
}
export interface DeleteAdjustSheetResponse {
  adjust_sheet: AdjustSheet
}
export interface ListAdjustSheetRequest {
  paging: common.PagingParams
  adjust_sheet_id?: string
  adjust_serial_no?: string
  adjust_sheet_status?: AdjustSheet_AdjustSheetStatus
  q?: string
  begin_time?: string
  end_time?: string
  with_additional?: boolean
}
export interface ListAdjustSheetResponse {
  paging: common.PagingResult
  adjust_sheets: AdjustSheet[]
  additional?: Additional
}
export interface GetAdjustSheetRequest {
  adjust_sheet_id: string
  with_additional?: boolean
}
export interface GetAdjustSheetResponse {
  adjust_sheet: AdjustSheet
  additional?: Additional
}
export interface CleanAdjustSheetRequest {
}
export interface CleanAdjustSheetResponse {
}
export interface ListCustomerTurnoverRequest {
  paging: common.PagingParams
  customer_ids?: string[]
  q?: string
  with_additional?: boolean
}
export interface ListCustomerTurnoverResponse {
  paging: common.PagingResult
  customer_turnover: CustomerTurnover[]
  additional?: Additional
}
export interface ExportCustomerTurnoverRequest {
  list_customer_turnover_request?: ListCustomerTurnoverRequest
}
export interface ExportCustomerTurnoverResponse {
  task_id?: string
}
export interface CleanCustomerTurnoverRequest {
}
export interface CleanCustomerTurnoverResponse {
}
export interface CreateCustomerTurnoverRequest {
  customer_turnover?: ReqCreateCustomerTurnover
}
export interface CreateCustomerTurnoverResponse {
  customer_turnover: CustomerTurnover
}
export interface UpdateCustomerTurnoverRequest {
  customer_turnover_id?: string
  customer_turnover?: CustomerTurnover
}
export interface UpdateCustomerTurnoverResponse {
  customer_turnover: CustomerTurnover
}
export interface DeleteCustomerTurnoverRequest {
  customer_turnover_id?: string
}
export interface DeleteCustomerTurnoverResponse {
  customer_turnover: CustomerTurnover
}
export interface GetCustomerTurnoverRequest {
  customer_turnover_id?: string
}
export interface GetCustomerTurnoverResponse {
  customer_turnover: CustomerTurnover
}
export interface ListPendingStockRequest {
  paging: common.PagingParams
  sku_id: string
  sku_unit_id?: string
  pending_type?: PendingType[]
  with_additional?: boolean
}
export interface ListPendingStockResponse {
  paging: common.PagingResult
  pending_stock_details?: SkuUnitStock_PendingStock_PendingStockDetail[]
  frozen_stock?: merchandise.UnitStock
  in_transit_stock?: merchandise.UnitStock
  available_stock?: merchandise.UnitStock
  additional?: Additional
}
export interface AsyncCommitAdjustSheetRequest {
  adjust_sheet_id?: string
}
export interface AsyncCommitAdjustSheetResponse {
  task?: asynctask.Task
}
export interface ExportStockLogRequest {
  list_stock_log_request?: ListStockLogRequest
  task_type?: asynctask.Task_Type
}
export interface ExportStockLogResponse {
  task_id?: string
}
export interface ExportStockSheetRequest {
  list_stock_sheet_request?: ListStockSheetRequest
}
export interface ExportStockSheetResponse {
  task_id?: string
}
export interface BatchSyncStockSheetRequest {
  stock_sheets?: StockSheet[]
}
export interface BatchSyncStockSheetResponse {
  stock_sheets?: StockSheet[]
}
export interface SyncStockSheetRequest {
  stock_sheet?: StockSheet
  related_sheet_id?: string
  related_sheet_type?: StockSheet_RelatedSheetType
  delete?: boolean
  sheet_type?: StockSheet_SheetType
}
export interface SyncStockSheetResponse {
  stock_sheet?: StockSheet
}
export interface ExportSkuStockRequest {
  list_sku_stock_request?: ListSkuStockRequest
  inventory_settings?: preference.InventorySettings
}
export interface ExportSkuStockResponse {
  task_id?: string
}
export interface BatchUpdateStockSheetRequest_Fail {
  stock_sheet_serial_no?: string
  reason?: string
}
export interface BatchUpdateStockSheetRequest {
  list_stock_sheet_request?: ListStockSheetRequest
  stock_sheet_ids?: string[]
  fails?: BatchUpdateStockSheetRequest_Fail[]
  inventory_settings?: preference.InventorySettings
  target_status?: StockSheet_SheetStatus
  stock_sheet_type?: StockSheet_SheetType
}
export interface BatchUpdateStockSheetResponse {
  task_id?: string
}
export interface CreateReplaceStockSheetRequest {
  list_batch_request?: ListBatchRequest
  batch_ids?: string[]
  sheet_type: StockSheet_SheetType
}
export interface CreateReplaceStockSheetResponse {
  stock_sheet?: StockSheet
}
export interface CheckOutStockRequest {
  list_stock_sheet_request?: ListStockSheetRequest
  stock_sheet_ids?: string[]
}
export interface CheckOutStockResponse_LackStock {
  sku_id?: string
  quantity?: string
}
export interface CheckOutStockResponse {
  lack_stock?: CheckOutStockResponse_LackStock[]
  additional?: Additional
}
export interface CreateReplaceBatchRequest {
  sku_id?: string
  batch_ids?: string[]
  list_virtual_stock_request?: ListVirtualStockRequest
  replace_details?: ReplaceBatch_ReplaceDetail[]
}
export interface CreateReplaceBatchResponse {
  replace_details?: ReplaceBatch_ReplaceDetail[]
  adjust_sheet_id?: string
  adjust_sheet_serial_no?: string
}
export interface ListVirtualStockRequest {
  paging: common.PagingParams
  category_ids?: string[]
  q?: string
  begin_time?: string
  end_time?: string
  with_additional?: boolean
}
export interface ListVirtualStockResponse {
  paging: common.PagingResult
  sku_stocks?: SkuStock[]
  additional?: Additional
}
export interface ListProductionTaskCostRequest {
  production_task_ids?: string[]
}
export interface ListProductionTaskCostResponse {
  costs?: { [key: string]: string }
}
export interface BatchSyncTurnoverLoansRequest {
  sheets?: StockSheet[]
  related_sheet_id?: string
  related_sheet_type?: StockSheet_RelatedSheetType
}
export interface BatchSyncTurnoverLoansResponse {
}
export interface CreateZeroCheckSheetRequest {
  batch_ids?: string
  sku_ids?: string
  all_batch?: boolean
}
export interface CreateZeroCheckSheetResponse {
  stock_sheet?: StockSheet
}
export interface BatchUpdateStockSheetPayStatusRequest {
  stock_sheet_ids?: string[]
  list_stock_sheet_request?: ListStockSheetRequest
  pay_status?: StockSheet_PayStatus
  settle_sheet_serial_no?: string
  settle_sheet_id?: string
}
export interface BatchUpdateStockSheetPayStatusResponse {
}