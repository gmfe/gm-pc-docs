syntax = "proto3";

package ceres.driverapp;
option java_multiple_files = true;
option go_package = "code.guanmai.cn/back_end/ceres/driverapp/proto;proto";

import "./google/api/annotations.proto";

import "./common/proto/common.proto";
import "./order/proto/order.proto";
import "./enterprise/proto/enterprise.proto";
import "./merchandise/proto/merchandise.proto";
import "./include/protoc-gen-validate/validate.proto";

service DriverAppService {
    // 获取首页数据
    rpc GetTaskInfo(GetTaskInfoRequest) returns (GetTaskInfoResponse) {
        option (google.api.http) = {
            post : "/ceres/driverapp/DriverAppService/GetTaskInfo"
        };
    };

    // 获取我的页数据
    rpc GetDriverInfo(GetDriverInfoRequest) returns (GetDriverInfoResponse) {
        option (google.api.http) = {
            post : "/ceres/driverapp/DriverAppService/GetDriverInfo"
        };
    };

    rpc ListTask(ListTaskRequest) returns (ListTaskResponse) {
        option (google.api.http) = {
            post : "/ceres/driverapp/DriverAppService/ListTask"
        };
    };

    // rpc PayTask (PayTaskRequest) returns (PayTaskResponse) {
    //     option (google.api.http) = {
    //         post : "/delivery/PayTask"
    //     };
    // };

    // 直接使用修改订单接口 order/UpdateOrder
    // rpc FinishTask (FinishTaskRequest) returns (FinishTaskResponse) {
    //     option (google.api.http) = {
    //         post : "/driverapp/FinishTask"
    //     };
    // };

    // 售后使用订单order模块的接口实现
}

message GetTaskInfoRequest {}

message GetTaskInfoResponse {
    uint32 to_delivery_task_count   = 1; // 待配送
    uint32 today_recived_task_count = 2; // 今日已配送（已签收）

    message MonthTaskInfo {
        uint64 delivery_task_count     = 1; // 配送任务
        uint64 delivery_customer_count = 2; // 商户
        string delivery_task_amount    = 3; // 销售额
    }
    MonthTaskInfo month_task_info = 3; // 本月累计
}

message GetDriverInfoRequest {}

message GetDriverInfoResponse {
    enterprise.GroupUser              driver                  = 1; // 司机信息
    enterprise.DistributionContractor distribution_contractor = 2; // 承运商信息
    message                           BaseInfo {
        repeated enterprise.Role roles       = 1; // 售后中的部门备选项
        repeated enterprise.Station stations = 2; // 售后中的站点/入库仓备选项
        common.Image                logo     = 3; // group logo
    }
    BaseInfo base_info = 3; // 司机所属用户组的基本信息，用来在售后时提供备选项
}

message ListTaskRequest {
    enum TaskStatus {
        UNSPECIFIED = 0; // 全部任务
        TODELIVERY  = 1; // 待配送任务
    }

    TaskStatus          task_status        = 1;                                              // 任务状态类型
    uint64              receive_begin_date = 2 [ (validate.rules).uint64 = {gt: 0} ];  // 收货起始日期
    uint64              receive_end_date   = 3 [ (validate.rules).uint64 = {gt: 0} ];  // 收货截止日期
    common.PagingParams paging             = 4 [ (validate.rules).message.required = true ]; // 分页信息
}

message ListTaskResponse {
    repeated order.Order tasks  = 1; // 配送任务（订单）列表
    map<uint64, enterprise.Customer> customers = 2;
    map<uint64, merchandise.Quotation> quotations = 3;
    common.PagingResult  paging = 4; // 分页信息
}
