import * as common from '../common'
import * as oauth from '../oauth'
import * as enterprise from '../enterprise'
import * as account from '../account'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
export interface TaskDelegate {
  type?: Task_Type
  endpoint?: string
  max_concurrent_task?: number
  task_max_schdule_count?: number
  task_max_failure_count?: number
}
export enum Task_Category {
  CATEGORY_UNSPECIFIED = 0,
  CATEGORY_EXPORT = 1,
  CATEGORY_OTHER = 999,
}
export enum Task_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_ASYNCTASK_FOO_TEST_NORMAL = 1,
  TYPE_ASYNCTASK_FOO_TEST_MAX_FAILURE = 2,
  TYPE_ORDER_ORDER_IMPORT = 1000,
  TYPE_ORDER_ORDERSTATE_UPDATE = 1001,
  TYPE_ORDER_ORDEROUTSTOCK_UPDATE = 1002,
  TYPE_ORDER_ORDERSSUPRICE_UPDATE = 1003,
  TYPE_ORDER_SSUPRICE_SYNC = 1004,
  TYPE_ORDER_ORDER_CREATE = 1005,
  TYPE_ORDER_ORDER_EXPORT = 1006,
  TYPE_ORDER_ORDERDRIVER_UPDATE = 1007,
  TYPE_ORDER_ORDERDRIVER_AUTOUPDATE = 1008,
  TYPE_ORDER_ORDER_SUBMIT_PURCHASE_TASK = 1009,
  TYPE_ORDER_SCAN_RECEIPT = 1010,
  TYPE_PRODUCTION_TASK_CREATE = 1100,
  TYPE_PRODUCTION_PURCHASE_SKU_EXPORT = 1101,
  TYPE_PRODUCTION_TASK_EXPORT = 1102,
  TYPE_PRODUCTION_BOM_EXPORT = 1103,
  TYPE_PRODUCTION_TASK_DATA_EXPORT = 1104,
  TYPE_PRODUCTION_BOM_IMPORT = 1105,
  TYPE_PRODUCTION_PROCESS_TEMPLATE_EXPORT = 1106,
  TYPE_MERCHANDISE_SKU_EXPORT = 1200,
  TYPE_MERCHANDISE_SSU_EXPORT = 1201,
  TYPE_MERCHANDISE_SKU_SSU_UPDATE = 1202,
  TYPE_MERCHANDISE_CREATE_ALL = 1203,
  TYPE_MERCHANDISE_CREATE_SSU = 1204,
  TYPE_ENTERPRISE_CUSTOMER_EXPORT = 1300,
  TYPE_ENTERPRISE_CUSTOMER_IMPORT = 1301,
  TYPE_ENTERPRISE_SUPPLIER_EXPORT = 1302,
  TYPE_INVENTORY_STOCK_SHEET_LIST_EXPORT = 1400,
  TYPE_INVENTORY_BATCH_LOG_EXPORT = 1402,
  TYPE_INVENTORY_COMMIT_ADJUST_SHEET = 1403,
  TYPE_INVENTORY_BATCH_SYNC_STOCK_SHEET = 1404,
  TYPE_INVENTORY_CHANGE_LOG_EXPORT = 1410,
  TYPE_INVENTORY_PURCHASE_IN_LOG_EXPORT = 1411,
  TYPE_INVENTORY_SALE_OUT_LOG_EXPORT = 1412,
  TYPE_INVENTORY_MATERIAL_OUT_LOG_EXPORT = 1413,
  TYPE_INVENTORY_MATERIAL_IN_LOG_EXPORT = 1414,
  TYPE_INVENTORY_PRODUCT_IN_LOG_EXPORT = 1415,
  TYPE_INVENTORY_REFOUND_OUT_LOG_EXPORT = 1416,
  TYPE_INVENTORY_OTHER_OUT_LOG_EXPORT = 1417,
  TYPE_INVENTORY_OTHER_IN_LOG_EXPORT = 1418,
  TYPE_INVENTORY_INCREASE_IN_LOG_EXPORT = 1419,
  TYPE_INVENTORY_LOSS_OUT_LOG_EXPORT = 1420,
  TYPE_INVENTORY_CUSTOMER_TURNOVER_EXPORT = 1421,
  TYPE_INVENTORY_LOAN_EXPORT = 1422,
  TYPE_INVENTORY_REVERT_EXPORT = 1423,
  TYPE_INVENTORY_CUSTOMER_TURNOVER_LOG_EXPORT = 1424,
  TYPE_INVENTORY_SHEET_EXPORT = 1450,
  TYPE_INVENTORY_BATCH_UPDATE_STOCK_SHEET = 1498,
  TYPE_INVENTORY_SKU_STOCK_EXPORT = 1499,
  TYPE_SORTING_SORTING_PERFORMANCE_EXPORT = 1500,
  TYPE_PURCHASE_PURCHASE_SHEET_EXPORT = 1601,
  TYPE_PURCHASE_INQUIRY_PRICE_IMPORT = 1602,
  TYPE_PURCHASE_PURCHASE_TASK_RELEASE = 1603,
  TYPE_PURCHASE_PURCHASE_TASK_SWITCH_SUPPLIER = 1604,
  TYPE_PURCHASE_PURCHASE_TASK_SWITCH_PURCHASER = 1605,
  TYPE_PURCHASE_PURCHASE_TASK_CREATE_PURCHASE_SHEET = 1606,
  TYPE_PURCHASE_PURCHASE_TASK_EXPORT = 1607,
  TYPE_PURCHASE_INQUIRY_PRICE_IMPORT_TMPL = 1608,
  TYPE_ESHOP_ESHOP_ORDER_EXPORT = 1706,
  TYPE_ESHOP_ESHOP_ORDER_UPDATE = 1707,
  TYPE_ESHOP_LEAVEAPPLICATION_EXPORT = 1801,
  TYPE_AFTER_SALE_EXPORT_ORDER = 1900,
  TYPE_AFTER_SALE_EXPORT_TASK = 1901,
  TYPE_AFTER_SALE_EXPORT_ORDER_SHEET = 1902,
  TYPE_AFTER_SALE_EXPORT_ORDER_DETAIL = 1903,
  TYPE_INITIALIZATION_CLEAN_GROUP_TICKET = 2000,
  TYPE_INITIALIZATION_CLEAN_GROUP_DATA = 2001,
  TYPE_FINANCE_SETTLE_EXPORT = 2100,
  TYPE_FINANCE_BATCH_PAY_SETTLE = 2101,
  TYPE_FINANCE_FLOW_EXPORT = 2102,
  TYPE_FINANCE_ACCOUNT_BALANCE_EXPORT = 2103,
  TYPE_FINANCE_BATCH_SUBMIT_SETTLE_SHEET = 2104,
}
export enum Task_State {
  STATE_UNSPECIFIED = 0,
  STATE_CREATED = 1,
  STATE_READY = 2,
  STATE_RUNNING = 3,
  STATE_CANCELED = 4,
  STATE_FAULTED = 5,
  STATE_COMPLETED = 6,
}
export interface Task {
  task_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  creator_id?: string
  category?: Task_Category
  type?: Task_Type
  priority?: number
  singleton_id?: string
  data?: bytes
  user_info?: oauth.UserInfo
  name?: string
  state?: Task_State
  is_busy?: boolean
  schedule_time?: string
  schedule_count?: number
  failure_count?: number
  next_schedule_time?: string
}
export interface ReqCreateTask {
  // task_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  creator_id?: string
  category?: Task_Category
  type?: Task_Type
  priority?: number
  singleton_id?: string
  data?: bytes
  user_info?: oauth.UserInfo
  name?: string
  state?: Task_State
  is_busy?: boolean
  schedule_time?: string
  schedule_count?: number
  failure_count?: number
  next_schedule_time?: string
}
export interface TaskData_Count {
  total?: number
  created?: number
  updated?: number
  deleted?: number
  reserve1?: number
  reserve2?: number
}
export interface TaskData {
  task_data_id?: string
  total?: number
  progress?: number
  success_count?: TaskData_Count
  failure_count?: TaskData_Count
  data?: bytes
  parameters?: common.StringSet
  success_attach_url?: string
  failure_attach_url?: string
}
export interface CreateTaskRequest {
  task: ReqCreateTask
}
export interface CreateTaskResponse {
  task: Task
}
export interface DeleteTaskRequest {
  task_id?: string
}
export interface DeleteTaskResponse {
  task: Task
}
export interface GetTaskRequest {
  task_id?: string
}
export interface GetTaskResponse {
  task: Task
  task_data?: TaskData
}
export interface ListTaskRequest {
  category?: Task_Category
  type?: Task_Type
  states?: Task_State[]
  singleton_id?: string
}
export interface ListTaskResponse {
  tasks: Task[]
  task_datas?: { [key: string]: TaskData }
}
export interface RegisterTaskDelegateRequest {
  task_delegate?: TaskDelegate
}
export interface RegisterTaskDelegateResponse {
}
export interface Foo {
  foo_id?: string
  foo_name?: string
}
export interface FooPrintTaskData {
  print_foos?: Foo[]
}