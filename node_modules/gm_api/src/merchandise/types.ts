import * as common from '../common'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as asynctask from '../asynctask'
import * as oauth from '../oauth'
import * as enterprise from '../enterprise'
import * as account from '../account'
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  CATEGORY_EXISTS = 22220001,
  PARENT_CATEGORY_NOT_EXISTS = 22220002,
  PARENT_CATEGORY_CAN_NOT_CHANGE = 22220003,
  CHILD_CATEGORY_EXISTS = 22220004,
  CHILD_SPU_EXISTS = 22220005,
  SPU_EXISTS = 22220006,
  UNIT_NOT_EXISTS = 22220007,
  BASE_UNIT_CAN_NOT_CHANGE = 22220008,
  SKU_NOT_EXISTS = 22220009,
  SKU_EXISTS = 22220010,
  SSU_EXISTS = 22220011,
  CUSTOMIZE_CODE_EXISTS = 22220012,
  CUSTOMER_NOT_BAND_QUOTATION = 22220030,
  DUPLICATE_QUOTATION_NAME = 22220031,
  CANNOT_DELETE_DEFAULT_QUOTATION = 22220032,
  DUPLICATE_FAVORITE_SSU = 22220040,
  CANNOT_UPDATE_DEFAULT_FAVORITE = 22220041,
  ASYNC_TASK_PARAM_ERROR = 22220050,
}
export interface Status {
}
export enum SystemUnitId {
  S_UNSPECIFIED = 0,
  SYSTEM_UNIT_ID_BEGIN = 200000,
}
export enum UnitType {
  UNIT_TYPE_UNSPECIFIED = 0,
  SYSTEM_UNIT = 1,
  SYSTEM_UNIT_ANCHOR = 2,
  SKU_BASE_UNIT = 3,
  SSU_UNIT = 4,
  SSU_UNIT_ANCHOR = 5,
}
export enum Unit_Type {
  T_UNSPECIFIED = 0,
  LENGTH = 1,
  AREA = 2,
  VOLUME = 3,
  MASS = 4,
  COUNT = 5,
}
export interface Unit {
  unit_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: number
  name: string
  rate: string
  type?: Unit_Type
  parent_id: string
  country_id?: string
}
export interface ReqCreateUnit {
  // unit_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: number
  name: string
  rate: string
  type?: Unit_Type
  parent_id: string
  country_id?: string
}
export enum Optype {
  OP_UNSPECIFIED = 0,
  CREATE = 1,
  UPDATE = 2,
  DELETE = 3,
}
export interface Category {
  category_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  parent_id: string
  name: string
  icon?: string
  rank?: number
}
export interface ReqCreateCategory {
  // category_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  parent_id: string
  name: string
  icon?: string
  rank?: number
}
export interface Spu {
  spu_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  parent_id: string
  name: string
  icon?: string
  rank?: number
}
export interface ReqCreateSpu {
  // spu_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  parent_id: string
  name: string
  icon?: string
  rank?: number
}
export enum Sku_PurchaseType {
  PUR_TYPE_UNSPECIFIED = 0,
  NO_TMP = 1,
  TMP = 2,
}
export enum Sku_DispatchType {
  DIS_TYPE_UNSPECIFIED = 0,
  ORDER = 1,
  DRIVER = 2,
}
export enum Sku_Status {
  S_UNSPECIFIED = 0,
  DETECT = 128,
  NUTRITION = 512,
}
export enum Sku_SkuType {
  ST_UNSPECIFIED = 0,
  PACKAGE = 1,
  NOT_PACKAGE = 2,
}
export enum Sku_NotPackageSubSkuType {
  SNPST_UNSPECIFIED = 0,
  ORIGIN = 1,
  CLEAN = 2,
  DELICATESSEN = 3,
  DISHES = 4,
  COMBO = 5,
  BOXED_LUNCH = 6,
  CAKE = 7,
  STAPLE = 8,
  DRINK = 9,
  WATER = 10,
  INGREDIENTS = 11,
  NON_STAPLE_FOOD = 12,
  OUTSOURCED_FINISHED_PRODUCTS = 13,
  HOMEMADE_PRODUCTS = 14,
  MATERIALS = 15,
  GRAIN_AND_OIL = 16,
}
export enum Sku_PackageSubSkuType {
  PSST_UNSPECIFIED = 0,
  TURNOVER = 1,
  ONE_TIME = 2,
}
export interface Sku_Extra {
  key?: string
  value?: string
}
export interface Sku_RepeatedField {
  alias?: string[]
  images?: common.Image[]
  extras?: Sku_Extra[]
}
export interface Sku {
  sku_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  category_id?: string
  spu_id: string
  base_unit_id: string
  max_unit_id?: string
  name: string
  customize_code: string
  desc?: string
  sku_type: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  process?: boolean
  expiry_date?: number
  repeated_field?: Sku_RepeatedField
  purchase_type: Sku_PurchaseType
  dispatch_type: Sku_DispatchType
  rank?: number
  purchaser_id?: string
  supplier_id?: string
  package_price?: string
}
export interface ReqCreateSku {
  // sku_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  category_id?: string
  spu_id: string
  base_unit_id: string
  max_unit_id?: string
  name: string
  customize_code: string
  desc?: string
  sku_type: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  process?: boolean
  expiry_date?: number
  repeated_field?: Sku_RepeatedField
  purchase_type: Sku_PurchaseType
  dispatch_type: Sku_DispatchType
  rank?: number
  purchaser_id?: string
  supplier_id?: string
  package_price?: string
}
export enum ModuleType {
  M_UNSPECIFIED = 0,
  SORTING = 1,
  ORDER = 2,
  DISTRIBUTE = 3,
  PURCHASE = 4,
  STOCK = 5,
}
export enum Ssu_PackageCalculateType {
  PC_UNSPECIFIED = 0,
  FIXED = 1,
  BY_ORDER_NUM = 2,
}
export enum Ssu_NutritionType {
  NT_UNSPECIFIED = 0,
  PROTEIN = 1,
  FAT = 2,
  CARBOHYDRATE = 3,
}
export enum Ssu_SplitFlag {
  SF_UNSPECIFIED = 0,
  THROW_BASK_BET = 1,
  DIVIDE = 2,
  INVESTMENT = 3,
}
export enum Ssu_ShippingFeeUnit {
  SFU_UNSPECIFIED = 0,
  BASE = 1,
  PACKAGE = 2,
}
export interface Ssu_RepeatedField {
  images?: common.Image[]
}
export interface Ssu_PackageId {
  sku_id?: string
  unit_id?: string
}
export interface Ssu_RepeatedPackageField {
  nutrition?: { [key: string]: string }
}
export interface Ssu {
  ssu_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  sku_id?: string
  category_id?: string
  spu_id?: string
  sku_type?: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  process?: boolean
  sku_name?: string
  unit_id?: string
  customize_code: string
  description?: string
  repeated_field?: Ssu_RepeatedField
  has_image?: boolean
  name: string
  on_sale?: boolean
  shipping_fee_unit_id?: string
  shipping_fee_unit?: Ssu_ShippingFeeUnit
  minimum_order_number?: string
  unit_type: UnitType
  unit: Unit
  base_unit_id?: string
  purchase_unit_id?: string
  is_weight?: boolean
  split_flag?: Ssu_SplitFlag
  need_package?: boolean
  need_package_work?: boolean
  package_calculate_type?: Ssu_PackageCalculateType
  package_num?: number
  package_price?: string
  package_id?: Ssu_PackageId
}
export interface ReqCreateSsu {
  // ssu_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  sku_id?: string
  category_id?: string
  spu_id?: string
  sku_type?: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  process?: boolean
  sku_name?: string
  unit_id?: string
  customize_code: string
  description?: string
  repeated_field?: Ssu_RepeatedField
  has_image?: boolean
  name: string
  on_sale?: boolean
  shipping_fee_unit_id?: string
  shipping_fee_unit?: Ssu_ShippingFeeUnit
  minimum_order_number?: string
  unit_type: UnitType
  unit: Unit
  base_unit_id?: string
  purchase_unit_id?: string
  is_weight?: boolean
  split_flag?: Ssu_SplitFlag
  need_package?: boolean
  need_package_work?: boolean
  package_calculate_type?: Ssu_PackageCalculateType
  package_num?: number
  package_price?: string
  package_id?: Ssu_PackageId
}
export interface Quotation {
  quotation_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  inner_name?: string
  outer_name?: string
  description?: string
  is_active?: boolean
  is_default?: boolean
}
export interface ReqCreateQuotation {
  // quotation_id: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  inner_name?: string
  outer_name?: string
  description?: string
  is_active?: boolean
  is_default?: boolean
}
export interface CustomerQuotationRelation {
  customer_quotation_relation_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  quotation_id: string
  customer_id: string
}
export interface BasicPrice {
  basic_price_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  quotation_id: string
  sku_id?: string
  unit_id?: string
  spu_id?: string
  price?: string
  formula_text?: string
  current_price?: boolean
  on_sale?: boolean
}
export enum Favorite_FavoriteType {
  F_UNSPECIFIED = 0,
  BSHOP = 1,
}
export enum Favorite_FavoriteContentType {
  FC_UNSPECIFIED = 0,
  SSU = 1,
}
export interface Favorite {
  favorite_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  customer_id?: string
  name: string
  default?: boolean
  favorite_type?: Favorite_FavoriteType
  favorite_content_type?: Favorite_FavoriteContentType
}
export interface ReqCreateFavorite {
  // favorite_id: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  customer_id?: string
  name: string
  default?: boolean
  favorite_type?: Favorite_FavoriteType
  favorite_content_type?: Favorite_FavoriteContentType
}
export interface FavoriteSsu {
  favorite_ssu_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  favorite_id: string
  sku_id: string
  unit_id: string
}
export interface ReqCreateFavoriteSsu {
  // favorite_ssu_id: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  favorite_id: string
  sku_id: string
  unit_id: string
}
export enum RuleSet_State {
  STATE_UNSPECIFIED = 0,
  ON = 1,
  OFF = 2,
}
export enum RuleSet_Type {
  TYPE_UNSPECIFIED = 0,
  RANGE = 1,
  PRICE = 2,
}
export interface RuleSet_RepeatedField {
  rules: RuleSet_Rule[]
  service_period_ids: string[]
}
export interface RuleSet_Rule {
  formula_text?: string
  customer_ids: string[]
  ssu_ids: SsuId[]
}
export interface RuleSet {
  rule_set_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  quotation_id: string
  rule_set_display_id?: string
  state: RuleSet_State
  repeated_field?: RuleSet_RepeatedField
  type: RuleSet_Type
}
export interface ReqCreateRuleSet {
  // rule_set_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  quotation_id: string
  rule_set_display_id?: string
  state: RuleSet_State
  repeated_field?: RuleSet_RepeatedField
  type: RuleSet_Type
}
export interface CategoryTreeCache_CategoryInfo {
  parent_id?: string
  name?: string
}
export interface CategoryTreeCache {
  category_link?: { [key: string]: CategoryTreeCache_CategoryInfo }
}
export interface QuotationCategoryIdsCache {
  category_id_map?: { [key: string]: number }
  version?: string
  ssu_count?: number
}
export interface RuleSetCache {
  rule_set_customer?: { [key: string]: boolean }
  rule_set_ssu?: { [key: string]: string }
  service_period_ids?: string[]
}
export interface CustomerPriceRuleCache_CustomerRuleSet {
  rule_set_ids?: string[]
}
export interface CustomerPriceRuleCache {
  customer_rule?: { [key: string]: CustomerPriceRuleCache_CustomerRuleSet }
  version?: string
}
export interface RuleSetDisableSsuCache_CustomerDisableSsuList {
  ssu_ids?: SsuId[]
}
export interface RuleSetDisableSsuCache {
  rule_set_id_disable_ssu?: { [key: string]: RuleSetDisableSsuCache_CustomerDisableSsuList }
  version?: string
}
export interface RuleSetPriceCache_SsuPrice {
  ssu_price?: { [key: string]: string }
  version?: string
}
export interface RuleSetPriceCache {
  rule_set_price?: { [key: string]: RuleSetPriceCache_SsuPrice }
}
export interface CategoryImage {
  category_image_id?: string
  image?: common.Image
}
export interface GetCategoryRequest {
  category_id: string
}
export interface GetCategoryResponse {
  category: Category
}
export interface ListCategoryRequest {
  category_ids?: string[]
  q?: string
  paging: common.PagingParams
}
export interface ListCategoryResponse {
  categories: Category[]
  paging: common.PagingResult
}
export interface CreateCategoryRequest {
  category: ReqCreateCategory
}
export interface CreateCategoryResponse {
  category: Category
}
export interface UpdateCategoryRequest {
  category: Category
}
export interface UpdateCategoryResponse {
  category: Category
}
export interface DeleteCategoryRequest {
  category_id: string
}
export interface DeleteCategoryResponse {
  category: Category
}
export interface GetCategoryTreeRequest {
  customer_id?: string
  station_id?: string
  sku_ids?: string[]
  group_id?: string
}
export interface GetCategoryTreeResponse {
  categories?: Category[]
  spus?: Spu[]
}
export enum ChangeMerchandiseRankRequest_NodeType {
  NT_UNSPECIFIED = 0,
  CATEGORY = 1,
  SPU = 2,
  SKU = 3,
}
export interface ChangeMerchandiseRankRequest {
  node_type?: ChangeMerchandiseRankRequest_NodeType
  rank?: number
  node_id?: string
}
export interface ChangeMerchandiseRankResponse {
}
export interface GetManyCategoryRequest {
  category_ids: string[]
}
export interface GetManyCategoryResponse {
  category_map: { [key: string]: Category }
}
export interface GetSpuRequest {
  spu_id: string
}
export interface GetSpuResponse {
  spu: Spu
}
export interface GetManySpuRequest {
  spu_ids: string[]
}
export interface GetManySpuResponse {
  spu_map: { [key: string]: Spu }
}
export interface ListSpuRequest {
  spu_ids?: string[]
  name?: string
  paging: common.PagingParams
}
export interface ListSpuResponse {
  spus: Spu[]
  paging: common.PagingResult
}
export interface CreateSpuRequest {
  spu: ReqCreateSpu
}
export interface CreateSpuResponse {
  spu: Spu
}
export interface UpdateSpuRequest {
  spu: Spu
}
export interface UpdateSpuResponse {
  spu: Spu
}
export interface DeleteSpuRequest {
  spu_id: string
}
export interface DeleteSpuResponse {
  spu: Spu
}
export interface GetSkuRequest {
  sku_id: string
}
export interface SsuInfo {
  ssu?: Ssu
  basic_prices?: BasicPrice[]
}
export interface SsuTotalInfo {
  ssu?: Ssu
  price?: string
  sku?: Sku
  basic_price?: BasicPrice
  category_infos?: CategoryInfo[]
}
export interface GetSkuResponse {
  sku: Sku
  ssu_infos?: SsuInfo[]
  category_infos?: CategoryInfo[]
  quotation_name_map?: { [key: string]: string }
}
export enum ListSkuRequest_RequestData {
  RD_UNSPECIFIED = 0,
  SSU = 256,
  PRICE = 512,
  CATEGORY = 1024,
  QUOTATION = 2048,
}
export interface ListSkuRequest {
  category_ids?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  customize_codes?: string[]
  sku_type?: Sku_SkuType
  q?: string
  request_data?: number
  process?: common.Filters_Bool
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  paging: common.PagingParams
}
export interface ListSkuResponse_SkuInfo {
  category_infos?: CategoryInfo[]
  sku?: Sku
  ssu_infos?: SsuInfo[]
}
export interface ListSkuResponse {
  sku_infos?: ListSkuResponse_SkuInfo[]
  quotation_name_map?: { [key: string]: string }
  paging: common.PagingResult
}
export interface ExportSkuRequest {
  category_ids?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  customize_codes?: string[]
  sku_type?: Sku_SkuType
  q?: string
  request_data?: number
  process?: common.Filters_Bool
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
}
export interface ExportSkuResponse {
  task?: asynctask.Task
}
export interface ExportSsuRequest {
  category_ids?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  q?: string
  has_image?: common.Filters_Bool
  on_sale?: common.Filters_Bool
  sku_type?: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  ssu_ids?: SsuId[]
  customer_id?: string
  service_period_id?: string
  station_id?: string
  quotation_id: string
  process?: common.Filters_Bool
  need_delete_data?: boolean
  customize_codes?: string[]
  need_package_work?: common.Filters_Bool
}
export interface ExportSsuResponse {
  task?: asynctask.Task
}
export enum GetManySkuRequest_RequestData {
  RD_UNSPECIFIED = 0,
  SSU = 256,
  PRICE = 512,
  CATEGORY = 1024,
}
export interface GetManySkuRequest {
  category_ids?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  customize_codes?: string[]
  sku_type?: Sku_SkuType
  q?: string
  request_data?: number
  process?: common.Filters_Bool
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
}
export interface GetManySkuResponse_SkuInfo {
  category_infos?: CategoryInfo[]
  sku?: Sku
  ssu_map?: { [key: string]: SsuInfo }
}
export interface GetManySkuResponse {
  sku_map?: { [key: string]: GetManySkuResponse_SkuInfo }
  paging: common.PagingResult
}
export interface GetSkuSnapRequest {
  sku_id?: string
  sku_revision?: string
}
export interface GetSkuSnapResponse {
  sku?: Sku
}
export interface SkuSnapID {
  sku_id?: string
  sku_revision?: string
}
export interface GetManySkuSnapRequest {
  sku_snap_ids?: SkuSnapID[]
}
export interface GetManySkuSnapResponse {
  sku_snap_map?: { [key: string]: Sku }
}
export interface CreateSkuRequest {
  sku: ReqCreateSku
}
export interface CreateSkuResponse {
  sku: Sku
}
export interface UpdateSkuRequest {
  sku: Sku
}
export interface UpdateSkuResponse {
  sku: Sku
}
export interface CreateSsuRequest {
  ssu: ReqCreateSsu
  basic_prices?: BasicPrice[]
}
export interface CreateSsuResponse {
  ssu: Ssu
  basic_prices?: BasicPrice[]
}
export interface GetSsuSnapRequest {
  sku_id?: string
  unit_id?: string
  ssu_revision?: string
}
export interface GetSsuSnapResponse {
  ssu?: Ssu
}
export interface SsuSnapID {
  sku_id?: string
  unit_id?: string
  ssu_revision?: string
}
export interface GetManySsuSnapRequest {
  ssu_snap_ids?: SsuSnapID[]
}
export interface GetManySsuSnapResponse {
  ssu_snap_map?: { [key: string]: Ssu }
}
export interface DeleteSkuRequest {
  sku_id: string
}
export interface DeleteSkuResponse {
  sku: Sku
}
export interface SsuId {
  sku_id: string
  unit_id: string
}
export interface GetSsuRequest {
  ssu_id?: SsuId
  customize_code?: string
}
export interface GetSsuResponse {
  ssu: Ssu
  basic_prices?: BasicPrice[]
}
export interface BasicPriceId {
  quotation_id: string
  sku_id: string
  unit_id: string
}
export interface UpdateSsuRequest {
  ssu: Ssu
  basic_prices?: BasicPrice[]
}
export interface UpdateSsuResponse {
  ssu: Ssu
  basic_prices?: BasicPrice[]
}
export interface DeleteSsuRequest {
  ssu_id: SsuId
}
export interface DeleteSsuResponse {
  ssu: Ssu
}
export interface BatchUpdateSkuSsuRequest {
  file_url: string
}
export interface BatchUpdateSkuSsuResponse {
  task?: asynctask.Task
}
export interface BatchCreateCategorySkuRequest {
  file_url: string
}
export interface BatchCreateCategorySkuResponse {
  task?: asynctask.Task
}
export interface BatchCreateSsuRequest {
  file_url: string
}
export interface BatchCreateSsuResponse {
  task?: asynctask.Task
}
export interface ListSsuRequest {
  category_ids?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  q?: string
  has_image?: common.Filters_Bool
  on_sale?: common.Filters_Bool
  sku_type?: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  ssu_ids?: SsuId[]
  process?: common.Filters_Bool
  customize_codes?: string[]
  need_delete_data?: boolean
  need_package_work?: common.Filters_Bool
  paging: common.PagingParams
}
export interface CategoryInfo {
  category_name?: string
  category_id?: string
}
export interface ListSsuResponse_SsuInfo {
  ssu?: Ssu
  basic_prices?: BasicPrice[]
  sku?: Sku
  category_infos?: CategoryInfo[]
}
export interface ListSsuResponse {
  ssu_infos?: ListSsuResponse_SsuInfo[]
  paging: common.PagingResult
}
export interface ListSsuByCustomerOrQuotationRequest {
  category_ids?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  q?: string
  has_image?: common.Filters_Bool
  on_sale?: common.Filters_Bool
  sku_type?: Sku_SkuType
  not_package_sub_sku_type?: Sku_NotPackageSubSkuType
  package_sub_sku_type?: Sku_PackageSubSkuType
  ssu_ids?: SsuId[]
  customer_id?: string
  service_period_id?: string
  station_id?: string
  quotation_id?: string
  process?: common.Filters_Bool
  need_delete_data?: boolean
  customize_codes?: string[]
  need_package_work?: common.Filters_Bool
  group_id?: string
  paging: common.PagingParams
}
export interface ListSsuByCustomerOrQuotationResponse {
  ssu_infos?: SsuTotalInfo[]
  paging: common.PagingResult
}
export interface ExportSsuData_SsuInfo {
  ssu?: Ssu
  price?: string
  sku?: Sku
  basic_price?: BasicPrice
  category_infos?: CategoryInfo[]
  purchase_ssu_customize_code?: string
}
export interface ExportSsuData {
  ssu_infos?: ExportSsuData_SsuInfo[]
}
export interface CreateRuleSetRequest {
  rule_set: ReqCreateRuleSet
  ignore_conflict?: boolean
}
export interface CreateRuleSetResponse {
  rule_set: RuleSet
  conflict_data_map?: { [key: string]: RuleConflictData }
}
export interface RuleConflictData {
  ssu_ids?: SsuId[]
  customer_ids?: string[]
  service_period_ids?: string[]
}
export interface UpdateRuleSetRequest {
  rule_set: RuleSet
  ignore_conflict?: boolean
}
export interface UpdateRuleSetResponse {
  rule_set: RuleSet
  conflict_data_map?: { [key: string]: RuleConflictData }
}
export interface DeleteRuleSetRequest {
  rule_set_id: string
}
export interface DeleteRuleSetResponse {
  rule_set: RuleSet
}
export interface GetRuleSetRequest {
  rule_set_id: string
}
export interface GetRuleSetResponse {
  rule_set: RuleSet
}
export interface ListRuleSetRequest {
  state?: RuleSet_State
  q?: string
  paging: common.PagingParams
}
export interface ListRuleSetResponse {
  rule_set: RuleSet[]
  quotation_map?: { [key: string]: Quotation }
  paging: common.PagingResult
}
export interface CreateUnitRequest {
  unit?: ReqCreateUnit
}
export interface CreateUnitResponse {
  unit: Unit
}
export interface ListUnitRequest {
  related_unit_id?: string
  unit_ids?: string[]
}
export interface ListUnitResponse {
  units: Unit[]
}
export interface GetUnitRateGroupRequest_UnitIdGroup {
  unit_id_1: string
  unit_id_2: string
}
export interface GetUnitRateGroupRequest {
  unit_id_groups: GetUnitRateGroupRequest_UnitIdGroup[]
}
export interface GetUnitRateGroupResponse_UnitRateGroup {
  unit_id_1?: string
  unit_id_2?: string
  rate?: string
}
export interface GetUnitRateGroupResponse {
  unit_rate_groups: GetUnitRateGroupResponse_UnitRateGroup[]
}
export interface InitUnitRequest {
}
export interface InitUnitResponse {
}
export interface InitCategoryImageRequest {
  testing?: boolean
}
export interface InitCategoryImageResponse {
}
export interface ListCategoryImageRequest {
}
export interface ListCategoryImageResponse {
  images: CategoryImage[]
}
export interface GetQuotationRequest {
  quotation_id: string
}
export interface GetQuotationResponse {
  quotation: Quotation
}
export interface CreateQuotationRequest {
  quotation: ReqCreateQuotation
}
export interface CreateQuotationResponse {
  quotation: Quotation
}
export interface UpdateQuotationRequest {
  quotation: Quotation
}
export interface UpdateQuotationResponse {
  quotation: Quotation
}
export interface DeleteQuotationRequest {
  quotation_id: string
}
export interface DeleteQuotationResponse {
  quotation: Quotation
}
export interface ListQuotationRequest {
  q?: string
  is_active?: common.Filters_Bool
  is_default?: common.Filters_Bool
  need_ssu_on_sale_num?: boolean
  paging: common.PagingParams
}
export interface ListQuotationResponse {
  quotations: Quotation[]
  ssu_on_sale_num_map?: { [key: string]: number }
  paging: common.PagingResult
}
export interface GetManyQuotationRequest {
  quotation_ids: string[]
}
export interface GetManyQuotationResponse {
  quotation_map: { [key: string]: Quotation }
}
export interface SetCustomerQuotationRelationRequest_RelationElement {
  customer_id?: string
  quotation_id?: string
  station_id?: string
}
export interface SetCustomerQuotationRelationRequest {
  relations?: SetCustomerQuotationRelationRequest_RelationElement[]
}
export interface SetCustomerQuotationRelationResponse {
}
export interface DeleteCustomerQuotationRelationRequest {
  customer_ids?: string[]
}
export interface DeleteCustomerQuotationRelationResponse {
}
export interface GetCustomerIdsByQuotationIdRequest {
  quotation_id: string
}
export interface GetCustomerIdsByQuotationIdResponse {
  customer_ids?: string[]
}
export interface GetQuotationByCustomerIdRequest {
  customer_id: string
  station_id?: string
}
export interface GetQuotationByCustomerIdResponse {
  quotation?: Quotation[]
}
export interface GetQuotationIdsByCustomerIdsRequest {
  customer_ids: string[]
}
export interface GetQuotationIdsByCustomerIdsResponse {
  relation_map?: { [key: string]: common.Uint64Set }
}
export interface GetCustomerQuotationRelationRequest {
  quotation_ids?: string[]
  customer_ids?: string[]
}
export interface GetCustomerQuotationRelationResponse_RelationElement {
  customer_id?: string
  quotation_id?: string
  station_id?: string
}
export interface GetCustomerQuotationRelationResponse {
  relations?: GetCustomerQuotationRelationResponse_RelationElement[]
}
export interface DeleteBasicPriceRequest {
  basic_price_id?: BasicPriceId
}
export interface DeleteBasicPriceResponse {
  basic_price: BasicPrice
}
export interface UnitQuantity {
  unit_id?: string
  amount?: string
}
export interface UnitPrice {
  unit_id?: string
  price?: string
}
export interface UnitValue {
  unit_id: string
  quantity?: string
  price?: string
}
export interface UnitValueSet {
  input?: UnitValue
  input2?: UnitValue
  calculate?: UnitValue
}
export interface UnitStock {
  base_unit?: UnitValue
  sku_unit?: UnitValue
}
export interface GetManySsuPriceRequest_SsuIds {
  ssu_id?: SsuId[]
}
export interface GetManySsuPriceRequest {
  ssu_id_map?: { [key: string]: GetManySsuPriceRequest_SsuIds }
}
export interface GetManySsuPriceResponse {
  price_map?: { [key: string]: string }
}
export interface MerchandiseParam_ElemMap {
  elem?: { [key: string]: string }
}
export interface MerchandiseParam {
  ssus?: MerchandiseParam_ElemMap[]
  skus?: MerchandiseParam_ElemMap[]
}
export interface SyncSsuImageRequest {
  sku_id: string
}
export interface SyncSsuImageResponse {
}
export interface CreateFavoriteRequest {
  favorite?: ReqCreateFavorite
}
export interface CreateFavoriteResponse {
  favorite: Favorite
}
export interface UpdateFavoriteRequest {
  favorite?: Favorite
}
export interface UpdateFavoriteResponse {
  favorite: Favorite
}
export interface DeleteFavoriteRequest {
  favorite_id?: string
}
export interface DeleteFavoriteResponse {
  favorite: Favorite
}
export interface ListFavoriteRequest {
}
export interface ListFavoriteResponse {
  favorites: Favorite[]
}
export interface CreateFavoriteSsuRequest {
  favorite_ssu?: ReqCreateFavoriteSsu
}
export interface CreateFavoriteSsuResponse {
  favorite_ssu: FavoriteSsu
}
export interface DeleteFavoriteSsuRequest {
  favorite_ssu_id?: string
}
export interface DeleteFavoriteSsuResponse {
  favorite_ssu: FavoriteSsu
}
export interface ListFavoriteSsuRequest {
  favorite_id?: string
  paging: common.PagingParams
}
export interface ListFavoriteSsuResponse {
  ssu_infos?: SsuTotalInfo[]
  paging: common.PagingResult
}