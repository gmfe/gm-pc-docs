import * as common from '../common'
import * as order from '../order'
import * as enterprise from '../enterprise'
import * as account from '../account'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as merchandise from '../merchandise'
import * as asynctask from '../asynctask'
import * as oauth from '../oauth'
import * as inventory from '../inventory'
import * as preference from '../preference'
import * as purchase from '../purchase'
import * as delivery from '../delivery'
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  CODE_NO_SSU_SYSTEMKEY = 20200001,
  CODE_NO_CUSTOMER_SYSTEMKEY = 20200002,
  CODE_NO_QUANTITY_SYSTEMKEY = 20200003,
  CODE_NO_ORDER_TO_PRODUCTION = 20200004,
  CODE_TASK_CONCURRENCY_LIMIT = 20200005,
}
export interface Status {
}
export enum OrderImportTemplete_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_SYSTEM = 1,
  TYPE_CUSTOMIZE = 2,
}
export enum OrderImportTemplete_SystemKey {
  SYSTEMKEY_UNSPECIFIED = 0,
  SYSTEMKEY_SSU_NAME = 1,
  SYSTEMKEY_SSU_CUSTOMIZE_CODE = 2,
  SYSTEMKEY_SSU_REMARK = 3,
  SYSTEMKEY_UNITPRICE = 4,
  SYSTEMKEY_CUSTOMER_CUSTOMIZE_CODE = 5,
  SYSTEMKEY_CUSTOMERNAME = 6,
  SYSTEMKEY_QUANTITY = 7,
  SYSTEMKEY_ORDERNO = 8,
}
export interface OrderImportTemplete_RelationShip_Relation {
  col_index?: string
  relation_name?: string
  system_key?: OrderImportTemplete_SystemKey
}
export interface OrderImportTemplete_RelationShip {
  relations?: OrderImportTemplete_RelationShip_Relation[]
}
export interface OrderImportTemplete_TitleCol_TitleCols {
  index?: string
  col_name?: string
}
export interface OrderImportTemplete_TitleCol {
  title_cols?: OrderImportTemplete_TitleCol_TitleCols[]
}
export interface OrderImportTemplete {
  order_import_templete_id: string
  update_time?: string
  create_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  name: string
  type: OrderImportTemplete_Type
  title_row?: string
  customer_row?: string
  start_cycle_col?: string
  cycle_gap_col?: string
  relation_ship: OrderImportTemplete_RelationShip
  title_col: OrderImportTemplete_TitleCol
}
export interface CreateOrderTempleteRequest {
  order_templete?: OrderImportTemplete
}
export interface CreateOrderTempleteResponse {
  order_templete?: OrderImportTemplete
}
export interface UpdateOrderTempleteRequest {
  order_templete?: OrderImportTemplete
}
export interface UpdateOrderTempleteResponse {
  order_templete?: OrderImportTemplete
}
export interface DeleteOrderTempleteRequest {
  order_import_templete_id?: string
}
export interface DeleteOrderTempleteResponse {
  order_templete?: OrderImportTemplete
}
export interface RelationInfoResponse {
  group_users?: { [key: string]: enterprise.GroupUser }
}
export interface GetOrderTempleteRequest {
  order_import_templete_id?: string
}
export interface GetOrderTempleteResponse {
  order_templete?: OrderImportTemplete
  relation_info?: RelationInfoResponse
}
export interface ListOrderTempleteRequest {
  paging: common.PagingParams
}
export interface ListOrderTempleteResponse {
  order_templetes?: OrderImportTemplete[]
  relation_info?: RelationInfoResponse
  paging: common.PagingResult
}
export interface UploadOrderTempleteRequest {
  order_import_templete_id: string
  service_period_id: string
  file_url: string
  receive_time: string
  time_zone: string
}
export interface OrderTempleteExcelSsu {
  excel_ssus?: { [key: string]: string }
}
export interface OrderTempleteExcelList {
  excel_ssus?: OrderTempleteExcelSsu[]
}
export interface UploadOrderTempleteResponse_Customer {
  customer_code?: string
  customer_name?: string
}
export interface UploadOrderTempleteResponse_SsuList {
  deduplicate_ssu_ids?: { [key: string]: string }
  ssu_infos?: merchandise.SsuTotalInfo[]
}
export interface UploadOrderTempleteResponse_ExcelSsu {
  ssu?: { [key: string]: string }
}
export interface UploadOrderTempleteResponse_ExcelOrder {
  excel_ssus?: UploadOrderTempleteResponse_ExcelSsu[]
}
export interface UploadOrderTempleteResponse_ExcelCustomerList {
  excel_orders?: UploadOrderTempleteResponse_ExcelOrder[]
  customer?: UploadOrderTempleteResponse_Customer
}
export interface UploadOrderTempleteResponse {
  orders?: order.Order[]
  excel_customers?: UploadOrderTempleteResponse_ExcelCustomerList[]
  relation_info?: order.OrderRelationInfoResponse
  recommend_ssus?: { [key: string]: UploadOrderTempleteResponse_SsuList }
}
export interface GetCartOrderRequest {
}
export interface GetCartOrderResponse {
  order?: order.Order
}
export interface UpdateCartOrderRequest {
  order?: order.Order
}
export interface UpdateCartOrderResponse {
  order?: order.Order
}
export interface CreateBshopOrderRequest {
  time_zone: string
}
export interface CreateBshopOrderResponse {
  order?: order.Order
}
export interface BatchUpdateOrderStateRequest {
  filter?: order.ListOrderRequest
  to_set_state?: order.Order_State
  sorting_remark?: string
  all?: boolean
}
export interface BatchUpdateOrderStateResponse {
  task?: asynctask.CreateTaskResponse
}
export interface BatchUpdateOrderExecuteData {
  orders?: order.Order[]
}
export interface SyncPurchaseTaskExecuteData {
  batch?: purchase.Batch
  orders?: order.Order[]
  order_details?: order.DetailList[]
}
export interface ExportOrderRequest {
  filter?: order.ListOrderRequest
}
export interface ExportOrderResponse {
  task?: asynctask.CreateTaskResponse
}
export interface ExportOrderExecuteData {
  orders?: order.Order[]
  customers?: { [key: string]: enterprise.Customer }
  quotations?: { [key: string]: merchandise.Quotation }
  skus?: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  group_users?: { [key: string]: enterprise.GroupUser }
  customer_users?: { [key: string]: enterprise.CustomerUser }
}
export interface BatchCreateOrderRequest {
  orders?: order.Order[]
}
export interface BatchCreateOrderResponse {
  task?: asynctask.CreateTaskResponse
}
export interface BatchCreateOrderExecuteData {
  orders?: order.Order[]
}
export interface BatchUpdateOrderPriceRequest_UpdateData {
  ssu_id?: merchandise.SsuId
  price?: merchandise.UnitValue
  order_ids?: string[]
}
export interface BatchUpdateOrderPriceRequest {
  update?: BatchUpdateOrderPriceRequest_UpdateData[]
}
export interface BatchUpdateOrderPriceResponse {
  task?: asynctask.CreateTaskResponse
}
export interface BatchUpdateOrderPriceExecuteData {
  orders?: order.Order[]
}
export interface BatchSyncPriceToOrderRequest {
  filter?: order.ListOrderDetailRequest
  all?: boolean
}
export interface BatchSyncPriceToOrderResponse {
  task?: asynctask.CreateTaskResponse
}
export interface BatchSyncPriceToOrderExecuteData {
  order_details?: order.DetailList[]
}
export interface OrderRelationInfoParam {
  need_customer_route_info?: boolean
}
export interface OrderRelationInfo {
  customer_routes?: { [key: string]: string }
  routes?: { [key: string]: delivery.Route }
}
export interface ListOrderWithRelationRequest {
  filter?: order.ListOrderRequest
  route_ids?: string[]
  district_ids?: string[]
  city_ids?: string[]
  street_ids?: string[]
  relation?: OrderRelationInfoParam
}
export interface ListOrderWithRelationResponse {
  response?: order.ListOrderResponse
  relation?: OrderRelationInfo
  paging: common.PagingResult
}
export interface ListOrderDetailWithRelationRequest {
  filter?: order.ListOrderDetailRequest
  route_ids?: string[]
  customize_code?: string
  ssu_name?: string
  relation?: OrderRelationInfoParam
}
export interface ListOrderDetailWithRelationResponse {
  response?: order.ListOrderDetailResponse
  relation?: OrderRelationInfo
  paging: common.PagingResult
}
export interface BatchUpdateOrderDriverRequest {
  filter?: order.CommonListOrder
  driver_id?: string
}
export interface BatchUpdateOrderDriverResponse {
  task?: asynctask.CreateTaskResponse
}
export interface AutoUpdateOrderDriverRequest {
  filter?: order.CommonListOrder
}
export interface AutoUpdateOrderDriverResponse {
  task?: asynctask.CreateTaskResponse
}
export interface SyncPurchaseTaskFromOrderRequest {
  order_filter?: order.ListOrderRequest
  detail_filter?: order.ListOrderDetailRequest
  all?: boolean
  batch?: purchase.Batch
}
export interface SyncPurchaseTaskFromOrderResponse {
  task?: asynctask.CreateTaskResponse
}
export interface DispatchProductionTaskFromOrderRequest {
  order_filter?: order.ListOrderRequest
  detail_filter?: order.ListOrderDetailRequest
  all_order?: boolean
  is_split_customer?: boolean
  pack_by_customer?: boolean
  production_by_customer?: boolean
  purchase_time?: string
  purchase_batch?: string
  production_time?: string
  production_batch?: string
  pack_time?: string
  pack_batch?: string
}
export interface DispatchProductionTaskFromOrderResponse {
  task_id?: string
}
export interface ExportProductionPurchaseTaskRequest {
  order_filter?: order.ListOrderRequest
}
export interface ExportProductionPurchaseTaskResponse {
  task_id?: string
}
export interface BatchSyncSaleOutStockSheetFromOrderRequest {
  order_filter?: order.ListOrderRequest
  all_order?: boolean
}
export interface BatchSyncSaleOutStockSheetFromOrderResponse {
  task_id?: string
}
export interface ExportSortingPerformanceExecuteData {
  orders?: order.Order[]
  customers?: { [key: string]: enterprise.Customer }
  skus?: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  group_users?: { [key: string]: enterprise.GroupUser }
}
export interface ExportSortingPerformanceRequest {
  filter?: order.CommonListOrder
}
export interface ExportSortingPerformanceResponse {
  task?: asynctask.CreateTaskResponse
}
export interface BatchScanReceiptRequest {
  is_scan_receipt?: common.Filters_Bool
  order_list_query?: order.ListOrderRequest
  order_ids?: string[]
  orders?: order.Order[]
}
export interface BatchScanReceiptResponse {
  task?: asynctask.Task
}