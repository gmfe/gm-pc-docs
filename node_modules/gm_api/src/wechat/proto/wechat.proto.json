{
  "nested": {
    "ceres": {
      "nested": {
        "wechat": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/WechatService/proto;proto"
          },
          "nested": {
            "WechatService": {
              "methods": {
                "GetToken": {
                  "requestType": "GetTokenRequest",
                  "responseType": "GetTokenResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetToken",
                    "(google.api.http).body": "*"
                  }
                },
                "GetTicket": {
                  "requestType": "GetTicketRequest",
                  "responseType": "GetTicketResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetTicket",
                    "(google.api.http).body": "*"
                  }
                },
                "GetSnsAccessToken": {
                  "requestType": "GetSnsAccessTokenRequest",
                  "responseType": "GetSnsAccessTokenResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetSnsAccessToken",
                    "(google.api.http).body": "*"
                  }
                },
                "GetSnsUserInfo": {
                  "requestType": "GetSnsUserInfoRequest",
                  "responseType": "GetSnsUserInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetSnsUserInfo",
                    "(google.api.http).body": "*"
                  }
                },
                "GetWxaSession": {
                  "requestType": "GetWxaSessionRequest",
                  "responseType": "GetWxaSessionResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetWxaSession",
                    "(google.api.http).body": "*"
                  }
                },
                "GetWxaUserInfo": {
                  "requestType": "GetWxaUserInfoRequest",
                  "responseType": "GetWxaUserInfoResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetWxaUserInfo",
                    "(google.api.http).body": "*"
                  }
                },
                "GetWxaPhoneNumber": {
                  "requestType": "GetWxaPhoneNumberRequest",
                  "responseType": "GetWxaPhoneNumberResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetWxaPhoneNumber",
                    "(google.api.http).body": "*"
                  }
                },
                "EncodeWxaScene": {
                  "requestType": "EncodeWxaSceneRequest",
                  "responseType": "EncodeWxaSceneResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/EncodeWxaScene",
                    "(google.api.http).body": "*"
                  }
                },
                "DecodeWxaScene": {
                  "requestType": "DecodeWxaSceneRequest",
                  "responseType": "DecodeWxaSceneResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/DecodeWxaScene",
                    "(google.api.http).body": "*"
                  }
                },
                "GetWxaCodeUnlimit": {
                  "requestType": "GetWxaCodeUnlimitRequest",
                  "responseType": "GetWxaCodeUnlimitResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetWxaCodeUnlimit",
                    "(google.api.http).body": "*"
                  }
                },
                "AddWxaFormId": {
                  "requestType": "AddWxaFormIdRequest",
                  "responseType": "AddWxaFormIdResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/AddWxaFormId",
                    "(google.api.http).body": "*"
                  }
                },
                "GetWxaCustomMessageResponder": {
                  "requestType": "GetWxaCustomMessageResponderRequest",
                  "responseType": "GetWxaCustomMessageResponderResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/GetWxaCustomMessageResponder",
                    "(google.api.http).body": "*"
                  }
                },
                "SetWxaCustomMessageResponder": {
                  "requestType": "SetWxaCustomMessageResponderRequest",
                  "responseType": "SetWxaCustomMessageResponderResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/SetWxaCustomMessageResponder",
                    "(google.api.http).body": "*"
                  }
                },
                "RecvWxaCustomMessage": {
                  "requestType": "RecvWxaCustomMessageRequest",
                  "responseType": "RecvWxaCustomMessageResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/RecvWxaCustomMessage",
                    "(google.api.http).body": "*"
                  }
                },
                "SendWxaCustomMessage": {
                  "requestType": "SendWxaCustomMessageRequest",
                  "responseType": "SendWxaCustomMessageResponse",
                  "options": {
                    "(google.api.http).post": "/ceres/wechat/WechatService/SendWxaCustomMessage",
                    "(google.api.http).body": "*"
                  }
                }
              }
            },
            "WXApp": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "name": {
                  "type": "string",
                  "id": 2
                },
                "secret": {
                  "type": "string",
                  "id": 10
                },
                "pay_key": {
                  "type": "string",
                  "id": 20
                },
                "pay_mch_id": {
                  "type": "string",
                  "id": 21
                },
                "pay_notify_url": {
                  "type": "string",
                  "id": 22
                },
                "pay_cert_pem": {
                  "type": "string",
                  "id": 23
                },
                "pay_key_pem": {
                  "type": "string",
                  "id": 24
                },
                "token": {
                  "type": "WXToken",
                  "id": 100
                },
                "ticket": {
                  "type": "WXTicket",
                  "id": 101
                }
              }
            },
            "WXHeader": {
              "fields": {
                "errcode": {
                  "type": "uint32",
                  "id": 1
                },
                "errmsg": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "WXToken": {
              "fields": {
                "access_token": {
                  "type": "string",
                  "id": 1
                },
                "expires_in": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "WXTicket": {
              "fields": {
                "ticket": {
                  "type": "string",
                  "id": 1
                },
                "expires_in": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "SnsAccessToken": {
              "fields": {
                "access_token": {
                  "type": "string",
                  "id": 1
                },
                "expires_in": {
                  "type": "uint32",
                  "id": 2
                },
                "refresh_token": {
                  "type": "string",
                  "id": 3
                },
                "openid": {
                  "type": "string",
                  "id": 4
                },
                "scope": {
                  "type": "string",
                  "id": 5
                },
                "unionid": {
                  "type": "string",
                  "id": 6
                }
              }
            },
            "SnsUserInfo": {
              "fields": {
                "openid": {
                  "type": "string",
                  "id": 1
                },
                "nickname": {
                  "type": "string",
                  "id": 2
                },
                "sex": {
                  "type": "uint32",
                  "id": 3
                },
                "province": {
                  "type": "string",
                  "id": 4
                },
                "city": {
                  "type": "string",
                  "id": 5
                },
                "country": {
                  "type": "string",
                  "id": 6
                },
                "headimgurl": {
                  "type": "string",
                  "id": 7
                },
                "privilege": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 8
                },
                "unionid": {
                  "type": "string",
                  "id": 9
                },
                "language": {
                  "type": "string",
                  "id": 10
                }
              }
            },
            "WxaSession": {
              "fields": {
                "openid": {
                  "type": "string",
                  "id": 1
                },
                "session_key": {
                  "type": "string",
                  "id": 2
                },
                "unionid": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "WxaUserInfo": {
              "fields": {
                "openid": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "json_name": "openId"
                  }
                },
                "nickname": {
                  "type": "string",
                  "id": 2,
                  "options": {
                    "json_name": "nickName"
                  }
                },
                "gender": {
                  "type": "uint32",
                  "id": 3
                },
                "province": {
                  "type": "string",
                  "id": 4
                },
                "city": {
                  "type": "string",
                  "id": 5
                },
                "country": {
                  "type": "string",
                  "id": 6
                },
                "avatar_url": {
                  "type": "string",
                  "id": 7,
                  "options": {
                    "json_name": "avatarUrl"
                  }
                },
                "unionid": {
                  "type": "string",
                  "id": 9,
                  "options": {
                    "json_name": "unionId"
                  }
                },
                "language": {
                  "type": "string",
                  "id": 10
                }
              }
            },
            "WxaPhoneNumber": {
              "fields": {
                "phone_number": {
                  "type": "string",
                  "id": 1
                },
                "pure_phone_number": {
                  "type": "string",
                  "id": 2
                },
                "country_code": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "WxaFormId": {
              "fields": {
                "form_id": {
                  "type": "string",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "created_at": {
                  "type": "uint64",
                  "id": 4
                },
                "updated_at": {
                  "type": "uint64",
                  "id": 5
                },
                "app_id": {
                  "type": "uint32",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "openid": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "WxaTemplateMsg": {
              "fields": {
                "msg_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "created_at": {
                  "type": "uint64",
                  "id": 4
                },
                "updated_at": {
                  "type": "uint64",
                  "id": 5
                },
                "app_id": {
                  "type": "uint32",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "template_id": {
                  "type": "string",
                  "id": 12
                },
                "sender_id": {
                  "type": "uint64",
                  "id": 13
                }
              }
            },
            "WxaTemplate": {
              "fields": {
                "id": {
                  "type": "uint64",
                  "id": 1
                },
                "app_id": {
                  "type": "string",
                  "id": 2
                },
                "template_id": {
                  "type": "string",
                  "id": 3
                },
                "keywords": {
                  "keyType": "string",
                  "type": "string",
                  "id": 4
                }
              }
            },
            "WxaMedia": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "media_id": {
                  "type": "string",
                  "id": 2
                },
                "created_at": {
                  "type": "uint32",
                  "id": 3
                }
              }
            },
            "WxaCustomMessageRecvType": {
              "fields": {
                "to_user_name": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "json_name": "ToUserName"
                  }
                },
                "from_user_name": {
                  "type": "string",
                  "id": 2,
                  "options": {
                    "json_name": "FromUserName"
                  }
                },
                "create_time": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "json_name": "CreateTime"
                  }
                },
                "msg_id": {
                  "type": "uint64",
                  "id": 4,
                  "options": {
                    "json_name": "MsgId"
                  }
                },
                "msg_type": {
                  "type": "string",
                  "id": 5,
                  "options": {
                    "json_name": "MsgType"
                  }
                },
                "content": {
                  "type": "string",
                  "id": 10,
                  "options": {
                    "json_name": "Content"
                  }
                },
                "pic_url": {
                  "type": "string",
                  "id": 20,
                  "options": {
                    "json_name": "PicUrl"
                  }
                },
                "media_id": {
                  "type": "string",
                  "id": 21,
                  "options": {
                    "json_name": "MediaId"
                  }
                },
                "title": {
                  "type": "string",
                  "id": 40,
                  "options": {
                    "json_name": "Title"
                  }
                },
                "ppp_id": {
                  "type": "string",
                  "id": 41,
                  "options": {
                    "json_name": "AppId"
                  }
                },
                "page_path": {
                  "type": "string",
                  "id": 42,
                  "options": {
                    "json_name": "PagePath"
                  }
                },
                "thumb_url": {
                  "type": "string",
                  "id": 43,
                  "options": {
                    "json_name": "ThumbUrl"
                  }
                },
                "thumb_media_id": {
                  "type": "string",
                  "id": 44,
                  "options": {
                    "json_name": "ThumbMediaId"
                  }
                },
                "event": {
                  "type": "string",
                  "id": 50,
                  "options": {
                    "json_name": "Event"
                  }
                },
                "session_from": {
                  "type": "string",
                  "id": 51,
                  "options": {
                    "json_name": "SessionFrom"
                  }
                }
              }
            },
            "WxaCustomMessageSendType": {
              "fields": {
                "touser": {
                  "type": "string",
                  "id": 1
                },
                "msgtype": {
                  "type": "string",
                  "id": 2
                },
                "text": {
                  "type": "Text",
                  "id": 10
                },
                "image": {
                  "type": "Image",
                  "id": 20
                },
                "link": {
                  "type": "Link",
                  "id": 30
                },
                "miniprogrampage": {
                  "type": "Miniprogrampage",
                  "id": 40
                }
              },
              "nested": {
                "Text": {
                  "fields": {
                    "content": {
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "Image": {
                  "fields": {
                    "media_id": {
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "Link": {
                  "fields": {
                    "title": {
                      "type": "string",
                      "id": 1
                    },
                    "description": {
                      "type": "string",
                      "id": 2
                    },
                    "url": {
                      "type": "string",
                      "id": 3
                    },
                    "thumb_url": {
                      "type": "string",
                      "id": 4
                    }
                  }
                },
                "Miniprogrampage": {
                  "fields": {
                    "title": {
                      "type": "string",
                      "id": 1
                    },
                    "pagepath": {
                      "type": "string",
                      "id": 2
                    },
                    "thumb_media_id": {
                      "type": "string",
                      "id": 3
                    }
                  }
                }
              }
            },
            "WxaCustomMessageResponder": {
              "fields": {
                "responder_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "created_at": {
                  "type": "uint64",
                  "id": 4
                },
                "updated_at": {
                  "type": "uint64",
                  "id": 5
                },
                "app_id": {
                  "type": "uint32",
                  "id": 10
                },
                "responder": {
                  "type": "Responder",
                  "id": 20
                }
              },
              "nested": {
                "Rule": {
                  "fields": {
                    "status": {
                      "type": "uint64",
                      "id": 1
                    },
                    "content": {
                      "type": "string",
                      "id": 2
                    },
                    "response": {
                      "type": "WxaCustomMessageSendType",
                      "id": 3
                    }
                  },
                  "nested": {
                    "Status": {
                      "values": {
                        "STATUS_UNSPECIFIED": 0,
                        "STATUS_DEFAULT": 1,
                        "STATUS_REGEX": 2
                      }
                    }
                  }
                },
                "Responder": {
                  "fields": {
                    "rules": {
                      "rule": "repeated",
                      "type": "Rule",
                      "id": 1
                    }
                  }
                }
              }
            },
            "Payment": {
              "fields": {
                "payment_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "created_at": {
                  "type": "uint64",
                  "id": 4
                },
                "updated_at": {
                  "type": "uint64",
                  "id": 5
                },
                "app_id": {
                  "type": "uint32",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "mch_id": {
                  "type": "string",
                  "id": 20
                },
                "body": {
                  "type": "string",
                  "id": 21
                },
                "nonce_str": {
                  "type": "string",
                  "id": 22
                },
                "out_trade_no": {
                  "type": "string",
                  "id": 23
                },
                "total_fee": {
                  "type": "uint64",
                  "id": 24
                },
                "spbill_create_ip": {
                  "type": "string",
                  "id": 25
                },
                "notify_url": {
                  "type": "string",
                  "id": 26
                },
                "trade_type": {
                  "type": "string",
                  "id": 27
                },
                "openid": {
                  "type": "string",
                  "id": 28
                },
                "sign_type": {
                  "type": "string",
                  "id": 29
                },
                "prepay_id": {
                  "type": "string",
                  "id": 30
                },
                "code_url": {
                  "type": "string",
                  "id": 31
                },
                "transaction_id": {
                  "type": "string",
                  "id": 32
                },
                "trade_state": {
                  "type": "string",
                  "id": 33
                },
                "refund_fee": {
                  "type": "uint64",
                  "id": 34
                },
                "out_refund_no": {
                  "type": "string",
                  "id": 35
                },
                "refund_desc": {
                  "type": "string",
                  "id": 36
                },
                "refunded_at": {
                  "type": "uint64",
                  "id": 37
                }
              },
              "nested": {
                "Status": {
                  "values": {
                    "STATUS_UNSPECIFIED": 0,
                    "STATUS_REFUNDED": 256
                  }
                }
              }
            },
            "Transfer": {
              "fields": {
                "transfer_id": {
                  "type": "uint64",
                  "id": 1
                },
                "status": {
                  "type": "uint64",
                  "id": 2
                },
                "revision": {
                  "type": "uint64",
                  "id": 3
                },
                "created_at": {
                  "type": "uint64",
                  "id": 4
                },
                "updated_at": {
                  "type": "uint64",
                  "id": 5
                },
                "app_id": {
                  "type": "uint32",
                  "id": 10
                },
                "account_id": {
                  "type": "uint64",
                  "id": 11
                },
                "reference_id": {
                  "type": "uint64",
                  "id": 12
                },
                "mch_id": {
                  "type": "string",
                  "id": 20
                },
                "description": {
                  "type": "string",
                  "id": 21
                },
                "partner_trade_no": {
                  "type": "string",
                  "id": 22
                },
                "amount": {
                  "type": "uint64",
                  "id": 23
                },
                "openid": {
                  "type": "string",
                  "id": 24
                },
                "spbill_create_ip": {
                  "type": "string",
                  "id": 25
                },
                "transfer_state": {
                  "type": "string",
                  "id": 26
                },
                "check_name": {
                  "type": "string",
                  "id": 27
                },
                "nonce_str": {
                  "type": "string",
                  "id": 28
                },
                "payment_no": {
                  "type": "string",
                  "id": 29
                },
                "payment_time": {
                  "type": "string",
                  "id": 30
                }
              }
            },
            "GetTokenRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "refresh": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "GetTokenResponse": {
              "fields": {
                "token": {
                  "type": "WXToken",
                  "id": 1
                }
              }
            },
            "GetTicketRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "refresh": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "GetTicketResponse": {
              "fields": {
                "ticket": {
                  "type": "WXTicket",
                  "id": 1
                }
              }
            },
            "GetSnsAccessTokenRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "code": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "GetSnsAccessTokenResponse": {
              "fields": {
                "access_token": {
                  "type": "SnsAccessToken",
                  "id": 1
                }
              }
            },
            "GetSnsUserInfoRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "access_token": {
                  "type": "string",
                  "id": 2
                },
                "openid": {
                  "type": "string",
                  "id": 3
                },
                "lang": {
                  "type": "string",
                  "id": 4
                }
              }
            },
            "GetSnsUserInfoResponse": {
              "fields": {
                "user_info": {
                  "type": "SnsUserInfo",
                  "id": 1
                }
              }
            },
            "GetWxaSessionRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "code": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "GetWxaSessionResponse": {
              "fields": {
                "session": {
                  "type": "WxaSession",
                  "id": 1
                }
              }
            },
            "GetWxaUserInfoRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "openid": {
                  "type": "string",
                  "id": 2
                },
                "encrypted_data": {
                  "type": "string",
                  "id": 3
                },
                "iv": {
                  "type": "string",
                  "id": 4
                }
              }
            },
            "GetWxaUserInfoResponse": {
              "fields": {
                "user_info": {
                  "type": "WxaUserInfo",
                  "id": 1
                }
              }
            },
            "GetWxaPhoneNumberRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "openid": {
                  "type": "string",
                  "id": 2
                },
                "encrypted_data": {
                  "type": "string",
                  "id": 3
                },
                "iv": {
                  "type": "string",
                  "id": 4
                }
              }
            },
            "GetWxaPhoneNumberResponse": {
              "fields": {
                "phone_number": {
                  "type": "WxaPhoneNumber",
                  "id": 1
                }
              }
            },
            "EncodeWxaSceneRequest": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "EncodeWxaSceneResponse": {
              "fields": {
                "scene": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DecodeWxaSceneRequest": {
              "fields": {
                "scene": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DecodeWxaSceneResponse": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetWxaCodeUnlimitRequest": {
              "fields": {
                "app_id": {
                  "type": "string",
                  "id": 1
                },
                "scene": {
                  "type": "string",
                  "id": 2
                },
                "page": {
                  "type": "string",
                  "id": 3
                },
                "width": {
                  "type": "uint32",
                  "id": 4
                }
              }
            },
            "GetWxaCodeUnlimitResponse": {
              "fields": {
                "image": {
                  "type": "bytes",
                  "id": 1
                }
              }
            },
            "AddWxaFormIdRequest": {
              "fields": {
                "form_id": {
                  "type": "WxaFormId",
                  "id": 1
                }
              }
            },
            "AddWxaFormIdResponse": {
              "fields": {
                "form_id": {
                  "type": "WxaFormId",
                  "id": 1
                }
              }
            },
            "SendWxaTemplateRequest": {
              "fields": {
                "app_id": {
                  "type": "uint32",
                  "id": 1
                },
                "account_id": {
                  "type": "uint64",
                  "id": 2
                },
                "template_id": {
                  "type": "uint64",
                  "id": 3
                },
                "page": {
                  "type": "string",
                  "id": 4
                },
                "keywords": {
                  "keyType": "string",
                  "type": "common.StringSet",
                  "id": 5
                },
                "emphasis_keyword": {
                  "type": "string",
                  "id": 6
                },
                "interval": {
                  "type": "uint64",
                  "id": 7
                },
                "sender_id": {
                  "type": "uint64",
                  "id": 8
                }
              },
              "nested": {
                "TemplateId": {
                  "values": {
                    "TEMPLATE_ID_UNSPECIFIED": 0
                  }
                }
              }
            },
            "SendWxaTemplateResponse": {
              "fields": {
                "msg": {
                  "type": "WxaTemplateMsg",
                  "id": 1
                }
              }
            },
            "GetWxaCustomMessageResponderRequest": {
              "fields": {
                "responder_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetWxaCustomMessageResponderResponse": {
              "fields": {
                "responder": {
                  "type": "WxaCustomMessageResponder",
                  "id": 1
                }
              }
            },
            "SetWxaCustomMessageResponderRequest": {
              "fields": {
                "responder": {
                  "type": "WxaCustomMessageResponder",
                  "id": 1
                }
              }
            },
            "SetWxaCustomMessageResponderResponse": {
              "fields": {
                "responder": {
                  "type": "WxaCustomMessageResponder",
                  "id": 1
                }
              }
            },
            "RecvWxaCustomMessageRequest": {
              "fields": {
                "message": {
                  "type": "WxaCustomMessageRecvType",
                  "id": 1
                }
              }
            },
            "RecvWxaCustomMessageResponse": {
              "fields": {
                "message": {
                  "type": "WxaCustomMessageSendType",
                  "id": 1
                }
              }
            },
            "SendWxaCustomMessageRequest": {
              "fields": {
                "message": {
                  "type": "WxaCustomMessageSendType",
                  "id": 1
                }
              }
            },
            "SendWxaCustomMessageResponse": {
              "fields": {
                "message": {
                  "type": "WxaCustomMessageSendType",
                  "id": 1
                }
              }
            },
            "AddPaymentRequest": {
              "fields": {
                "payment": {
                  "type": "Payment",
                  "id": 1
                }
              }
            },
            "AddPaymentResponse": {
              "fields": {
                "payment": {
                  "type": "Payment",
                  "id": 1
                },
                "params": {
                  "type": "Params",
                  "id": 2
                }
              },
              "nested": {
                "Params": {
                  "fields": {
                    "time_stamp": {
                      "type": "string",
                      "id": 1
                    },
                    "nonce_str": {
                      "type": "string",
                      "id": 2
                    },
                    "pkg": {
                      "type": "string",
                      "id": 3
                    },
                    "sign_type": {
                      "type": "string",
                      "id": 4
                    },
                    "pay_sign": {
                      "type": "string",
                      "id": 5
                    }
                  }
                }
              }
            },
            "SetPaymentRequest": {
              "fields": {
                "payment": {
                  "type": "Payment",
                  "id": 1
                }
              }
            },
            "SetPaymentResponse": {
              "fields": {
                "payment": {
                  "type": "Payment",
                  "id": 1
                }
              }
            },
            "GetPaymentRequest": {
              "fields": {
                "payment_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "GetPaymentResponse": {
              "fields": {
                "payment": {
                  "type": "Payment",
                  "id": 1
                }
              }
            },
            "ListPaymentRequest": {
              "fields": {
                "account_id": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "ListPaymentResponse": {
              "fields": {
                "payments": {
                  "rule": "repeated",
                  "type": "Payment",
                  "id": 1
                },
                "count": {
                  "type": "uint32",
                  "id": 2
                },
                "has_next": {
                  "type": "bool",
                  "id": 3
                }
              }
            },
            "TransferRequest": {
              "fields": {
                "transfer": {
                  "type": "Transfer",
                  "id": 1
                }
              }
            },
            "TransferResponse": {
              "fields": {
                "transfer": {
                  "type": "Transfer",
                  "id": 1
                }
              }
            },
            "RefundRequest": {
              "fields": {
                "payment_id": {
                  "type": "uint64",
                  "id": 1
                },
                "refund_fee": {
                  "type": "uint64",
                  "id": 2
                },
                "refund_desc_note_id": {
                  "type": "uint64",
                  "id": 3
                },
                "auto": {
                  "type": "bool",
                  "id": 4
                }
              }
            },
            "RefundResponse": {
              "fields": {
                "payment": {
                  "type": "Payment",
                  "id": 1
                }
              }
            }
          }
        },
        "common": {
          "options": {
            "java_multiple_files": true,
            "go_package": "code.guanmai.cn/back_end/ceres/common/proto;proto"
          },
          "nested": {
            "Status": {
              "fields": {},
              "nested": {
                "Code": {
                  "values": {
                    "OK": 0,
                    "CANCELED": 1,
                    "UNKNOWN": 2,
                    "INVALID_ARGUMENT": 3,
                    "DEADLINE_EXCEEDED": 4,
                    "NOT_FOUND": 5,
                    "ALREADY_EXISTS": 6,
                    "PERMISSION_DENIED": 7,
                    "RESOURCE_EXHAUSTED": 8,
                    "FAILED_PRECONDITION": 9,
                    "ABORTED": 10,
                    "OUT_OF_RANGE": 11,
                    "UNIMPLEMENTED": 12,
                    "INTERNAL": 13,
                    "UNAVAILABLE": 14,
                    "DATA_LOSS": 15,
                    "UNAUTHENTICATED": 16,
                    "DATABASE_ERROR": 1001,
                    "ASYNC_ERROR": 1002,
                    "CACHE_NOT_EXISTED": 1003,
                    "DATA_EXPIRED": 1004,
                    "DUPLICATE_CUSTOMIZED_CODE": 1005,
                    "REDIS_ERROR": 1006,
                    "REDIS_LOCKED": 1007
                  }
                },
                "InvalidArgumentDetail": {
                  "fields": {
                    "reason": {
                      "type": "string",
                      "id": 1
                    }
                  }
                }
              }
            },
            "Uint64Set": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "StringSet": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Model": {
              "fields": {},
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_ACCOUNT_ACCOUNT": 1,
                    "TYPE_PRODUCTION_PROCESSTYPE": 2,
                    "TYPE_PRODUCTION_PROCESSTEMPLATE": 3,
                    "TYPE_PRODUCTION_PROCESSOR": 4,
                    "TYPE_PRODUCTION_BOM": 5,
                    "TYPE_PRODUCTION_TASK": 6,
                    "TYPE_PRODUCTION_TASKINPUT": 7,
                    "TYPE_PRODUCTION_TASKPROCESS": 8,
                    "TYPE_PRODUCTION_TASKWEIGHT": 47,
                    "TYPE_PRODUCTION_TASKOUTPUT": 66,
                    "TYPE_INVENTORY_STOCKSHEET": 9,
                    "TYPE_INVENTORY_STOCKLOG": 10,
                    "TYPE_INVENTORY_BATCHLOG": 11,
                    "TYPE_INVENTORY_SHELF": 12,
                    "TYPE_INVENTORY_BATCH": 13,
                    "TYPE_INVENTORY_SKUUNITSTOCK": 14,
                    "TYPE_INVENTORY_SKUSTOCK": 15,
                    "TYPE_INVENTORY_STATEMENT": 16,
                    "TYPE_INVENTORY_ADJUSTSHEET": 17,
                    "TYPE_INVENTORY_ADJUSTLOG": 18,
                    "TYPE_INVENTORY_CUSTOMERTURNOVER": 19,
                    "TYPE_INVENTORY_REPLACE": 20,
                    "TYPE_ORDER_ORDER": 21,
                    "TYPE_ORDER_ORDER_DETAIL": 22,
                    "TYPE_ORDER_ORDER_IMPORT_TEMPLETE": 23,
                    "TYPE_ORDER_ESHOP_ORDER": 48,
                    "TYPE_ORDER_ESHOP_ORDER_DETAIL": 49,
                    "TYPE_ORDER_ESHOP_MENU_PERIOD_GROUP": 70,
                    "TYPE_ORDER_ESHOP_LEAVE_APPLICATION": 71,
                    "TYPE_ORDER_ESHOP_MENU": 72,
                    "TYPE_ORDER_ESHOP_MENU_DETAIL": 73,
                    "TYPE_ENTERPRISE_GROUP": 24,
                    "TYPE_ENTERPRISE_GROUP_USER": 25,
                    "TYPE_ENTERPRISE_STATION": 26,
                    "TYPE_ENTERPRISE_CUSTOMER": 27,
                    "TYPE_ENTERPRISE_CUSTOMER_USER": 28,
                    "TYPE_ENTERPRISE_CUSTOMER_LABEL": 45,
                    "TYPE_ENTERPRISE_SERVICE_PERIOD": 29,
                    "TYPE_ENTERPRISE_SUPPLIER": 30,
                    "TYPE_ENTERPRISE_DISTRIBUTION_CONTRACTOR": 31,
                    "TYPE_ENTERPRISE_ROLE": 32,
                    "TYPE_ENTERPRISE_INVITATION_CODE": 34,
                    "TYPE_ENTERPRISE_SHOP_DIY_SETTING": 46,
                    "TYPE_PURCHASE_TASK": 35,
                    "TYPE_PURCHASE_SHEET": 36,
                    "TYPE_PURCHASE_BATCH": 37,
                    "TYPE_PURCHASE_INQUIRY_PRICE": 38,
                    "TYPE_PURCHASE_SRC_RELATION": 50,
                    "TYPE_OPERATION_OPERATION": 39,
                    "TYPE_MERCHANDISE_CATEGORY": 40,
                    "TYPE_MERCHANDISE_SPU": 41,
                    "TYPE_MERCHANDISE_SKU": 42,
                    "TYPE_MERCHANDISE_QUOTATION": 43,
                    "TYPE_MERCHANDISE_FAVORITE": 100,
                    "TYPE_MERCHANDISE_FAVORITE_SSU": 101,
                    "TYPE_ASYNCTASK_TASK": 44,
                    "TYPE_SORTING_TAG": 51,
                    "TYPE_SORTING_SKU_GROUP": 52,
                    "TYPE_SORTING_BASKET": 53,
                    "TYPE_SORTING_SKU_GROUP_SKU": 65,
                    "TYPE_ROUTE": 54,
                    "TYPE_MENU": 55,
                    "TYPE_MENU_DETAIL_ID": 56,
                    "TYPE_PREFERENCE_PRINTING_TEMPLATE": 57,
                    "TYPE_PREFERENCE_INNER_LABEL_PRINTING_TEMPLATE": 58,
                    "TYPE_PREFERENCE_SHOP": 59,
                    "TYPE_PREFERENCE_SHOP_LAYOUT_SETTINGS": 60,
                    "TYPE_PREFERENCE_SHOP_BANNER": 67,
                    "TYPE_PURCHASE_SETTINGS": 61,
                    "TYPE_INVENTORY_SETTINGS": 62,
                    "TYPE_APPOINT_TIME_SETTINGS": 63,
                    "TYPE_PRECISION_SETTINGS": 64,
                    "TYPE_SORTING_SETTINGS": 68,
                    "TYPE_PRODUCTION_SETTINGS": 74,
                    "TYPE_AFTER_SALE_ORDER": 80,
                    "TYPE_AFTER_SALE_ORDER_DETAIL": 81,
                    "TYPE_BOSS_PERMISSION_SET": 90,
                    "TYPE_DATA_SYNC_SEQUENCE": 200,
                    "TYPE_FINANCE_SETTLE": 300,
                    "TYPE_FINANCE_AMOUNT_DISCOUNT": 301,
                    "TYPE_FINANCE_TRANSACTION_FLOW": 302,
                    "TYPE_FINANCE_ACCOUNT_BALANCE": 303,
                    "TYPE_FAKE_ANALYTICS_EXAMPLE": 1000000,
                    "TYPE_FAKE_ANALYTICS_EXAMPLE_TYPE_B": 1000001
                  }
                }
              }
            },
            "Filters": {
              "fields": {},
              "nested": {
                "Bool": {
                  "values": {
                    "ALL": 0,
                    "TRUE": 1,
                    "FALSE": 2
                  }
                }
              }
            },
            "App": {
              "fields": {},
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_STATION": 1,
                    "TYPE_BSHOP": 2,
                    "TYPE_CSHOP": 3,
                    "TYPE_ESHOP": 4,
                    "TYPE_CMD": 5
                  }
                }
              }
            },
            "Image": {
              "fields": {
                "type": {
                  "type": "Type",
                  "id": 1,
                  "options": {
                    "(validate.rules).message.required": true
                  }
                },
                "height": {
                  "type": "uint32",
                  "id": 2
                },
                "weight": {
                  "type": "uint32",
                  "id": 3
                },
                "path": {
                  "type": "string",
                  "id": 4,
                  "options": {
                    "(validate.rules).string.min_len": 3
                  }
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_UNSPECIFIED": 0,
                    "TYPE_QINIU": 1,
                    "TYPE_TENCENT_COS": 2
                  }
                }
              }
            },
            "SortBy": {
              "fields": {
                "field": {
                  "type": "int32",
                  "id": 1
                },
                "desc": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "PagingParams": {
              "fields": {
                "offset": {
                  "type": "uint32",
                  "id": 1
                },
                "sequence": {
                  "type": "uint64",
                  "id": 3
                },
                "all": {
                  "type": "bool",
                  "id": 5
                },
                "limit": {
                  "type": "uint32",
                  "id": 2,
                  "options": {
                    "(validate.rules).uint32.lte": 1000
                  }
                },
                "need_count": {
                  "type": "bool",
                  "id": 4
                }
              }
            },
            "PagingResult": {
              "fields": {
                "has_more": {
                  "type": "bool",
                  "id": 1
                },
                "count": {
                  "type": "uint32",
                  "id": 4
                }
              }
            },
            "SyncOptions": {
              "fields": {
                "model_type": {
                  "type": "Model.Type",
                  "id": 1
                },
                "partition": {
                  "type": "uint64",
                  "id": 2
                },
                "sequence_min": {
                  "type": "uint64",
                  "id": 3
                },
                "sequence_max": {
                  "type": "uint64",
                  "id": 4
                },
                "limit": {
                  "type": "uint32",
                  "id": 6,
                  "options": {
                    "(validate.rules).uint32.gte": 2,
                    "(validate.rules).uint32.lte": 1000
                  }
                }
              }
            },
            "Gender": {
              "values": {
                "GENDER_UNSPECIFIED": 0,
                "GENDER_FEMALE": 1,
                "GENDER_MALE": 2
              }
            }
          }
        }
      }
    },
    "validate": {
      "options": {
        "go_package": "github.com/envoyproxy/protoc-gen-validate/validate",
        "java_package": "io.envoyproxy.pgv.validate"
      },
      "nested": {
        "disabled": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.MessageOptions"
        },
        "required": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.OneofOptions"
        },
        "rules": {
          "type": "FieldRules",
          "id": 1071,
          "extend": "google.protobuf.FieldOptions"
        },
        "FieldRules": {
          "oneofs": {
            "type": {
              "oneof": [
                "float",
                "double",
                "int32",
                "int64",
                "uint32",
                "uint64",
                "sint32",
                "sint64",
                "fixed32",
                "fixed64",
                "sfixed32",
                "sfixed64",
                "bool",
                "string",
                "bytes",
                "enum",
                "repeated",
                "map",
                "any",
                "duration",
                "timestamp"
              ]
            }
          },
          "fields": {
            "message": {
              "type": "MessageRules",
              "id": 17
            },
            "float": {
              "type": "FloatRules",
              "id": 1
            },
            "double": {
              "type": "DoubleRules",
              "id": 2
            },
            "int32": {
              "type": "Int32Rules",
              "id": 3
            },
            "int64": {
              "type": "Int64Rules",
              "id": 4
            },
            "uint32": {
              "type": "UInt32Rules",
              "id": 5
            },
            "uint64": {
              "type": "UInt64Rules",
              "id": 6
            },
            "sint32": {
              "type": "SInt32Rules",
              "id": 7
            },
            "sint64": {
              "type": "SInt64Rules",
              "id": 8
            },
            "fixed32": {
              "type": "Fixed32Rules",
              "id": 9
            },
            "fixed64": {
              "type": "Fixed64Rules",
              "id": 10
            },
            "sfixed32": {
              "type": "SFixed32Rules",
              "id": 11
            },
            "sfixed64": {
              "type": "SFixed64Rules",
              "id": 12
            },
            "bool": {
              "type": "BoolRules",
              "id": 13
            },
            "string": {
              "type": "StringRules",
              "id": 14
            },
            "bytes": {
              "type": "BytesRules",
              "id": 15
            },
            "enum": {
              "type": "EnumRules",
              "id": 16
            },
            "repeated": {
              "type": "RepeatedRules",
              "id": 18
            },
            "map": {
              "type": "MapRules",
              "id": 19
            },
            "any": {
              "type": "AnyRules",
              "id": 20
            },
            "duration": {
              "type": "DurationRules",
              "id": 21
            },
            "timestamp": {
              "type": "TimestampRules",
              "id": 22
            }
          }
        },
        "FloatRules": {
          "fields": {
            "const": {
              "type": "float",
              "id": 1
            },
            "lt": {
              "type": "float",
              "id": 2
            },
            "lte": {
              "type": "float",
              "id": 3
            },
            "gt": {
              "type": "float",
              "id": 4
            },
            "gte": {
              "type": "float",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "float",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "float",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "DoubleRules": {
          "fields": {
            "const": {
              "type": "double",
              "id": 1
            },
            "lt": {
              "type": "double",
              "id": 2
            },
            "lte": {
              "type": "double",
              "id": 3
            },
            "gt": {
              "type": "double",
              "id": 4
            },
            "gte": {
              "type": "double",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "double",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "double",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Int32Rules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "lt": {
              "type": "int32",
              "id": 2
            },
            "lte": {
              "type": "int32",
              "id": 3
            },
            "gt": {
              "type": "int32",
              "id": 4
            },
            "gte": {
              "type": "int32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Int64Rules": {
          "fields": {
            "const": {
              "type": "int64",
              "id": 1
            },
            "lt": {
              "type": "int64",
              "id": 2
            },
            "lte": {
              "type": "int64",
              "id": 3
            },
            "gt": {
              "type": "int64",
              "id": 4
            },
            "gte": {
              "type": "int64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "UInt32Rules": {
          "fields": {
            "const": {
              "type": "uint32",
              "id": 1
            },
            "lt": {
              "type": "uint32",
              "id": 2
            },
            "lte": {
              "type": "uint32",
              "id": 3
            },
            "gt": {
              "type": "uint32",
              "id": 4
            },
            "gte": {
              "type": "uint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "UInt64Rules": {
          "fields": {
            "const": {
              "type": "uint64",
              "id": 1
            },
            "lt": {
              "type": "uint64",
              "id": 2
            },
            "lte": {
              "type": "uint64",
              "id": 3
            },
            "gt": {
              "type": "uint64",
              "id": 4
            },
            "gte": {
              "type": "uint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SInt32Rules": {
          "fields": {
            "const": {
              "type": "sint32",
              "id": 1
            },
            "lt": {
              "type": "sint32",
              "id": 2
            },
            "lte": {
              "type": "sint32",
              "id": 3
            },
            "gt": {
              "type": "sint32",
              "id": 4
            },
            "gte": {
              "type": "sint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SInt64Rules": {
          "fields": {
            "const": {
              "type": "sint64",
              "id": 1
            },
            "lt": {
              "type": "sint64",
              "id": 2
            },
            "lte": {
              "type": "sint64",
              "id": 3
            },
            "gt": {
              "type": "sint64",
              "id": 4
            },
            "gte": {
              "type": "sint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Fixed32Rules": {
          "fields": {
            "const": {
              "type": "fixed32",
              "id": 1
            },
            "lt": {
              "type": "fixed32",
              "id": 2
            },
            "lte": {
              "type": "fixed32",
              "id": 3
            },
            "gt": {
              "type": "fixed32",
              "id": 4
            },
            "gte": {
              "type": "fixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "Fixed64Rules": {
          "fields": {
            "const": {
              "type": "fixed64",
              "id": 1
            },
            "lt": {
              "type": "fixed64",
              "id": 2
            },
            "lte": {
              "type": "fixed64",
              "id": 3
            },
            "gt": {
              "type": "fixed64",
              "id": 4
            },
            "gte": {
              "type": "fixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SFixed32Rules": {
          "fields": {
            "const": {
              "type": "sfixed32",
              "id": 1
            },
            "lt": {
              "type": "sfixed32",
              "id": 2
            },
            "lte": {
              "type": "sfixed32",
              "id": 3
            },
            "gt": {
              "type": "sfixed32",
              "id": 4
            },
            "gte": {
              "type": "sfixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "SFixed64Rules": {
          "fields": {
            "const": {
              "type": "sfixed64",
              "id": 1
            },
            "lt": {
              "type": "sfixed64",
              "id": 2
            },
            "lte": {
              "type": "sfixed64",
              "id": 3
            },
            "gt": {
              "type": "sfixed64",
              "id": 4
            },
            "gte": {
              "type": "sfixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            }
          }
        },
        "BoolRules": {
          "fields": {
            "const": {
              "type": "bool",
              "id": 1
            }
          }
        },
        "StringRules": {
          "oneofs": {
            "well_known": {
              "oneof": [
                "email",
                "hostname",
                "ip",
                "ipv4",
                "ipv6",
                "uri",
                "uri_ref",
                "address",
                "uuid",
                "well_known_regex"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "string",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 19
            },
            "min_len": {
              "type": "uint64",
              "id": 2
            },
            "max_len": {
              "type": "uint64",
              "id": 3
            },
            "len_bytes": {
              "type": "uint64",
              "id": 20
            },
            "min_bytes": {
              "type": "uint64",
              "id": 4
            },
            "max_bytes": {
              "type": "uint64",
              "id": 5
            },
            "pattern": {
              "type": "string",
              "id": 6
            },
            "prefix": {
              "type": "string",
              "id": 7
            },
            "suffix": {
              "type": "string",
              "id": 8
            },
            "contains": {
              "type": "string",
              "id": 9
            },
            "not_contains": {
              "type": "string",
              "id": 23
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 10
            },
            "not_in": {
              "rule": "repeated",
              "type": "string",
              "id": 11
            },
            "email": {
              "type": "bool",
              "id": 12
            },
            "hostname": {
              "type": "bool",
              "id": 13
            },
            "ip": {
              "type": "bool",
              "id": 14
            },
            "ipv4": {
              "type": "bool",
              "id": 15
            },
            "ipv6": {
              "type": "bool",
              "id": 16
            },
            "uri": {
              "type": "bool",
              "id": 17
            },
            "uri_ref": {
              "type": "bool",
              "id": 18
            },
            "address": {
              "type": "bool",
              "id": 21
            },
            "uuid": {
              "type": "bool",
              "id": 22
            },
            "well_known_regex": {
              "type": "KnownRegex",
              "id": 24
            },
            "strict": {
              "type": "bool",
              "id": 25,
              "options": {
                "default": true
              }
            }
          }
        },
        "KnownRegex": {
          "values": {
            "UNKNOWN": 0,
            "HTTP_HEADER_NAME": 1,
            "HTTP_HEADER_VALUE": 2
          }
        },
        "BytesRules": {
          "oneofs": {
            "well_known": {
              "oneof": [
                "ip",
                "ipv4",
                "ipv6"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "bytes",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 13
            },
            "min_len": {
              "type": "uint64",
              "id": 2
            },
            "max_len": {
              "type": "uint64",
              "id": 3
            },
            "pattern": {
              "type": "string",
              "id": 4
            },
            "prefix": {
              "type": "bytes",
              "id": 5
            },
            "suffix": {
              "type": "bytes",
              "id": 6
            },
            "contains": {
              "type": "bytes",
              "id": 7
            },
            "in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 8
            },
            "not_in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 9
            },
            "ip": {
              "type": "bool",
              "id": 10
            },
            "ipv4": {
              "type": "bool",
              "id": 11
            },
            "ipv6": {
              "type": "bool",
              "id": 12
            }
          }
        },
        "EnumRules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "defined_only": {
              "type": "bool",
              "id": 2
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 3,
              "options": {
                "packed": false
              }
            },
            "not_in": {
              "rule": "repeated",
              "type": "int32",
              "id": 4,
              "options": {
                "packed": false
              }
            }
          }
        },
        "MessageRules": {
          "fields": {
            "skip": {
              "type": "bool",
              "id": 1
            },
            "required": {
              "type": "bool",
              "id": 2
            }
          }
        },
        "RepeatedRules": {
          "fields": {
            "min_items": {
              "type": "uint64",
              "id": 1
            },
            "max_items": {
              "type": "uint64",
              "id": 2
            },
            "unique": {
              "type": "bool",
              "id": 3
            },
            "items": {
              "type": "FieldRules",
              "id": 4
            }
          }
        },
        "MapRules": {
          "fields": {
            "min_pairs": {
              "type": "uint64",
              "id": 1
            },
            "max_pairs": {
              "type": "uint64",
              "id": 2
            },
            "no_sparse": {
              "type": "bool",
              "id": 3
            },
            "keys": {
              "type": "FieldRules",
              "id": 4
            },
            "values": {
              "type": "FieldRules",
              "id": 5
            }
          }
        },
        "AnyRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 2
            },
            "not_in": {
              "rule": "repeated",
              "type": "string",
              "id": 3
            }
          }
        },
        "DurationRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Duration",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Duration",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Duration",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Duration",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Duration",
              "id": 6
            },
            "in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 7
            },
            "not_in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 8
            }
          }
        },
        "TimestampRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Timestamp",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Timestamp",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Timestamp",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Timestamp",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Timestamp",
              "id": 6
            },
            "lt_now": {
              "type": "bool",
              "id": 7
            },
            "gt_now": {
              "type": "bool",
              "id": 8
            },
            "within": {
              "type": "google.protobuf.Duration",
              "id": 9
            }
          }
        }
      }
    },
    "google": {
      "nested": {
        "api": {
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "additional_bindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "public_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weak_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "message_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "source_code_info": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nested_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extension_range": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneof_decl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reserved_range": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reserved_name": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "type_name": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "default_value": {
                  "type": "string",
                  "id": 7
                },
                "oneof_index": {
                  "type": "int32",
                  "id": 9
                },
                "json_name": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "input_type": {
                  "type": "string",
                  "id": 2
                },
                "output_type": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "client_streaming": {
                  "type": "bool",
                  "id": 5
                },
                "server_streaming": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "FileOptions": {
              "fields": {
                "java_package": {
                  "type": "string",
                  "id": 1
                },
                "java_outer_classname": {
                  "type": "string",
                  "id": 8
                },
                "java_multiple_files": {
                  "type": "bool",
                  "id": 10
                },
                "java_generate_equals_and_hash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "java_string_check_utf8": {
                  "type": "bool",
                  "id": 27
                },
                "optimize_for": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "go_package": {
                  "type": "string",
                  "id": 11
                },
                "cc_generic_services": {
                  "type": "bool",
                  "id": 16
                },
                "java_generic_services": {
                  "type": "bool",
                  "id": 17
                },
                "py_generic_services": {
                  "type": "bool",
                  "id": 18
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23
                },
                "cc_enable_arenas": {
                  "type": "bool",
                  "id": 31
                },
                "objc_class_prefix": {
                  "type": "string",
                  "id": 36
                },
                "csharp_namespace": {
                  "type": "string",
                  "id": 37
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "message_set_wire_format": {
                  "type": "bool",
                  "id": 1
                },
                "no_standard_descriptor_accessor": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "map_entry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "weak": {
                  "type": "bool",
                  "id": 10
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allow_alias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifier_value": {
                  "type": "string",
                  "id": 3
                },
                "positive_int_value": {
                  "type": "uint64",
                  "id": 4
                },
                "negative_int_value": {
                  "type": "int64",
                  "id": 5
                },
                "double_value": {
                  "type": "double",
                  "id": 6
                },
                "string_value": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregate_value": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "name_part": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "is_extension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leading_comments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailing_comments": {
                      "type": "string",
                      "id": 4
                    },
                    "leading_detached_comments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "source_file": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}