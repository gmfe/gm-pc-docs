import * as asynctask from '../asynctask'
import * as common from '../common'
import * as oauth from '../oauth'
import * as enterprise from '../enterprise'
import * as account from '../account'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as merchandise from '../merchandise'
import * as inventory from '../inventory'
import * as preference from '../preference'
import * as order from '../order'
export interface CreatePurchaseTaskRequest {
  purchase_tasks: ReqCreatePurchaseTask[]
  batch: Batch
}
export interface CreatePurchaseTaskResponse {
  purchase_tasks: PurchaseTask[]
}
export interface SyncPurchaseTaskRequest {
  purchase_tasks: PurchaseTask[]
  batch: Batch
}
export interface SyncPurchaseTaskResponse {
  purchase_tasks: PurchaseTask[]
}
export interface AsyncCreatePurchaseTaskRequest {
  purchase_tasks: PurchaseTask[]
  batch: Batch
}
export interface AsyncCreatePurchaseTaskResponse {
}
export interface UpdatePurchaseTaskRequest {
  purchase_tasks: PurchaseTask[]
}
export interface UpdatePurchaseTaskResponse {
  purchase_tasks: PurchaseTask[]
}
export interface GetPurchaseTaskSummaryRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
}
export interface GetPurchaseTaskSummaryResponse_GroupResult {
  sku_count?: { [key: string]: number }
}
export interface GetPurchaseTaskSummaryResponse {
  supplier_map?: { [key: string]: GetPurchaseTaskSummaryResponse_GroupResult }
  purchaser_map?: { [key: string]: GetPurchaseTaskSummaryResponse_GroupResult }
}
export interface AsyncReleasePurchaseTaskRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
}
export interface AsyncReleasePurchaseTaskResponse {
  task?: asynctask.Task
}
export interface AsyncFinishPurchaseTaskRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
}
export interface AsyncSwitchPurchaseTaskPurchaserRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
  new_purchaser_id?: string
}
export interface AsyncSwitchPurchaseTaskPurchaserResponse {
  task?: asynctask.Task
}
export interface AsyncSwitchPurchaseTaskSupplierRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
  new_supplier_id?: string
}
export interface AsyncSwitchPurchaseTaskSupplierResponse {
  task?: asynctask.Task
}
export interface AsyncFinishPurchaseTaskResponse {
  task?: asynctask.Task
}
export interface DeletePurchaseTaskRequest {
  purchase_task_ids: string[]
}
export interface DeletePurchaseTaskResponse {
  purchase_tasks: PurchaseTask[]
}
export interface GetPurchaseTaskRequest {
  purchase_task_id: string
}
export interface GetPurchaseTaskResponse {
  purchase_task: PurchaseTask
}
export interface CreateSheetFromTaskRequest {
  purchase_tasks: PurchaseTask[]
}
export interface CreateSheetFromTaskResponse {
  purchase_sheets?: PurchaseSheet[]
}
export interface AsyncCreateSheetFromTaskRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
}
export interface AsyncCreateSheetFromTaskResponse {
  task?: asynctask.Task
}
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  SSU_SNAP_NOT_FOUND = 23450002,
  PURCHASE_UNIT_NOT_FOUND = 23450003,
  SKU_NOT_FOUND = 23450004,
  UNIT_NOT_FOUND = 23450005,
  PURCHASE_SHEET_SUBMIT_WITH_TASK_FINISHED = 23450006,
  ASYNC_PARAMS_MISMATCH = 23450007,
  SYNC_LACK_PURCHASE_TIME = 23450008,
  SYNC_LACK_SHEET_ID = 23450009,
  PURCHASE_TASK_DATA_ERROR = 23450010,
  SYNC_LACK_SHEET_VALUE = 23450011,
  PURCHASE_TASK_FAILURE_VERSION = 23450012,
}
export interface Status_SsuSnapNotFoundDetail {
  sku_id?: string
  unit_id?: string
  revision?: string
}
export interface Status_PurchaseUnitNotFoundDetail {
  sku_id?: string
  unit_id?: string
}
export interface Status_SkuNotFoundDetail {
  sku_id?: string
}
export interface Status_UnitNotFoundDetail {
  unit_id?: string
}
export interface Status_PurchaseSheetSubmitWithTaskFinishedDetail {
  purchase_sheet_id?: string
  purchase_task_id?: string
}
export interface Status {
}
export enum TimeType {
  UNSPECIFIED = 0,
  CREATE_TIME = 256,
  PURCHASE_TIME = 512,
  RELEASE_TIME = 1024,
}
export enum ListPurchaseTaskRequest_PagingField {
  UNSPECIFIED = 0,
  CATEGORY = 1,
  SUPPLIER = 2,
  PURCHASER = 3,
  SKU = 4,
}
export interface ListPurchaseTaskRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
  paging: common.PagingParams
  sort_by?: common.SortBy[]
}
export interface ListPurchaseTaskResponse {
  purchase_tasks: PurchaseTask[]
  skus: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  sku_stocks: { [key: string]: inventory.SkuStock }
  customers: { [key: string]: enterprise.Customer }
  suppliers: { [key: string]: enterprise.Supplier }
  group_users: { [key: string]: enterprise.GroupUser }
  ssu_snaps: { [key: string]: merchandise.Ssu }
  paging: common.PagingResult
}
export interface ExportPurchaseTaskRequest {
  q?: string
  status?: number
  sku_id?: string
  category_ids: string[]
  spu_ids: string[]
  supplier_ids: string[]
  purchaser_ids: string[]
  service_period_id?: string
  type: PurchaseTask_Type
  batch_id?: string
  request_source?: number
  begin_time?: string
  end_time?: string
  filter_time_type?: TimeType
  serial_no?: string
  purchase_task_ids?: string[]
}
export interface ExportPurchaseTaskResponse {
  task?: asynctask.Task
}
export interface SyncTaskFromOrderRequest {
  order_details: order.OrderDetail[]
  batch_name?: string
  service_period_id: string
  purchase_time: string
}
export interface SyncTaskFromOrderResponse {
}
export interface ListBatchRequest {
  service_period_id?: string
  begin_time: string
  end_time: string
  filter_time_type: TimeType
}
export interface ListBatchResponse {
  batches: Batch[]
}
export interface CreatePurchaseSheetRequest {
  purchase_sheet: ReqCreatePurchaseSheet
}
export interface CreatePurchaseSheetResponse {
  purchase_sheet: PurchaseSheet
}
export interface UpdatePurchaseSheetRequest {
  purchase_sheets: PurchaseSheet[]
}
export interface UpdatePurchaseSheetResponse {
  purchase_sheets: PurchaseSheet[]
}
export interface DeletePurchaseSheetRequest {
  purchase_sheet_ids: string[]
}
export interface DeletePurchaseSheetResponse {
  purchase_sheets: PurchaseSheet[]
}
export interface GetPurchaseSheetRequest {
  purchase_sheet_id: string
}
export interface GetPurchaseSheetResponse {
  purchase_sheet: PurchaseSheet
  skus: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  suppliers: { [key: string]: enterprise.Supplier }
  group_users: { [key: string]: enterprise.GroupUser }
  ssu_snaps: { [key: string]: merchandise.Ssu }
}
export interface ListPurchaseSheetRequest {
  q?: string
  begin_time: string
  end_time: string
  status?: number
  supplier_ids: string[]
  purchaser_ids: string[]
  serial_no?: string
  paging: common.PagingParams
  sort_by?: common.SortBy[]
}
export interface ListPurchaseSheetResponse {
  purchase_sheets: PurchaseSheet[]
  suppliers: { [key: string]: enterprise.Supplier }
  group_users: { [key: string]: enterprise.GroupUser }
  paging: common.PagingResult
}
export interface CreateInquiryPriceRequest {
  inquiry_price: ReqCreateInquiryPrice
}
export interface CreateInquiryPriceResponse {
  inquiry_price: InquiryPrice
}
export interface ListInquiryPriceRequest {
  q?: string
  category_ids: string[]
  supplier_ids: string[]
  spu_ids: string[]
  begin_time: string
  end_time: string
  source_type?: number
  paging: common.PagingParams
  sort_by?: common.SortBy[]
}
export interface ListInquiryPriceResponse {
  inquiry_prices: InquiryPrice[]
  skus: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  ssu_snaps: { [key: string]: merchandise.Ssu }
  suppliers: { [key: string]: enterprise.Supplier }
  group_users: { [key: string]: enterprise.GroupUser }
  paging: common.PagingResult
}
export interface ImportInquiryPriceRequest {
  excel_url?: string
}
export interface ImportInquiryPriceResponse {
  task?: asynctask.Task
}
export interface ImportInquiryPriceTmplRequest {
  supplier_id: string
}
export interface ImportInquiryPriceTmplResponse {
  task: asynctask.Task
}
export interface PurchaseTaskSrcRelation_Details_Detail {
  sku_id: string
  detail_id?: string
  purchase_task_id: string
}
export interface PurchaseTaskSrcRelation_Details {
  details: PurchaseTaskSrcRelation_Details_Detail[]
}
export interface PurchaseTaskSrcRelation {
  purchase_task_src_relation_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  request_sheet_id: string
  details: PurchaseTaskSrcRelation_Details
}
export interface PurchaseTask_RequestDetails_RequestDetail {
  request_sheet_id?: string
  detail_id?: string
  creator_id?: string
  ssu_revision?: string
  customer_id?: string
  unit_id?: string
  value?: merchandise.UnitValueSet
  request_sheet_serial_no?: string
  remark?: string
  sheet_unit_id?: string
  sheet_ssu_revision?: string
  sheet_value?: merchandise.UnitValueSet
  product_sku_id?: string
  request_source: PurchaseTask_RequestSource
}
export interface PurchaseTask_RequestDetails {
  request_details: PurchaseTask_RequestDetails_RequestDetail[]
}
export interface PurchaseTask_PurchaseDetails_PurchaseDetail {
  value: merchandise.UnitValueSet
  purchase_sheet_id: string
  detail_id?: number
  ssu_revision: string
  unit_id: string
  remark?: string
}
export interface PurchaseTask_PurchaseDetails {
  purchase_details?: PurchaseTask_PurchaseDetails_PurchaseDetail[]
}
export interface PurchaseTask_PurchaseSheetIds {
  purchase_sheet_ids?: string[]
}
export enum PurchaseTask_Status {
  STATUS_UNSPECIFIED = 0,
  PREPARE = 256,
  RELEASED = 512,
  FINISHED = 1024,
}
export enum PurchaseTask_RequestSource {
  UNSPECIFIED = 0,
  ORDER = 256,
  PROCESS = 512,
  STOCK = 1024,
  MANUAL = 2048,
  DIFF = 4096,
  PACK = 8192,
}
export enum PurchaseTask_Type {
  TYPE_UNSPECIFIED = 0,
  TMP = 256,
  COMMON = 512,
}
export interface PurchaseTask {
  purchase_task_id: string
  status: PurchaseTask_Status
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  sku_id: string
  supplier_id?: string
  purchaser_id?: string
  service_period_id?: string
  request_details: PurchaseTask_RequestDetails
  purchase_details?: PurchaseTask_PurchaseDetails
  request_source: PurchaseTask_RequestSource
  purchase_time?: string
  serial_no?: string
  request_value?: merchandise.UnitValueSet
  plan_value?: merchandise.UnitValueSet
  purchase_value?: merchandise.UnitValueSet
  batch_id?: string
  type: PurchaseTask_Type
  release_time?: string
  purchase_sheet_ids?: PurchaseTask_PurchaseSheetIds
}
export interface ReqCreatePurchaseTask {
  // purchase_task_id: string
  status: PurchaseTask_Status
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  sku_id: string
  supplier_id?: string
  purchaser_id?: string
  service_period_id?: string
  request_details: PurchaseTask_RequestDetails
  purchase_details?: PurchaseTask_PurchaseDetails
  request_source: PurchaseTask_RequestSource
  purchase_time?: string
  serial_no?: string
  request_value?: merchandise.UnitValueSet
  plan_value?: merchandise.UnitValueSet
  purchase_value?: merchandise.UnitValueSet
  batch_id?: string
  type: PurchaseTask_Type
  release_time?: string
  purchase_sheet_ids?: PurchaseTask_PurchaseSheetIds
}
export interface Batch {
  batch_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  service_period_id?: string
  name?: string
  last_release_time?: string
  last_submit_time?: string
  last_purchase_time?: string
}
export enum InquiryPrice_SourceType {
  UNSPECIFIED = 0,
  STATION = 256,
  PURCHASE_APP = 512,
  SUPPLIER_APP = 1024,
}
export interface InquiryPrice {
  inquiry_price_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  sku_id: string
  unit_id: string
  ssu_revision: string
  supplier_id?: string
  origin_place?: string
  desc?: string
  source_type?: InquiryPrice_SourceType
  std_price?: merchandise.UnitValue
  pack_price?: merchandise.UnitValue
}
export interface ReqCreateInquiryPrice {
  // inquiry_price_id: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  creator_id?: string
  sku_id: string
  unit_id: string
  ssu_revision: string
  supplier_id?: string
  origin_place?: string
  desc?: string
  source_type?: InquiryPrice_SourceType
  std_price?: merchandise.UnitValue
  pack_price?: merchandise.UnitValue
}
export enum PurchaseSheet_Status {
  UNSPECIFIED = 0,
  DRAFT = 256,
  COMMIT = 512,
}
export interface PurchaseSheet_SheetDetails_SheetDetail {
  sku_id: string
  ssu_revision: string
  unit_id: string
  purchase_value: merchandise.UnitValueSet
  purchase_task_id?: string
  purchase_task_serial_no?: string
  remark?: string
}
export interface PurchaseSheet_SheetDetails {
  details: PurchaseSheet_SheetDetails_SheetDetail[]
}
export interface PurchaseSheet {
  purchase_sheet_id: string
  status: PurchaseSheet_Status
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  supplier_id?: string
  purchaser_id?: string
  serial_no?: string
  details: PurchaseSheet_SheetDetails
  remark?: string
  amount?: string
}
export interface ReqCreatePurchaseSheet {
  // purchase_sheet_id: string
  status: PurchaseSheet_Status
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  creator_id?: string
  supplier_id?: string
  purchaser_id?: string
  serial_no?: string
  details: PurchaseSheet_SheetDetails
  remark?: string
  amount?: string
}
export interface PurchaseCreateRule {
  purchase_sync_rule_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  request_source?: string
  stock_limit?: string
}
export interface AsyncPurchaseTaskPayload {
  tasks?: PurchaseTask[]
}
export interface ExportInquiryTmpl {
  supplier?: enterprise.Supplier
  skus?: merchandise.GetManySkuResponse_SkuInfo[]
}
export interface Categories {
  category_ids?: string[]
}
export interface ImportPayload {
  rows?: number
  cols?: number
  boxes?: string[]
  fail_boxes?: string[]
}