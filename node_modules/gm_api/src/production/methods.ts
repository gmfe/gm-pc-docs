import { Request } from '../util/request'
import {
  CreateProcessTypeRequest, CreateProcessTypeResponse,
  UpdateProcessTypeRequest, UpdateProcessTypeResponse,
  DeleteProcessTypeRequest, DeleteProcessTypeResponse,
  ListProcessTypeRequest, ListProcessTypeResponse,
  GetProcessTypeRequest, GetProcessTypeResponse,
  CreateProcessTemplateRequest, CreateProcessTemplateResponse,
  UpdateProcessTemplateRequest, UpdateProcessTemplateResponse,
  DeleteProcessTemplateRequest, DeleteProcessTemplateResponse,
  ListProcessTemplateRequest, ListProcessTemplateResponse,
  GetProcessTemplateRequest, GetProcessTemplateResponse,
  ExportProcessTemplateRequest, ExportProcessTemplateResponse,
  CreateProcessorRequest, CreateProcessorResponse,
  UpdateProcessorRequest, UpdateProcessorResponse,
  DeleteProcessorRequest, DeleteProcessorResponse,
  ListProcessorRequest, ListProcessorResponse,
  UpdateProcessorProcessTemplateRequest, UpdateProcessorProcessTemplateResponse,
  ListProcessTemplateOfProcessorRequest, ListProcessTemplateOfProcessorResponse,
  ListProcessorOfProcessTemplateRequest, ListProcessorOfProcessTemplateResponse,
  CreateBomRequest, CreateBomResponse,
  UpdateBomRequest, UpdateBomResponse,
  DeleteBomRequest, DeleteBomResponse,
  ListProduceBomRequest, ListProduceBomResponse,
  GetManyBomRequest, GetManyBomResponse,
  ListProduceBomSkuRequest, ListProduceBomSkuResponse,
  GetPackBomRequest, GetPackBomResponse,
  ListPackBomRequest, ListPackBomResponse,
  GetBomRequest, GetBomResponse,
  GetBomSnapshotRequest, GetBomSnapshotResponse,
  ListBomSnapshotRequest, ListBomSnapshotResponse,
  CreateBomSnapshotRequest, CreateBomSnapshotResponse,
  ExportBomRequest, ExportBomResponse,
  ImportBomRequest, ImportBomResponse,
  CreateTaskRequest, CreateTaskResponse,
  CreatePlanTaskRequest, CreatePlanTaskResponse,
  CreateOrderTaskRequest, CreateOrderTaskResponse,
  UpdateTaskRequest, UpdateTaskResponse,
  ListTaskRequest, ListTaskResponse,
  GetManyTaskRequest, GetManyTaskResponse,
  DeleteTaskRequest, DeleteTaskResponse,
  GetTaskRequest, GetTaskResponse,
  ExportTaskRequest, ExportTaskResponse,
  ExportTaskDataRequest, ExportTaskDataResponse,
  SyncTaskOrderAmountRequest, SyncTaskOrderAmountResponse,
  GetTaskCategoryTreeRequest, GetTaskCategoryTreeResponse,
  BatchUpdateTaskStatusRequest, BatchUpdateTaskStatusResponse,
  UpdateTaskOutputRequest, UpdateTaskOutputResponse,
  ListTaskBatchRequest, ListTaskBatchResponse,
  SplitTaskProcessRequest, SplitTaskProcessResponse,
  UpdateTaskProcessRequest, UpdateTaskProcessResponse,
  GetTaskProcessRequest, GetTaskProcessResponse,
  UpdateTaskInputRequest, UpdateTaskInputResponse,
  ListTaskOutputRequest, ListTaskOutputResponse,
  SubmitTaskOutputRequest, SubmitTaskOutputResponse,
  CreateTaskWeightRequest, CreateTaskWeightResponse,
  GetTaskWeightRequest, GetTaskWeightResponse,
  DeleteTaskWeightRequest, DeleteTaskWeightResponse,
  ListTaskWeightRequest, ListTaskWeightResponse,
  BatchCreateTaskWeightRequest, BatchCreateTaskWeightResponse,
  SubmitTaskWeightRequest, SubmitTaskWeightResponse,
  CreateTaskPrintSheetCodeRequest, CreateTaskPrintSheetCodeResponse,
  GetTaskProductSheetRequest, GetTaskProductSheetResponse,
  GetTaskMaterialSheetRequest, GetTaskMaterialSheetResponse,
  ListTaskProductSheetByTaskRequest, ListTaskProductSheetByTaskResponse,
  ListTaskProductSheetByProcessRequest, ListTaskProductSheetByProcessResponse,
  ListTaskProductSheetByProcessorRequest, ListTaskProductSheetByProcessorResponse,
  ListTaskMaterialSheetByTaskRequest, ListTaskMaterialSheetByTaskResponse,
  ListTaskMaterialSheetByProcessorRequest, ListTaskMaterialSheetByProcessorResponse,
  SysSyncTaskRequest, SysSyncTaskResponse,
  SysSyncTaskInputRequest, SysSyncTaskInputResponse,
} from './types'
export const CreateProcessType = (r?: CreateProcessTypeRequest, codes?: number[]) =>
  Request<CreateProcessTypeResponse>('/ceres/production/ProductionService/CreateProcessType')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateProcessType.url = '/ceres/production/ProductionService/CreateProcessType'
export const UpdateProcessType = (r?: UpdateProcessTypeRequest, codes?: number[]) =>
  Request<UpdateProcessTypeResponse>('/ceres/production/ProductionService/UpdateProcessType')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateProcessType.url = '/ceres/production/ProductionService/UpdateProcessType'
export const DeleteProcessType = (r?: DeleteProcessTypeRequest, codes?: number[]) =>
  Request<DeleteProcessTypeResponse>('/ceres/production/ProductionService/DeleteProcessType')
    .code([...(codes || [])])
    .data(r || {})
    .run()
DeleteProcessType.url = '/ceres/production/ProductionService/DeleteProcessType'
export const ListProcessType = (r?: ListProcessTypeRequest, codes?: number[]) =>
  Request<ListProcessTypeResponse>('/ceres/production/ProductionService/ListProcessType')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProcessType.url = '/ceres/production/ProductionService/ListProcessType'
export const GetProcessType = (r?: GetProcessTypeRequest, codes?: number[]) =>
  Request<GetProcessTypeResponse>('/ceres/production/ProductionService/GetProcessType')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetProcessType.url = '/ceres/production/ProductionService/GetProcessType'
export const CreateProcessTemplate = (r?: CreateProcessTemplateRequest, codes?: number[]) =>
  Request<CreateProcessTemplateResponse>('/ceres/production/ProductionService/CreateProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateProcessTemplate.url = '/ceres/production/ProductionService/CreateProcessTemplate'
export const UpdateProcessTemplate = (r?: UpdateProcessTemplateRequest, codes?: number[]) =>
  Request<UpdateProcessTemplateResponse>('/ceres/production/ProductionService/UpdateProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateProcessTemplate.url = '/ceres/production/ProductionService/UpdateProcessTemplate'
export const DeleteProcessTemplate = (r?: DeleteProcessTemplateRequest, codes?: number[]) =>
  Request<DeleteProcessTemplateResponse>('/ceres/production/ProductionService/DeleteProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
DeleteProcessTemplate.url = '/ceres/production/ProductionService/DeleteProcessTemplate'
export const ListProcessTemplate = (r?: ListProcessTemplateRequest, codes?: number[]) =>
  Request<ListProcessTemplateResponse>('/ceres/production/ProductionService/ListProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProcessTemplate.url = '/ceres/production/ProductionService/ListProcessTemplate'
export const GetProcessTemplate = (r?: GetProcessTemplateRequest, codes?: number[]) =>
  Request<GetProcessTemplateResponse>('/ceres/production/ProductionService/GetProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetProcessTemplate.url = '/ceres/production/ProductionService/GetProcessTemplate'
export const ExportProcessTemplate = (r?: ExportProcessTemplateRequest, codes?: number[]) =>
  Request<ExportProcessTemplateResponse>('/ceres/production/ProductionService/ExportProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ExportProcessTemplate.url = '/ceres/production/ProductionService/ExportProcessTemplate'
export const CreateProcessor = (r?: CreateProcessorRequest, codes?: number[]) =>
  Request<CreateProcessorResponse>('/ceres/production/ProductionService/CreateProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateProcessor.url = '/ceres/production/ProductionService/CreateProcessor'
export const UpdateProcessor = (r?: UpdateProcessorRequest, codes?: number[]) =>
  Request<UpdateProcessorResponse>('/ceres/production/ProductionService/UpdateProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateProcessor.url = '/ceres/production/ProductionService/UpdateProcessor'
export const DeleteProcessor = (r?: DeleteProcessorRequest, codes?: number[]) =>
  Request<DeleteProcessorResponse>('/ceres/production/ProductionService/DeleteProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
DeleteProcessor.url = '/ceres/production/ProductionService/DeleteProcessor'
export const ListProcessor = (r?: ListProcessorRequest, codes?: number[]) =>
  Request<ListProcessorResponse>('/ceres/production/ProductionService/ListProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProcessor.url = '/ceres/production/ProductionService/ListProcessor'
export const UpdateProcessorProcessTemplate = (r?: UpdateProcessorProcessTemplateRequest, codes?: number[]) =>
  Request<UpdateProcessorProcessTemplateResponse>('/ceres/production/ProductionService/UpdateProcessorProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateProcessorProcessTemplate.url = '/ceres/production/ProductionService/UpdateProcessorProcessTemplate'
export const ListProcessTemplateOfProcessor = (r?: ListProcessTemplateOfProcessorRequest, codes?: number[]) =>
  Request<ListProcessTemplateOfProcessorResponse>('/ceres/production/ProductionService/ListProcessTemplateOfProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProcessTemplateOfProcessor.url = '/ceres/production/ProductionService/ListProcessTemplateOfProcessor'
export const ListProcessorOfProcessTemplate = (r?: ListProcessorOfProcessTemplateRequest, codes?: number[]) =>
  Request<ListProcessorOfProcessTemplateResponse>('/ceres/production/ProductionService/ListProcessorOfProcessTemplate')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProcessorOfProcessTemplate.url = '/ceres/production/ProductionService/ListProcessorOfProcessTemplate'
export const CreateBom = (r?: CreateBomRequest, codes?: number[]) =>
  Request<CreateBomResponse>('/ceres/production/ProductionService/CreateBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateBom.url = '/ceres/production/ProductionService/CreateBom'
export const UpdateBom = (r?: UpdateBomRequest, codes?: number[]) =>
  Request<UpdateBomResponse>('/ceres/production/ProductionService/UpdateBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateBom.url = '/ceres/production/ProductionService/UpdateBom'
export const DeleteBom = (r?: DeleteBomRequest, codes?: number[]) =>
  Request<DeleteBomResponse>('/ceres/production/ProductionService/DeleteBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
DeleteBom.url = '/ceres/production/ProductionService/DeleteBom'
export const ListProduceBom = (r?: ListProduceBomRequest, codes?: number[]) =>
  Request<ListProduceBomResponse>('/ceres/production/ProductionService/ListProduceBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProduceBom.url = '/ceres/production/ProductionService/ListProduceBom'
export const GetManyBom = (r?: GetManyBomRequest, codes?: number[]) =>
  Request<GetManyBomResponse>('/ceres/production/ProductionService/GetManyBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetManyBom.url = '/ceres/production/ProductionService/GetManyBom'
export const ListProduceBomSku = (r?: ListProduceBomSkuRequest, codes?: number[]) =>
  Request<ListProduceBomSkuResponse>('/ceres/production/ProductionService/ListProduceBomSku')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListProduceBomSku.url = '/ceres/production/ProductionService/ListProduceBomSku'
export const GetPackBom = (r?: GetPackBomRequest, codes?: number[]) =>
  Request<GetPackBomResponse>('/ceres/production/ProductionService/GetPackBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetPackBom.url = '/ceres/production/ProductionService/GetPackBom'
export const ListPackBom = (r?: ListPackBomRequest, codes?: number[]) =>
  Request<ListPackBomResponse>('/ceres/production/ProductionService/ListPackBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListPackBom.url = '/ceres/production/ProductionService/ListPackBom'
export const GetBom = (r?: GetBomRequest, codes?: number[]) =>
  Request<GetBomResponse>('/ceres/production/ProductionService/GetBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetBom.url = '/ceres/production/ProductionService/GetBom'
export const GetBomSnapshot = (r?: GetBomSnapshotRequest, codes?: number[]) =>
  Request<GetBomSnapshotResponse>('/ceres/production/ProductionService/GetBomSnapshot')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetBomSnapshot.url = '/ceres/production/ProductionService/GetBomSnapshot'
export const ListBomSnapshot = (r?: ListBomSnapshotRequest, codes?: number[]) =>
  Request<ListBomSnapshotResponse>('/ceres/production/ProductionService/ListBomSnapshot')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListBomSnapshot.url = '/ceres/production/ProductionService/ListBomSnapshot'
export const CreateBomSnapshot = (r?: CreateBomSnapshotRequest, codes?: number[]) =>
  Request<CreateBomSnapshotResponse>('/ceres/production/ProductionService/CreateBomSnapshot')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateBomSnapshot.url = '/ceres/production/ProductionService/CreateBomSnapshot'
export const ExportBom = (r?: ExportBomRequest, codes?: number[]) =>
  Request<ExportBomResponse>('/ceres/production/ProductionService/ExportBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ExportBom.url = '/ceres/production/ProductionService/ExportBom'
export const ImportBom = (r?: ImportBomRequest, codes?: number[]) =>
  Request<ImportBomResponse>('/ceres/production/ProductionService/ImportBom')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ImportBom.url = '/ceres/production/ProductionService/ImportBom'
export const CreateTask = (r?: CreateTaskRequest, codes?: number[]) =>
  Request<CreateTaskResponse>('/ceres/production/ProductionService/CreateTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateTask.url = '/ceres/production/ProductionService/CreateTask'
export const CreatePlanTask = (r?: CreatePlanTaskRequest, codes?: number[]) =>
  Request<CreatePlanTaskResponse>('/ceres/production/ProductionService/CreatePlanTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreatePlanTask.url = '/ceres/production/ProductionService/CreatePlanTask'
export const CreateOrderTask = (r?: CreateOrderTaskRequest, codes?: number[]) =>
  Request<CreateOrderTaskResponse>('/ceres/production/ProductionService/CreateOrderTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateOrderTask.url = '/ceres/production/ProductionService/CreateOrderTask'
export const UpdateTask = (r?: UpdateTaskRequest, codes?: number[]) =>
  Request<UpdateTaskResponse>('/ceres/production/ProductionService/UpdateTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateTask.url = '/ceres/production/ProductionService/UpdateTask'
export const ListTask = (r?: ListTaskRequest, codes?: number[]) =>
  Request<ListTaskResponse>('/ceres/production/ProductionService/ListTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTask.url = '/ceres/production/ProductionService/ListTask'
export const GetManyTask = (r?: GetManyTaskRequest, codes?: number[]) =>
  Request<GetManyTaskResponse>('/ceres/production/ProductionService/GetManyTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetManyTask.url = '/ceres/production/ProductionService/GetManyTask'
export const DeleteTask = (r?: DeleteTaskRequest, codes?: number[]) =>
  Request<DeleteTaskResponse>('/ceres/production/ProductionService/DeleteTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
DeleteTask.url = '/ceres/production/ProductionService/DeleteTask'
export const GetTask = (r?: GetTaskRequest, codes?: number[]) =>
  Request<GetTaskResponse>('/ceres/production/ProductionService/GetTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetTask.url = '/ceres/production/ProductionService/GetTask'
export const ExportTask = (r?: ExportTaskRequest, codes?: number[]) =>
  Request<ExportTaskResponse>('/ceres/production/ProductionService/ExportTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ExportTask.url = '/ceres/production/ProductionService/ExportTask'
export const ExportTaskData = (r?: ExportTaskDataRequest, codes?: number[]) =>
  Request<ExportTaskDataResponse>('/ceres/production/ProductionService/ExportTaskData')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ExportTaskData.url = '/ceres/production/ProductionService/ExportTaskData'

export const GetTaskCategoryTree = (r?: GetTaskCategoryTreeRequest, codes?: number[]) =>
  Request<GetTaskCategoryTreeResponse>('/ceres/production/ProductionService/GetTaskCategoryTree')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetTaskCategoryTree.url = '/ceres/production/ProductionService/GetTaskCategoryTree'
export const BatchUpdateTaskStatus = (r?: BatchUpdateTaskStatusRequest, codes?: number[]) =>
  Request<BatchUpdateTaskStatusResponse>('/ceres/production/ProductionService/BatchUpdateTaskStatus')
    .code([...(codes || [])])
    .data(r || {})
    .run()
BatchUpdateTaskStatus.url = '/ceres/production/ProductionService/BatchUpdateTaskStatus'
export const UpdateTaskOutput = (r?: UpdateTaskOutputRequest, codes?: number[]) =>
  Request<UpdateTaskOutputResponse>('/ceres/production/ProductionService/UpdateTaskOutput')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateTaskOutput.url = '/ceres/production/ProductionService/UpdateTaskOutput'
export const ListTaskBatch = (r?: ListTaskBatchRequest, codes?: number[]) =>
  Request<ListTaskBatchResponse>('/ceres/production/ProductionService/ListTaskBatch')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskBatch.url = '/ceres/production/ProductionService/ListTaskBatch'
export const SplitTaskProcess = (r?: SplitTaskProcessRequest, codes?: number[]) =>
  Request<SplitTaskProcessResponse>('/ceres/production/ProductionService/SplitTaskProcess')
    .code([...(codes || [])])
    .data(r || {})
    .run()
SplitTaskProcess.url = '/ceres/production/ProductionService/SplitTaskProcess'
export const UpdateTaskProcess = (r?: UpdateTaskProcessRequest, codes?: number[]) =>
  Request<UpdateTaskProcessResponse>('/ceres/production/ProductionService/UpdateTaskProcess')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateTaskProcess.url = '/ceres/production/ProductionService/UpdateTaskProcess'
export const GetTaskProcess = (r?: GetTaskProcessRequest, codes?: number[]) =>
  Request<GetTaskProcessResponse>('/ceres/production/ProductionService/GetTaskProcess')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetTaskProcess.url = '/ceres/production/ProductionService/GetTaskProcess'
export const UpdateTaskInput = (r?: UpdateTaskInputRequest, codes?: number[]) =>
  Request<UpdateTaskInputResponse>('/ceres/production/ProductionService/UpdateTaskInput')
    .code([...(codes || [])])
    .data(r || {})
    .run()
UpdateTaskInput.url = '/ceres/production/ProductionService/UpdateTaskInput'
export const ListTaskOutput = (r?: ListTaskOutputRequest, codes?: number[]) =>
  Request<ListTaskOutputResponse>('/ceres/production/ProductionService/ListTaskOutput')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskOutput.url = '/ceres/production/ProductionService/ListTaskOutput'
export const SubmitTaskOutput = (r?: SubmitTaskOutputRequest, codes?: number[]) =>
  Request<SubmitTaskOutputResponse>('/ceres/production/ProductionService/SubmitTaskOutput')
    .code([...(codes || [])])
    .data(r || {})
    .run()
SubmitTaskOutput.url = '/ceres/production/ProductionService/SubmitTaskOutput'
export const CreateTaskWeight = (r?: CreateTaskWeightRequest, codes?: number[]) =>
  Request<CreateTaskWeightResponse>('/ceres/production/ProductionService/CreateTaskWeight')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateTaskWeight.url = '/ceres/production/ProductionService/CreateTaskWeight'
export const GetTaskWeight = (r?: GetTaskWeightRequest, codes?: number[]) =>
  Request<GetTaskWeightResponse>('/ceres/production/ProductionService/GetTaskWeight')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetTaskWeight.url = '/ceres/production/ProductionService/GetTaskWeight'
export const DeleteTaskWeight = (r?: DeleteTaskWeightRequest, codes?: number[]) =>
  Request<DeleteTaskWeightResponse>('/ceres/production/ProductionService/DeleteTaskWeight')
    .code([...(codes || [])])
    .data(r || {})
    .run()
DeleteTaskWeight.url = '/ceres/production/ProductionService/DeleteTaskWeight'
export const ListTaskWeight = (r?: ListTaskWeightRequest, codes?: number[]) =>
  Request<ListTaskWeightResponse>('/ceres/production/ProductionService/ListTaskWeight')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskWeight.url = '/ceres/production/ProductionService/ListTaskWeight'
export const BatchCreateTaskWeight = (r?: BatchCreateTaskWeightRequest, codes?: number[]) =>
  Request<BatchCreateTaskWeightResponse>('/ceres/production/ProductionService/BatchCreateTaskWeight')
    .code([...(codes || [])])
    .data(r || {})
    .run()
BatchCreateTaskWeight.url = '/ceres/production/ProductionService/BatchCreateTaskWeight'
export const SubmitTaskWeight = (r?: SubmitTaskWeightRequest, codes?: number[]) =>
  Request<SubmitTaskWeightResponse>('/ceres/production/ProductionService/SubmitTaskWeight')
    .code([...(codes || [])])
    .data(r || {})
    .run()
SubmitTaskWeight.url = '/ceres/production/ProductionService/SubmitTaskWeight'
export const CreateTaskPrintSheetCode = (r?: CreateTaskPrintSheetCodeRequest, codes?: number[]) =>
  Request<CreateTaskPrintSheetCodeResponse>('/ceres/production/ProductionService/CreateTaskPrintSheetCode')
    .code([...(codes || [])])
    .data(r || {})
    .run()
CreateTaskPrintSheetCode.url = '/ceres/production/ProductionService/CreateTaskPrintSheetCode'
export const GetTaskProductSheet = (r?: GetTaskProductSheetRequest, codes?: number[]) =>
  Request<GetTaskProductSheetResponse>('/ceres/production/ProductionService/GetTaskProductSheet')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetTaskProductSheet.url = '/ceres/production/ProductionService/GetTaskProductSheet'
export const GetTaskMaterialSheet = (r?: GetTaskMaterialSheetRequest, codes?: number[]) =>
  Request<GetTaskMaterialSheetResponse>('/ceres/production/ProductionService/GetTaskMaterialSheet')
    .code([...(codes || [])])
    .data(r || {})
    .run()
GetTaskMaterialSheet.url = '/ceres/production/ProductionService/GetTaskMaterialSheet'
export const ListTaskProductSheetByTask = (r?: ListTaskProductSheetByTaskRequest, codes?: number[]) =>
  Request<ListTaskProductSheetByTaskResponse>('/ceres/production/ProductionService/ListTaskProductSheetByTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskProductSheetByTask.url = '/ceres/production/ProductionService/ListTaskProductSheetByTask'
export const ListTaskProductSheetByProcess = (r?: ListTaskProductSheetByProcessRequest, codes?: number[]) =>
  Request<ListTaskProductSheetByProcessResponse>('/ceres/production/ProductionService/ListTaskProductSheetByProcess')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskProductSheetByProcess.url = '/ceres/production/ProductionService/ListTaskProductSheetByProcess'
export const ListTaskProductSheetByProcessor = (r?: ListTaskProductSheetByProcessorRequest, codes?: number[]) =>
  Request<ListTaskProductSheetByProcessorResponse>('/ceres/production/ProductionService/ListTaskProductSheetByProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskProductSheetByProcessor.url = '/ceres/production/ProductionService/ListTaskProductSheetByProcessor'
export const ListTaskMaterialSheetByTask = (r?: ListTaskMaterialSheetByTaskRequest, codes?: number[]) =>
  Request<ListTaskMaterialSheetByTaskResponse>('/ceres/production/ProductionService/ListTaskMaterialSheetByTask')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskMaterialSheetByTask.url = '/ceres/production/ProductionService/ListTaskMaterialSheetByTask'
export const ListTaskMaterialSheetByProcessor = (r?: ListTaskMaterialSheetByProcessorRequest, codes?: number[]) =>
  Request<ListTaskMaterialSheetByProcessorResponse>('/ceres/production/ProductionService/ListTaskMaterialSheetByProcessor')
    .code([...(codes || [])])
    .data(r || {})
    .run()
ListTaskMaterialSheetByProcessor.url = '/ceres/production/ProductionService/ListTaskMaterialSheetByProcessor'

