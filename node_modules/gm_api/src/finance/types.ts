import * as enterprise from '../enterprise'
import * as account from '../account'
import * as common from '../common'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as order from '../order'
import * as merchandise from '../merchandise'
import * as asynctask from '../asynctask'
import * as oauth from '../oauth'
import * as inventory from '../inventory'
import * as preference from '../preference'
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  CODE_DIFFERENT_SUBJECT = 2025001,
  CODE_NOW_ALLOW_OPERATE = 2025002,
  CODE_NOT_ENOUGH_BALANCE = 2025003,
  CODE_FAILED_CHECK_STOCK_SHEET = 2025004,
  CODE_ONLY_ALLOW_APPROVED = 2025005,
  CODE_DATA_EXPIRE = 2025006,
  CODE_OPERATE_BY_OTHER = 2025007,
  CODE_ITEM_JOIN_SHEET = 2025008,
  CODE_NOT_PRODUCT_IN_REFUND_OUT = 2025009,
  CODE_MANY_SETTLE_AMOUNT = 2025010,
  CODE_ONLY_NOT_PAID = 2025011,
  CODE_SHEET_NOT_NOT_ALLOW_PAY = 2025012,
  CODE_SHEET_SETTLE_AMOUNT_LT_ZERO = 2025013,
  CODE_ARRIVAL_SERIAL_NO_USED = 2025014,
}
export interface Status_SheetJoinedDetail {
  item_serial_no?: string
}
export interface Status {
}
export enum AccountType {
  ACCOUNT_TYPE_UNSPECIFIED = 0,
  ACCOUNT_TYPE_SUPPLIER = 1,
  ACCOUNT_TYPE_CUSTOMER = 2,
}
export enum TimeType {
  TIME_TYPE_UNSPECIFIED = 0,
  TIME_TYPE_CREATE_TIME = 1,
}
export enum SettleSheet_SheetStatus {
  SHEET_STATUS_UNSPECIFIED = 0,
  SHEET_STATUS_NOT_SUBMITTED = 1,
  SHEET_STATUS_SUBMITTED_NOT_PAID = 2,
  SHEET_STATUS_PAID = 3,
  SHEET_STATUS_PART_PAID = 4,
  SHEET_STATUS_NOT_APPROVED = 5,
  SHEET_STATUS_DELETED = 6,
}
export enum SettleSheet_AmountDiscount_DiscountReason {
  DISCOUNT_REASON_UNSPECIFIED = 0,
  DISCOUNT_REASON_REMOVE_ZERO = 1,
  DISCOUNT_REASON_CAL_ERROR = 2,
  DISCOUNT_REASON_ALLOWANCE = 3,
  DISCOUNT_REASON_FINE = 4,
  DISCOUNT_REASON_OTHER = 5,
}
export enum SettleSheet_AmountDiscount_DiscountType {
  DISCOUNT_TYPE_UNSPECIFIED = 0,
  DISCOUNT_TYPE_ADD_AMOUNT = 1,
  DISCOUNT_TYPE_DELTA_AMOUNT = 2,
}
export interface SettleSheet_AmountDiscount {
  create_time?: string
  creator_id?: string
  discount_reason?: SettleSheet_AmountDiscount_DiscountReason
  discount_type: SettleSheet_AmountDiscount_DiscountType
  discount_amount?: string
  remark?: string
}
export interface SettleSheet_AmountDiscounts {
  amount_discounts?: SettleSheet_AmountDiscount[]
}
export interface SettleSheet_Uint64Slice {
  item_ids?: string[]
}
export interface SettleSheet {
  settle_sheet_id: string
  rversion?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  settle_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  settle_sheet_serial_no?: string
  target_id?: string
  account_type?: AccountType
  credit_type?: enterprise.CreditType
  total_price?: string
  delta_amount?: string
  should_amount?: string
  actual_amount?: string
  need_amount?: string
  sheet_status?: SettleSheet_SheetStatus
  abstract?: string
  amount_discounts?: SettleSheet_AmountDiscounts
  item_ids?: SettleSheet_Uint64Slice
}
export interface ReqCreateSettleSheet {
  // settle_sheet_id: string
  rversion?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  settle_time?: string
  // group_id?: string
  station_id?: string
  creator_id?: string
  settle_sheet_serial_no?: string
  target_id?: string
  account_type?: AccountType
  credit_type?: enterprise.CreditType
  total_price?: string
  delta_amount?: string
  should_amount?: string
  actual_amount?: string
  need_amount?: string
  sheet_status?: SettleSheet_SheetStatus
  abstract?: string
  amount_discounts?: SettleSheet_AmountDiscounts
  item_ids?: SettleSheet_Uint64Slice
}
export interface SettleSheetSlice {
  arrival_serial_no?: string
  settle_sheets?: SettleSheet[]
}
export interface AccountBalance {
  account_balance_id: string
  create_time?: string
  update_time?: string
  group_id?: string
  station_id?: string
  account_type?: AccountType
  target_id?: string
  balance?: string
  rversion?: string
  serial_no?: string
}
export enum TransactionFlow_ChangeType {
  CHANGE_TYPE_UNSPECIFIED = 0,
  CHANGE_TYPE_RECHARGE = 1,
  CHANGE_TYPE_REFUND = 2,
  CHANGE_TYPE_SETTLE = 3,
  CHANGE_TYPE_DEDUCTION = 4,
}
export interface TransactionFlow {
  transaction_flow_id: string
  create_time?: string
  delete_time?: string
  group_id?: string
  creator_id?: string
  target_id?: string
  settle_sheet_id?: string
  item_id?: string
  change_amount?: string
  change_type?: TransactionFlow_ChangeType
  remark?: string
  change_before_amount?: string
  change_after_amount?: string
  arrival_serial_no?: string
  settle_sheet_serial_no?: string
  used?: boolean
}
export interface ListSettleSheetRequest {
  time_type?: TimeType
  begin_time: string
  end_time: string
  target_id?: string
  sheet_status?: SettleSheet_SheetStatus[]
  account_type: AccountType
  credit_type?: enterprise.CreditType
  stock_sheet_list_query?: inventory.ListStockSheetRequest
  order_list_query?: order.ListOrderRequest
  paging: common.PagingParams
}
export interface ListSettleSheetResponse {
  settle_sheets: SettleSheet[]
  relation_supplier_info?: { [key: string]: enterprise.Supplier }
  relation_customer_info?: { [key: string]: enterprise.Customer }
  paging: common.PagingResult
}
export interface GetManySettleSheetRequest {
  settle_sheet_ids?: string[]
}
export interface GetManySettleSheetResponse {
  settle_sheets: SettleSheet[]
}
export interface GetSettleSheetDetailRequest {
  settle_sheet_id?: string
}
export interface GetSettleSheetDetailResponse {
  settle_sheet?: SettleSheet
  transaction_flows?: TransactionFlow[]
  supplier?: enterprise.Supplier
  customer?: enterprise.Customer
  stock_sheets?: inventory.StockSheet[]
  orders?: order.Order[]
  relation_group_users?: { [key: string]: enterprise.GroupUser }
  relation_customer?: { [key: string]: enterprise.Customer }
}
export enum CreateSettleSheetRequest_OperateType {
  OPERATE_TYPE_UNSPECIFIED = 0,
  OPERATE_TYPE_JOIN_SHEET = 1,
  OPERATE_TYPE_CREATE_SHEET = 2,
}
export interface CreateSettleSheetRequest {
  operate_type: CreateSettleSheetRequest_OperateType
  join_settle_sheet?: ReqCreateSettleSheet
  account_type: AccountType
  item_ids?: string[]
  stock_sheet_list_query?: inventory.ListStockSheetRequest
  order_list_query?: order.ListOrderRequest
}
export interface CreateSettleSheetResponse {
  settle_sheet: SettleSheet
}
export interface PaySettleRequest {
  settle_sheet?: SettleSheet
  account_balance?: AccountBalance
  transaction_flow?: TransactionFlow
  account_type: AccountType
  settle_amount?: string
  recharge_amount?: string
  arrival_serial_no?: string
  remark?: string
  batch_op?: boolean
  batch_op_index?: string
}
export interface PaySettleResponse {
  transaction_flow?: TransactionFlow
  settle_sheet?: SettleSheet
  actual_paid?: string
  need_paid?: string
}
export interface BatchPaySettleRequest {
  settle_sheet_ids?: string[]
  time_type?: TimeType
  begin_time?: string
  end_time?: string
  target_id?: string
  sheet_status?: SettleSheet_SheetStatus[]
  account_type: AccountType
  arrival_serial_no: string
  credit_type?: enterprise.CreditType
}
export interface BatchPaySettleResponse {
  task?: asynctask.Task
}
export interface UpdateSettleSheetRequest {
  settle_sheet?: SettleSheet
  new_sheet_status: SettleSheet_SheetStatus
  transaction_flow?: TransactionFlow
}
export interface UpdateSettleSheetResponse {
  settle_sheet: SettleSheet
}
export interface ListAccountBalanceRequest {
  target_id?: string
  balance_zero?: boolean
  paging: common.PagingParams
}
export interface ListAccountBalanceResponse {
  account_balances: AccountBalance[]
  relation_customer_info?: { [key: string]: enterprise.Customer }
  paging: common.PagingResult
}
export interface UpdateAccountBalanceRequest {
  account_balance?: AccountBalance
  flow_code?: string
  change_amount?: string
  remark?: string
  change_type: TransactionFlow_ChangeType
  arrival_serial_no?: string
}
export interface UpdateAccountBalanceResponse {
  account_balance: AccountBalance
}
export interface ListTransactionFlowRequest {
  time_type?: TimeType
  begin_time?: string
  end_time?: string
  target_id?: string
  settle_sheet_id?: string
  paging: common.PagingParams
}
export interface ListTransactionFlowResponse {
  transaction_flows: TransactionFlow[]
  relation_groupuser_info?: { [key: string]: enterprise.GroupUser }
  paging: common.PagingResult
}
export interface ExportSettleSheetRequest {
  begin_time?: string
  end_time?: string
  target_id?: string
  sheet_status?: SettleSheet_SheetStatus[]
  account_type: AccountType
  time_type?: TimeType
  credit_type?: enterprise.CreditType
}
export interface ExportSettleSheetResponse {
  task?: asynctask.Task
}
export interface ExportAccountBalanceRequest {
  target_id?: string
}
export interface ExportAccountBalanceResponse {
  task?: asynctask.Task
}
export interface ExportFlowRequest {
  target_id?: string
  begin_time?: string
  end_time?: string
  time_type?: TimeType
}
export interface ExportFlowResponse {
  task?: asynctask.Task
}
export interface BatchSubmitSettleSheetRequest {
  settle_sheet_ids?: string[]
  time_type?: TimeType
  begin_time?: string
  end_time?: string
  target_id?: string
  sheet_status?: SettleSheet_SheetStatus[]
  account_type: AccountType
  credit_type?: enterprise.CreditType
}
export interface BatchSubmitSettleSheetResponse {
  task?: asynctask.Task
}