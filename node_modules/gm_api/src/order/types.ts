import * as common from '../common'
import * as enterprise from '../enterprise'
import * as account from '../account'
import * as dao from '../dao'
import * as idgenerator from '../idgenerator'
import * as merchandise from '../merchandise'
import * as asynctask from '../asynctask'
import * as oauth from '../oauth'
import * as inventory from '../inventory'
import * as preference from '../preference'
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  CODE_FAILURE_VERSION = 20480001,
  CODE_CALCULATE_ERROR_UNIT = 20480002,
  CODE_CLOSED_ORDER = 20480003,
  CODE_DELETED_ORDER = 20480004,
  CODE_ERROR_STATE_ORDER = 20480005,
  CODE_ERROR_PAYSTATE_ORDER = 20480006,
  CODE_ERROR_TIME_ZONE = 20480007,
  CODE_ERROR_RECEIVE_TIME = 20480008,
  CODE_NO_ORDER_DETAIL = 20480009,
  CODE_NOT_REVIEWED_CUSTOMER = 20480010,
  CODE_IS_FROZEN_CUSTOMER = 20480011,
  CODE_ORDER_DUPLICATE_MENU_SSU = 20480013,
  CODE_OVER_LIMIT_SKU_QUANTITY = 20480014,
  CODE_ERROR_SSU_PRICE = 20480015,
  CODE_NO_ORDER = 20480016,
  CODE_CANNOT_ORDER_CUSTOMER = 20480017,
  CODE_DOWNSSU = 20480018,
  CODE_ERROR_INVENTORY_SSU = 20480019,
  CODE_NOT_FOUND_UNIT = 20480020,
  CODE_ERROR_SSU = 20480021,
  CODE_LEAST_SSU = 20480022,
  CODE_DEBT_CUSTOMER = 20480023,
  CODE_NO_RELATION_CUSTOMER_AND_MENU = 20480024,
  CODE_NO_RELATION_MENU_AND_SSU = 20480025,
  CODE_NO_RELATION_CUSTOMER_AND_SERVICEPERIOD = 20480027,
  CODE_NO_RELATION_CUSTOMER_AND_MENUPERIOD = 20480028,
  CODE_NOT_STUDENT_SCHOOLSTAFF_TYPE = 20480029,
  CODE_ERROR_CUSTOMER_TYPE = 20480030,
  CODE_IS_PRODUCTED_ORDER = 20480031,
  CODE_JOINED_SETTLE_SHEET = 20480032,
}
export interface Status_DownssuDetail {
  down_ssus?: OrderDetail[]
}
export interface Status_ErrorInventorySsuDetail {
  error_inventory_ssus?: inventory.CheckSkuUnit[]
}
export interface Status_NotFoundUnitDetail {
  not_found_units?: OrderDetail[]
}
export interface Status_ErrorSsuDetail {
  error_ssus?: OrderDetail[]
}
export interface Status_LeastSsuDetail {
  least_ssus?: merchandise.Ssu[]
}
export interface Status_DebtCustomerDetail {
  debt?: string
}
export interface Status_NoRelationMenuAndSsuDetail {
  ssus?: OrderDetail[]
}
export interface Status_ErrorSsuPriceDetail {
  ssus?: OrderDetail[]
}
export interface Status {
}
export enum Order_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_DELICATESSEN = 1,
  TYPE_PRODUCT_FROM_DELICATESSEN = 2,
  TYPE_PRODUCT = 3,
  TYPE_PRODUCT_FROM_STATION = 4,
}
export enum Order_State {
  STATE_UNSPECIFIED = 0,
  STATE_WAITING_SORT = 1,
  STATE_SORTING = 2,
  STATE_DELIVERYING = 3,
  STATE_RECEIVABLE = 4,
  STATE_NOT_PRODUCE = 5,
  STATE_PRODUCED = 6,
  STATE_DELETE = 1024,
}
export enum Order_PayState {
  PAYSTATE_UNSPECIFIED = 0,
  PAYSTATE_NOTPAY = 1,
  PAYSTATE_PARTPAY = 2,
  PAYSTATE_PAID = 3,
  PAYSTATE_REFUND = 4,
  PAYSTATE_CLOSED = 5,
}
export interface Order_SortingInfo {
  total_count?: number
  weight_count?: number
  out_stock_count?: number
  unweight_count?: number
}
export interface Order_Address {
  addresses?: enterprise.Address[]
}
export interface Order_OrderDetails {
  order_details?: OrderDetail[]
}
export interface Order_DeliveryInfo {
  images?: common.Image[]
}
export enum Order_UserType {
  USERTYPE_UNSPECIFIED = 0,
  USERTYPE_CUSTOMER_USER = 1,
  USERTYPE_GROUP_USER = 2,
}
export enum Order_OrderOp {
  ORDEROP_UNSPECIFIED = 0,
  ORDER_NORMAL = 1,
  ORDER_AMEND = 2,
}
export enum Order_Status {
  STATUS_UNSPECIFIED = 0,
  STATUS_IS_FREEZE = 256,
  STATUS_IS_PRINT = 512,
  STATUS_IS_CREATE_STOCK_SHEET = 1024,
  STATUS_SORTING_IS_FINISH = 2048,
  STATUS_IS_SIGNED = 4096,
}
export interface Order {
  order_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_id?: string
  bill_customer_id: string
  receive_customer_id: string
  driver_id?: string
  service_period_id?: string
  quotation_id?: string
  customer_type?: enterprise.Customer_Type
  addresses: Order_Address
  service_period: enterprise.ServicePeriod
  menu_id?: string
  menu_period_group_id?: string
  updater_id?: string
  order_price?: string
  freight_price?: string
  aftersale_price?: string
  outstock_price?: string
  coupon_price?: string
  manual_adjust_price?: string
  sale_price?: string
  paid_amount?: string
  refund_amount?: string
  actual_amount?: string
  receive_time: string
  outstock_time?: string
  order_time?: string
  received_time?: string
  time_zone?: string
  serial_no?: string
  state?: Order_State
  pay_state?: Order_PayState
  has_after_sale?: boolean
  sorting_remark?: string
  sorting_num?: string
  delivery_info?: Order_DeliveryInfo
  order_type?: Order_Type
  creator_id_type?: Order_UserType
  remark?: string
  app_type?: common.App_Type
  sorting_info?: Order_SortingInfo
  order_op?: Order_OrderOp
  updater_id_type?: Order_UserType
  return_refund_amount?: string
  only_refund_amount?: string
  order_exception_amount?: string
  settle_sheet_id?: string
  city_id?: string
  district_id?: string
  street_id?: string
  customer_id_l1?: string
  customer_id_l2?: string
  customer_id_l3?: string
  customer_id_l4?: string
  customer_id_l5?: string
  order_details?: Order_OrderDetails
}
export interface ReqCreateOrder {
  // order_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  creator_id?: string
  bill_customer_id: string
  receive_customer_id: string
  driver_id?: string
  service_period_id?: string
  quotation_id?: string
  customer_type?: enterprise.Customer_Type
  addresses: Order_Address
  service_period: enterprise.ServicePeriod
  menu_id?: string
  menu_period_group_id?: string
  updater_id?: string
  order_price?: string
  freight_price?: string
  aftersale_price?: string
  outstock_price?: string
  coupon_price?: string
  manual_adjust_price?: string
  sale_price?: string
  paid_amount?: string
  refund_amount?: string
  actual_amount?: string
  receive_time: string
  outstock_time?: string
  order_time?: string
  received_time?: string
  time_zone?: string
  serial_no?: string
  state?: Order_State
  pay_state?: Order_PayState
  has_after_sale?: boolean
  sorting_remark?: string
  sorting_num?: string
  delivery_info?: Order_DeliveryInfo
  order_type?: Order_Type
  creator_id_type?: Order_UserType
  remark?: string
  app_type?: common.App_Type
  sorting_info?: Order_SortingInfo
  order_op?: Order_OrderOp
  updater_id_type?: Order_UserType
  return_refund_amount?: string
  only_refund_amount?: string
  order_exception_amount?: string
  settle_sheet_id?: string
  city_id?: string
  district_id?: string
  street_id?: string
  customer_id_l1?: string
  customer_id_l2?: string
  customer_id_l3?: string
  customer_id_l4?: string
  customer_id_l5?: string
  order_details?: Order_OrderDetails
}
export enum SortingStatus {
  SORTINGSTATUS_UNSPECIFIED = 0,
  SORTINGSTATUS_UNWEIGHT = 1,
  SORTINGSTATUS_WEIGHTED = 2,
  SORTINGSTATUS_OUTOFSTOCK = 3,
}
export enum OrderDetail_Sync {
  SYNC_UNSPECIFIED = 0,
  SYNC_PURCHASE = 1,
  SYNC_PRODUCTION = 2,
}
export enum OrderDetail_Status {
  STATUS_UNSPECIFIED = 0,
  STATUS_IS_CREATE_PURCHASE_TASK = 256,
  STATUS_IS_CREATE_PRODUCTION_TASK = 512,
  STATUS_SORTING_TASK_IS_PRINT = 1024,
  STATUS_SORTING_TASK_PART_SORT = 2048,
}
export interface OrderDetail_Units {
  unit_lists?: merchandise.Unit[]
}
export interface OrderDetail_OrderRelations_Relation {
  order_id?: string
  order_detail_id?: string
}
export interface OrderDetail_OrderRelations {
  relations?: OrderDetail_OrderRelations_Relation[]
}
export enum OrderDetail_State {
  STATE_UNSPECIFIED = 0,
  STATE_DELETE = 1024,
}
export interface OrderDetail {
  order_detail_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  order_id?: string
  sku_id?: string
  bom_id?: string
  bom_revision?: string
  sorting_operater_id?: string
  station_id?: string
  ssu: merchandise.Ssu
  order_unit_value: merchandise.UnitValueSet
  outstock_unit_value?: merchandise.UnitValueSet
  sorting_quantity?: merchandise.UnitValueSet
  order_price?: string
  aftersale_price?: string
  outstock_price?: string
  manual_adjust_price?: string
  sale_price?: string
  up_relation?: OrderDetail_OrderRelations
  down_relation?: OrderDetail_OrderRelations
  unit_cal_info?: OrderDetail_Units
  remark?: string
  ssu_id?: string
  sorting_status?: SortingStatus
  sorting_version?: string
  address_num?: string
  sort_num: string
  sync_flag?: OrderDetail_Sync
  ssu_is_weight?: boolean
  ssu_is_current_price?: boolean
  sku_is_process?: boolean
  state?: OrderDetail_State
  return_refund_value?: merchandise.UnitValueSet
  just_refund_value?: merchandise.UnitValueSet
}
export interface OrderSkuCache {
  service_period_id?: string
  receive_begin_date?: string
  order_date?: string
  unweight_skus?: merchandise.Sku[]
  weight_skus?: merchandise.Sku[]
}
export interface ReqCreateOrderSkuCache {
  service_period_id?: string
  receive_begin_date?: string
  order_date?: string
  unweight_skus?: merchandise.Sku[]
  weight_skus?: merchandise.Sku[]
}
export interface SortingNumCounter_Counter {
  normal_counter?: number
  route_counter?: { [key: string]: number }
}
export interface SortingNumCounter {
  group_id?: string
  station_id?: string
  service_period_id?: string
  order_date?: string
  counter?: SortingNumCounter_Counter
  update_time?: string
  create_time?: string
  delete_time?: string
  counter_id: string
}
export interface OrderRelationInfoRequest {
  need_customer_info?: boolean
  need_quotation_info?: boolean
  need_sku_info?: boolean
  need_driver_info?: boolean
  need_user_info?: boolean
  need_sales_group_user_info?: boolean
}
export interface OrderRelationInfoResponse {
  customers?: { [key: string]: enterprise.Customer }
  quotations?: { [key: string]: merchandise.Quotation }
  skus?: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
  group_users?: { [key: string]: enterprise.GroupUser }
  customer_users?: { [key: string]: enterprise.CustomerUser }
  customer_label_relation?: { [key: string]: common.Uint64Set }
  customer_label?: { [key: string]: enterprise.CustomerLabel }
}
export interface GetOrderRequest {
  order_id?: string
  serial_no?: string
  relation_info?: OrderRelationInfoRequest
  need_delete_order?: boolean
}
export interface GetOrderResponse {
  order: Order
  relation_info?: OrderRelationInfoResponse
}
export interface CommonListOrder {
  serial_nos?: string[]
  order_receive_from_time?: string
  order_receive_to_time?: string
  station_ids?: string[]
  bill_customer_ids?: string[]
  receive_customer_ids?: string[]
  states?: Order_State[]
  pay_states?: Order_PayState[]
  order_time_from_time?: string
  order_time_to_time?: string
  quotation_ids?: string[]
  app_types?: string[]
  is_out_stock?: common.Filters_Bool
  driver_ids?: string[]
  service_period_id?: string
  sorting_remark?: string
  is_remark?: common.Filters_Bool
  order_ids?: string[]
  customer_search_text?: string
  order_op?: string[]
  is_print?: common.Filters_Bool
  is_create_stock_sheet?: common.Filters_Bool
  sorting_task_is_finish?: common.Filters_Bool
  menu_period_group_ids?: string[]
  menu_ids?: string[]
  is_freeze?: common.Filters_Bool
  customer_ids_l1?: string[]
  is_scan_receipt?: common.Filters_Bool
}
export enum ListOrderRequest_PagingField {
  UNSPECIFIED = 0,
  STATE = 1,
  ORDER_TIME = 2,
  RECEIVE_TIME = 3,
}
export interface ListOrderRequest {
  common_list_order: CommonListOrder
  relation_info?: OrderRelationInfoRequest
  need_total_info?: boolean
  need_sorting_count_info?: boolean
  need_delete_order?: boolean
  need_not_settle?: boolean
  paging: common.PagingParams
  sort_by?: common.SortBy[]
}
export interface ListOrderResponse {
  orders: Order[]
  relation_info?: OrderRelationInfoResponse
  total_order_price?: string
  total_outstock_price?: string
  sorting_finish_count?: number
  sorting_unfinish_count?: number
  total_sale_price?: string
  total_actual_amount?: string
  paging: common.PagingResult
}
export interface GetManyOrderRequest {
  order_ids?: string[]
}
export interface GetManyOrderResponse {
  orders: { [key: string]: Order }
}
export interface ListOrderDetailRequest {
  common_list_order: CommonListOrder
  relation_info?: OrderRelationInfoRequest
  category_ids_1?: string[]
  category_ids_2?: string[]
  spu_ids?: string[]
  ssu_is_weight?: common.Filters_Bool
  sorting_status?: SortingStatus[]
  sku_ids?: string[]
  ssu_ids?: merchandise.SsuId[]
  detail_ids?: string[]
  is_create_purchase_task?: common.Filters_Bool
  is_create_production_task?: common.Filters_Bool
  sku_is_process?: common.Filters_Bool
  ssu_q?: string
  paging: common.PagingParams
}
export interface DetailList {
  detail?: OrderDetail
  order?: Order
}
export interface ListOrderDetailResponse {
  details?: DetailList[]
  relation_info?: OrderRelationInfoResponse
  paging: common.PagingResult
}
export interface ListOrderDetailGroupBySsuRequest {
  filter?: ListOrderDetailRequest
  all?: boolean
  relation_info?: OrderRelationInfoRequest
}
export interface ListOrderDetailGroupBySsuResponse_Ssu {
  ssu?: merchandise.Ssu
  orders?: Order[]
}
export interface ListOrderDetailGroupBySsuResponse {
  ssu_data?: ListOrderDetailGroupBySsuResponse_Ssu[]
  relation_info?: OrderRelationInfoResponse
}
export interface ListOrderAfterSaleRequest {
  common_list_order: CommonListOrder
  relation_info?: OrderRelationInfoRequest
  category_ids_1?: string[]
  category_ids_2?: string[]
  spu_ids?: string[]
  sku_ids?: string[]
  ssu_ids?: merchandise.SsuId[]
  paging: common.PagingParams
}
export interface ListOrderAfterSaleResponse {
  detail?: DetailList[]
  relation_info?: OrderRelationInfoResponse
  paging: common.PagingResult
}
export interface CreateOrderRequest {
  order?: ReqCreateOrder
  time_zone: string
}
export interface CreateOrderResponse {
  order: Order
}
export interface BatchCreateOrderRequest {
  orders?: Order[]
  time_zone: string
}
export interface BatchCreateOrderResponse {
  orders?: Order[]
}
export interface UpdateOrderRequest {
  order?: Order
  change_version?: boolean
}
export interface UpdateOrderResponse {
  order: Order
}
export interface DeleteOrderRequest {
  serial_no?: string
  revision?: string
}
export interface DeleteOrderResponse {
  serial_no?: string
}
export interface GetOrderDetailRequest {
  serial_no?: string
  relation_info?: OrderRelationInfoRequest
}
export interface GetOrderDetailResponse {
  detail?: DetailList[]
  relation_info?: OrderRelationInfoResponse
}
export interface UpdateOrderDetailRequest {
  order?: Order
}
export interface UpdateOrderDetailResponse {
  order?: Order
}
export interface UpdateOrderDetailByOrderDetailRequest {
  order_detail: OrderDetail
}
export interface UpdateOrderDetailByOrderDetailResponse {
  order?: Order
}
export interface DeleteOrderDetailRequest {
  order_id?: string
  order_detail_id?: string
}
export interface DeleteOrderDetailResponse {
  order?: Order
}
export interface UpdateOrderDetailPartFieldRequest_OrderIdDetailId {
  order_id?: string
  order_detail_id?: string
}
export interface UpdateOrderDetailPartFieldRequest {
  order_id_detail_id?: UpdateOrderDetailPartFieldRequest_OrderIdDetailId[]
  status_is_create_purchase_task?: boolean
  status_is_create_production_task?: boolean
}
export interface UpdateOrderDetailPartFieldResponse {
}
export interface UpdateOrderPartFieldRequest {
  order_ids?: string[]
  status_is_print?: boolean
}
export interface UpdateOrderPartFieldResponse {
}
export interface UpdateOrderSortingDetailRequest {
  order?: Order
  change_sorting_version_detail_ids?: string[]
  change_outstock_uint_value_detail_ids?: string[]
}
export interface UpdateOrderSortingDetailResponse {
  order?: Order
}
export interface UpdateOrderAfterSaleRequest {
  order?: Order
}
export interface UpdateOrderAfterSaleResponse {
  order?: Order
}
export interface GetOrderSkuCacheKeyRequest {
  service_period_id?: string
  receive_begin_date?: string
  station_id?: string
}
export interface GetOrderSkuCacheKeyResponse {
  order_sku_cache_key?: string
}
export interface GetOrderSkuCacheRequest {
  order_sku_cache_key?: string
}
export interface GetOrderSkuCacheResponse {
  order_sku_cache: OrderSkuCache
}
export interface CreateOrderSkuCacheRequest {
  order_sku_cache_key?: string
  order_sku_cache?: ReqCreateOrderSkuCache
}
export interface CreateOrderSkuCacheResponse {
}
export interface DeleteOrderSkuCacheRequest {
  order_sku_cache_key?: string
}
export interface DeleteOrderSkuCacheResponse {
}
export interface GetEshopOrderRequest {
  serial_no?: string
  relation_info?: OrderRelationInfoRequest
  need_delete_order?: boolean
}
export interface GetEshopOrderResponse {
  order?: Order
  relation_info?: OrderRelationInfoResponse
}
export interface UpdateEshopOrderDetailRequest {
  order?: Order
}
export interface UpdateEshopOrderDetailResponse {
  order?: Order
}
export interface CreateEshopOrderRequest {
  order?: Order
  time_zone: string
}
export interface CreateEshopOrderResponse {
  order?: Order
}
export interface BatchCreateEshopOrderRequest {
  orders?: Order[]
  time_zone: string
}
export interface BatchCreateEshopOrderResponse {
  orders?: Order[]
}
export interface CreateOrderFromEshopRequest {
  order?: Order
  time_zone: string
}
export interface CreateOrderFromEshopResponse {
  order?: Order
}
export interface UpdateEshopOrderRequest {
  order?: Order
}
export interface UpdateEshopOrderResponse {
  order?: Order
}
export enum ListEshopOrderRequest_PagingField {
  UNSPECIFIED = 0,
  RECEIVE_TIME = 1,
  ORDER_TIME = 2,
}
export interface ListEshopOrderRequest {
  common_list_order: CommonListOrder
  student_name?: string
  teaching_staff_name?: string
  parents_name?: string
  school_ids?: string[]
  class_ids?: string[]
  relation_info?: OrderRelationInfoRequest
  customer_type?: enterprise.Customer_Type
  need_total_info?: boolean
  need_delete_order?: boolean
  paging: common.PagingParams
  sort_by?: common.SortBy[]
}
export interface ListEshopOrderResponse {
  orders?: Order[]
  relation_info?: OrderRelationInfoResponse
  total_order_price?: string
  total_outstock_price?: string
  paging: common.PagingResult
}
export interface CheckCustomerStatusRequest {
  customer_id?: string
  time_zone: string
}
export interface CheckCustomerStatusResponse {
  debt?: string
}
export interface SysSyncOrderRequest {
  sync_options?: common.SyncOptions
}
export interface SysSyncOrderResponse {
  orders?: Order[]
  has_more?: boolean
}
export interface SysSyncOrderDetailRequest {
  sync_options?: common.SyncOptions
}
export interface SysSyncOrderDetailResponse {
  order_details?: OrderDetail[]
  has_more?: boolean
}
export interface GetMergeOrderRequest {
  order: Order
}
export interface GetMergeOrderResponse {
  order: Order
}
export enum IdType {
  UNSPECIFIED = 0,
  CUSTOMER_ID = 1,
  QUOTATION_ID = 2,
  SKU_ID = 3,
  GROUP_USER_ID = 4,
  CUSTOMER_USER_ID = 5,
  DRIVER_ID = 6,
  BOM_SNAPSHOT_ID = 7,
  SALES_GROUP_USER_ID = 8,
  SERVICE_PERIOD_ID = 9,
}
export interface OrderCustomerLastUsedDriver {
  order_customer_last_used_driver_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  customer_id?: string
  driver_id?: string
}
export interface GetManyCustomerLastUsedDriverRequest {
  customer_ids?: string[]
}
export interface GetManyCustomerLastUsedDriverResponse {
  customer_last_used_drivers?: { [key: string]: OrderCustomerLastUsedDriver }
}
export interface UpdateCustomerLastUsedDriverRequest {
  customer_last_used_driver?: OrderCustomerLastUsedDriver
}
export interface UpdateCustomerLastUsedDriverResponse {
  customer_last_used_driver?: OrderCustomerLastUsedDriver
}
export interface UpdateOrderBySettleRequest {
  order?: Order
  change_version?: boolean
}
export interface UpdateOrderBySettleResponse {
  order?: Order
}