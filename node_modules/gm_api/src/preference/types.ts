import * as dao from '../dao'
import * as common from '../common'
import * as idgenerator from '../idgenerator'
import * as merchandise from '../merchandise'
import * as asynctask from '../asynctask'
import * as oauth from '../oauth'
import * as enterprise from '../enterprise'
import * as account from '../account'
export enum Status_Code {
  CODE_UNSPECIFIED = 0,
  INVENTORY_SETTINGS_DUPLICATE_SETTINGS = 20190001,
  DUPLICATE_PRINTING_TEMPLATE_NAME = 20190002,
  PRINTING_TEMPLATE_RELATION_DUPLICATE = 20190003,
}
export interface Status_DuplicatePrintingTemplateNameDetail {
  printing_template_id?: string
}
export interface Status_PrintingTemplateRelationDuplicateDetail_Detail {
  template_name?: string
  customer_name?: string
  sku_name?: string
}
export interface Status_PrintingTemplateRelationDuplicateDetail {
  details?: Status_PrintingTemplateRelationDuplicateDetail_Detail[]
}
export interface Status {
}
export interface PrintingTemplate_Attrs {
  layout?: string
}
export enum PrintingTemplate_Direction {
  DIRECTION_UNSPECIFIED = 0,
  DIRECTION_HORIZONTAL = 1,
  DIRECTION_VERTICAL = 2,
}
export enum PrintingTemplate_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_PURCHASE_TASK = 1,
  TYPE_INNER_LABEL = 2,
  TYPE_OUT_STOCK = 3,
  TYPE_IN_STOCK = 4,
  TYPE_SORTING = 5,
  TYPE_SETTLEMENT = 6,
  TYPE_DELIVERY = 7,
  TYPE_PURCHASE_SHEET = 8,
  TYPE_BOX = 9,
}
export interface PrintingTemplate {
  printing_template_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  creator_group_user_id?: string
  attrs?: PrintingTemplate_Attrs
  type: PrintingTemplate_Type
  name?: string
  paper_size?: string
  direction?: PrintingTemplate_Direction
  is_batch?: boolean
  is_default?: boolean
}
export interface ReqCreatePrintingTemplate {
  // printing_template_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  creator_group_user_id?: string
  attrs?: PrintingTemplate_Attrs
  type: PrintingTemplate_Type
  name?: string
  paper_size?: string
  direction?: PrintingTemplate_Direction
  is_batch?: boolean
  is_default?: boolean
}
export interface PrintingTemplateRelation {
  printing_template_relation_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  printing_template_id?: string
  customer_id?: string
  sku_id?: string
  template_type?: PrintingTemplate_Type
}
export interface ShopLayout_Banner {
  image: common.Image
  link?: string
}
export interface ShopLayout {
  banners?: ShopLayout_Banner[]
}
export interface ShopBanner_Banner {
  image?: common.Image
}
export interface ShopBanner {
  shop_banner_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  banner?: ShopBanner_Banner
}
export interface ReqCreateShopBanner {
  // shop_banner_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  banner?: ShopBanner_Banner
}
export enum Shop_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_SOCIAL = 1,
  TYPE_EDUCATION = 2,
}
export interface Shop_AbsenceRule {
  days?: number
  times: string
}
export interface Shop_Attrs {
  reference_images?: common.Image[]
}
export interface Shop {
  shop_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  layout?: ShopLayout
  type: Shop_Type
  name?: string
  customer_service_phone?: string
  logo?: common.Image
  enable_shop_announcement?: boolean
  shop_announcement?: string
  need_invitation_code?: boolean
  default_quotation_id?: string
  default_service_period_id?: string
  absence_rule?: Shop_AbsenceRule
  attrs?: Shop_Attrs
}
export interface ReqCreateShop {
  // shop_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id?: string
  station_id?: string
  layout?: ShopLayout
  type: Shop_Type
  name?: string
  customer_service_phone?: string
  logo?: common.Image
  enable_shop_announcement?: boolean
  shop_announcement?: string
  need_invitation_code?: boolean
  default_quotation_id?: string
  default_service_period_id?: string
  absence_rule?: Shop_AbsenceRule
  attrs?: Shop_Attrs
}
export enum Application_Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_WECHAT_MINI_PROGRAM = 1,
  TYPE_WECHAT_OFFICIAL_ACCOUNT = 2,
}
export interface Application_Attrs {
  wechat_mini_program?: Application_WechatMiniProgram
  wechat_official_account?: Application_WechatOfficialAccount
}
export interface Application_WechatMiniProgram {
  app_id?: string
  app_secret?: string
  mch_id?: string
}
export interface Application_WechatOfficialAccount {
  app_id?: string
  app_secret?: string
  mch_id?: string
}
export interface Application {
  application_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  shop_id?: string
  type?: Application_Type
  key?: string
  attrs?: Application_Attrs
}
export enum PurchaseSettings_PurchaseTaskPlanValueCalulateMethod {
  UNSPECIFIED = 0,
  SUGGEST_VALUE = 1,
  REQUEST_VALUE = 2,
}
export interface PurchaseSettings {
  purchase_settings_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id: string
  station_id: string
  purchase_task_plan_value_calculate_method: PurchaseSettings_PurchaseTaskPlanValueCalulateMethod
}
export interface ReqCreatePurchaseSettings {
  // purchase_settings_id: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id: string
  station_id: string
  purchase_task_plan_value_calculate_method: PurchaseSettings_PurchaseTaskPlanValueCalulateMethod
}
export interface AppointTimePair {
  type?: AppointTimeSettings_Type
  req_time?: string
  rsp_time?: string
}
export enum AppointTimeSettings_Type {
  UNSPECIFIED = 0,
  NONPROCESSED_PURCHASE_TIME_BEFORE_ORDER_RECV = 1,
  PROCESSED_INGREDIENT_PURCHASE_TIME_BEFORE_ORDER_RECV = 2,
  PROCESSED_PRODUCE_TIME_BEFORE_ORDER_RECV = 3,
  PROCESSED_PACK_TIME_BEFORE_ORDER_RECV = 4,
  PURCHASE_TIME_BEFORE_PRODUCE = 5,
  PRODUCE_TIME_BEFORE_PACK = 6,
}
export interface AppointTimeSettings_Settings_SingleSetting {
  type: AppointTimeSettings_Type
  before_days: string
  absolute_time: string
}
export interface AppointTimeSettings_Settings {
  settings?: AppointTimeSettings_Settings_SingleSetting[]
}
export interface AppointTimeSettings {
  appoint_time_settings_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id: string
  station_id: string
  settings?: AppointTimeSettings_Settings
}
export enum PrecisionSettings_Type {
  UNSPECIFIED = 0,
  PURCHASE = 1,
}
export interface PrecisionSettings_Settings_SingleSetting {
  type: PrecisionSettings_Type
  precision?: number
}
export interface PrecisionSettings_Settings {
  settings?: PrecisionSettings_Settings_SingleSetting[]
}
export interface PrecisionSettings {
  precision_settings_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id: string
  station_id: string
  settings?: PrecisionSettings_Settings
}
export enum SortingSettings_SortingNumMethod {
  SORTINGNUM_METHOD_UNSPECIFIED = 0,
  SORTINGNUM_METHOD_ORDER = 1,
  SORTINGNUM_METHOD_ROUTE = 2,
}
export enum SortingSettings_SortingLockType {
  SORTINGLOCKTYPE_UNSPECIFIED = 0,
  SORTINGLOCKTYPE_DELIVERYING = 1,
  SORTINGLOCKTYPE_RECEIVABLE = 2,
}
export interface SortingSettings {
  sorting_settings_id: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id: string
  station_id: string
  sorting_lock?: SortingSettings_SortingLockType
  sorting_num_method?: SortingSettings_SortingNumMethod
}
export enum InventorySettings_InventoryMethod {
  INVENTORY_METHOD_UNSPECIFIED = 0,
  INVENTORY_METHOD_FIFO = 1,
  INVENTORY_METHOD_WEIGHTED_AVERAGE = 2,
}
export interface InventorySettings_AutoApproveSettings_InStockSheetAutoApprove {
  purchase_in?: boolean
  product_in?: boolean
  material_in?: boolean
  other_in?: boolean
}
export interface InventorySettings_AutoApproveSettings_OutStockSheetAutoApprove {
  sale_out?: boolean
  material_out?: boolean
  refund_out?: boolean
  other_out?: boolean
}
export interface InventorySettings_AutoApproveSettings_InventoryStockSheetAutoApprove {
  check?: boolean
}
export interface InventorySettings_AutoApproveSettings {
  in_stock?: InventorySettings_AutoApproveSettings_InStockSheetAutoApprove
  out_stock?: InventorySettings_AutoApproveSettings_OutStockSheetAutoApprove
  check_stock?: InventorySettings_AutoApproveSettings_InventoryStockSheetAutoApprove
}
export interface InventorySettings_AvailableStockSettings {
  plan_in_stock?: boolean
  in_transit_stock?: boolean
  frozen_stock?: boolean
}
export interface InventorySettings {
  inventory_settings_id: string
  status?: string
  revision?: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id: string
  station_id: string
  inventory_method: InventorySettings_InventoryMethod
  auto_approve_settings?: InventorySettings_AutoApproveSettings
  available_stock_settings?: InventorySettings_AvailableStockSettings
  allow_negative_stock?: boolean
}
export interface ReqCreateInventorySettings {
  // inventory_settings_id: string
  status?: string
  revision?: string
  // create_time?: string
  // update_time?: string
  // delete_time?: string
  // group_id: string
  station_id: string
  inventory_method: InventorySettings_InventoryMethod
  auto_approve_settings?: InventorySettings_AutoApproveSettings
  available_stock_settings?: InventorySettings_AvailableStockSettings
  allow_negative_stock?: boolean
}
export enum ProductionSettings_TaskOutputSource {
  TASKOUTPUT_SOURCE_UNSPECIFIED = 0,
  TASKOUTPUT_SOURCE_TYPE_IN = 1,
  TASKOUTPUT_SOURCE_LAST_PROCESS = 2,
}
export interface ProductionSettings {
  production_settings_id: string
  create_time?: string
  update_time?: string
  delete_time?: string
  group_id?: string
  station_id?: string
  task_output_source?: ProductionSettings_TaskOutputSource
}
export interface ListPrintingTemplateRequest {
  type?: PrintingTemplate_Type
  need_group_users?: boolean
  paging: common.PagingParams
}
export interface ListPrintingTemplateResponse {
  printing_templates: PrintingTemplate[]
  group_users?: { [key: string]: enterprise.GroupUser }
  paging: common.PagingResult
}
export interface GetPrintingTemplateRequest {
  printing_template_id: string
  group_id?: string
}
export interface GetPrintingTemplateResponse {
  printing_template: PrintingTemplate
}
export interface GetDefaultPrintingTemplateRequest {
  printing_template_type: PrintingTemplate_Type
  station_id: string
}
export interface GetDefaultPrintingTemplateResponse {
  printing_template: PrintingTemplate
}
export interface CreatePrintingTemplateRequest {
  printing_template: ReqCreatePrintingTemplate
}
export interface CreatePrintingTemplateResponse {
  printing_template: PrintingTemplate
}
export interface UpdatePrintingTemplateRequest {
  printing_template: PrintingTemplate
}
export interface UpdatePrintingTemplateResponse {
  printing_template: PrintingTemplate
}
export interface DeletePrintingTemplateRequest {
  printing_template_id: string
}
export interface DeletePrintingTemplateResponse {
  printing_template: PrintingTemplate
}
export interface SelectPrintingTemplateRequest {
  customer_id?: string
  sku_id?: string
  template_type: PrintingTemplate_Type
}
export interface SelectPrintingTemplateResponse {
  printing_template: PrintingTemplate
}
export interface UpdatePrintingTemplateRelationRequest {
  printing_template_id: string
  customer_ids?: string[]
  sku_ids?: string[]
}
export interface UpdatePrintingTemplateRelationResponse {
}
export interface GetPrintingTemplateRelationRequest {
  printing_template_id: string
}
export interface GetPrintingTemplateRelationResponse {
  customer_ids?: string[]
  sku_ids?: string[]
  customers?: { [key: string]: enterprise.Customer }
  skus?: { [key: string]: merchandise.GetManySkuResponse_SkuInfo }
}
export interface CreateInventorySettingsRequest {
  inventory_settings: ReqCreateInventorySettings
}
export interface CreateInventorySettingsResponse {
  inventory_settings: InventorySettings
}
export interface UpdateInventorySettingsRequest {
  inventory_settings_id: string
  inventory_settings: InventorySettings
}
export interface UpdateInventorySettingsResponse {
  inventory_settings: InventorySettings
}
export interface GetInventorySettingsRequest {
  station_id?: string
}
export interface GetInventorySettingsResponse {
  inventory_settings: InventorySettings
}
export interface CreatePurchaseSettingsRequest {
  purchase_settings: ReqCreatePurchaseSettings
}
export interface CreatePurchaseSettingsResponse {
  purchase_settings: PurchaseSettings
}
export interface UpdatePurchaseSettingsRequest {
  purchase_settings: PurchaseSettings
}
export interface UpdatePurchaseSettingsResponse {
  purchase_settings: PurchaseSettings
}
export interface GetPurchaseSettingsRequest {
}
export interface GetPurchaseSettingsResponse {
  purchase_settings: PurchaseSettings
}
export interface UpdateAppointTimeSettingsRequest {
  appoint_settings: AppointTimeSettings
}
export interface UpdateAppointTimeSettingsResponse {
  appoint_settings: AppointTimeSettings
}
export interface GetAppointTimeSettingsRequest {
}
export interface GetAppointTimeSettingsResponse {
  purchase_settings: AppointTimeSettings
}
export interface UpdateSortingSettingsRequest {
  sorting_settings: SortingSettings
}
export interface UpdateSortingSettingsResponse {
  sorting_settings: SortingSettings
}
export interface GetSortingSettingsRequest {
}
export interface GetSortingSettingsResponse {
  sorting_settings: SortingSettings
}
export interface UpdateProductionSettingsRequest {
  production_settings?: ProductionSettings
}
export interface UpdateProductionSettingsResponse {
  production_settings: ProductionSettings
}
export interface GetProductionSettingsRequest {
}
export interface GetProductionSettingsResponse {
  production_settings: ProductionSettings
}
export interface GetPrecisionSettingsRequest {
}
export interface GetPrecisionSettingsResponse {
  precision_settings: PrecisionSettings
}
export interface GetManyAppointTimePairRequest {
  pairs?: AppointTimePair[]
}
export interface GetManyAppointTimePairResponse {
  pairs: AppointTimePair[]
}
export interface GetShopRequest {
  shop_id: string
}
export interface GetShopResponse {
  shop: Shop
}
export interface ListShopRequest {
  paging: common.PagingParams
  type: Shop_Type
}
export interface ListShopResponse {
  paging: common.PagingResult
  shops: Shop[]
}
export interface CreateShopRequest {
  shop: ReqCreateShop
}
export interface CreateShopResponse {
  shop: Shop
}
export interface UpdateShopRequest {
  shop: Shop
}
export interface UpdateShopResponse {
  shop: Shop
}
export interface ListShopBannerRequest {
  paging: common.PagingParams
  type: Shop_Type
}
export interface ListShopBannerResponse {
  paging: common.PagingResult
  shop_banners: ShopBanner[]
}
export interface CreateShopBannerRequest {
  shop_banner: ReqCreateShopBanner
}
export interface CreateShopBannerResponse {
  shop_banner: ShopBanner
}
export interface UpdateShopBannerRequest {
  shop_banner: ShopBanner
}
export interface UpdateShopBannerResponse {
  shop_banner: ShopBanner
}
export interface DeleteShopBannerRequest {
  shop_banner_id: string
}
export interface DeleteShopBannerResponse {
  shop_banner: ShopBanner
}
export interface GetApplicationRelationRequest {
  application_key: string
  application_type: Application_Type
}
export interface GetApplicationRelationResponse {
  group_id?: string
  station_id?: string
  shop_id?: string
}
export interface ListApplicationRequest {
}
export interface ListApplicationResponse {
  applications: Application[]
}