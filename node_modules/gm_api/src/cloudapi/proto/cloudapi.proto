syntax = "proto3";

package ceres.cloudapi;
option java_multiple_files = true;
option go_package          = "code.guanmai.cn/back_end/ceres/cloudapi/proto;proto";

import "./google/api/annotations.proto";
import "./include/protoc-gen-validate/validate.proto";

service CloudApiService {
    // 上传文件
    // 文件放置路径 文件类型定义的前缀/YYYY-MM-DD/groupid/8位随机字符/filename
    rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
    // 获取预签名的url，前端可以通过这个url上传文件
    rpc GetPresignedURL(GetPresignedURLRequest) returns (GetPresignedURLResponse) {
        option (google.api.http) = {
            post : "/ceres/cloudapi/CloudApiService/GetPresignedURL"
        };
    }

    // sms
    rpc SendSms(SendSmsRequest) returns (SendSmsResponse);

    // 用于获取七牛云上传文件的 token。一个 token 可以上传多个文件，但是要注意两点：
    // 1. 不要超过过期时间
    // 2. 只能在 response 中的 dir_path 中上传文件
    rpc GetQiniuUploadToken(GetQiniuUploadTokenRequest) returns (GetQiniuUploadTokenResponse) {
        option (google.api.http) = {
            post : "/ceres/cloudapi/CloudApiService/GetQiniuUploadToken"
        };
    }
}

enum CloudType {
    CLOUD_TYPE_UNSPECIFIED = 0;

    CLOUD_TYPE_TENCENT = 1;
    CLOUD_TYPE_ALIBABA = 2;
    CLOUD_TYPE_QINIU   = 3;
}

enum BucketType {
    BUCKET_TYPE_UNSPECIFIED = 0;

    BUCKET_TYPE_GMFILE = 1;  // 默认存储文件的桶
}

// FileType 表示文件类型，命名格式为 "FILE_TYPE" + 模块名 + 类型
enum FileType {
    FILE_TYPE_UNSPECIFIED = 0;

    FILE_TYPE_MERCHANDISE_CATEGORY_DEFAULT_IMAGE = 10;  // 系统自带的分类图片
    FILE_TYPE_MERCHANDISE_CATEGORY_IMAGE         = 11;  // 用户上传的分类图片
    FILE_TYPE_MERCHANDISE_SKU_IMAGE              = 12;  // 用户上传的SKU图片
    FILE_TYPE_MERCHANDISE_SSU_IMAGE              = 13;  // 用户上传的SSU图片
    FILE_TYPE_MERCHANDISE_SKU_IMPORT             = 14;  // 批量导入SKU EXCEL

    FILE_TYPE_ENTERPRISE_LOGO            = 20;  // 企业 LOGO 图片
    FILE_TYPE_ENTERPRISE_CUSTOMER_IMPORT = 21;  // 批量导入商户 EXCEL
    FILE_TYPE_ENTERPRISE_CUSTOMER_EXPORT = 22;  // 批量导出商户 EXCEL

    FILE_TYPE_DELIVERY_RECEIVE_IMAGE = 30;

    FILE_TYPE_PREFERENCE_BANNER_IMAGE    = 40;  // 商城 banner 图片
    FILE_TYPE_PREFERENCE_SHOP_LOGO_IMAGE = 41;  // 店铺 LOGO 图片
    FILE_TYPE_PREFERENCE_SHOP_REFERENCE  = 42;  // 店铺帮助手册图片

    FILE_TYPE_ASYNCTASK_EXPORT = 100;

    FILE_TYPE_PRODUCTION_BOM_IMPORT = 150;  // bom导入

    FILE_TYPE_PURCHASE_PURCHASE_TASK_EXPORT      = 200;
    FILE_TYPE_PURCHASE_PURCHASE_SHEET_EXPORT     = 201;
    FILE_TYPE_PURCHASE_INQUIRY_PRICE_IMPORT_TMPL = 202;
    FILE_TYPE_PURCHASE_INQUIRY_PRICE_IMPORT      = 203;
    FILE_TYPE_PURCHASE_INQUIRY_PRICE_IMPORT_ERR  = 204;

    // 售后
    FILE_TYPE_AFTER_SALE_ORDER_EXPORT  = 300;  // 售后订单导出 EXCEL
    FILE_TYPE_AFTER_SALE_SHEET_EXPORT  = 301;  // 售后分析报表导出 EXCEL
    FILE_TYPE_AFTER_SALE_TASK_EXPORT   = 302;  // 售后取货任务导出 EXCEL
    FILE_TYPE_AFTER_SALE_DETAIL_EXPORT = 303;  // 订单售后明细(商品)报表导出 EXCEL

    // 商户结算
    FILE_TYPE_FINANCE_SETTLE_SHEET_EXPORT    = 400;  // 结款单导出
    FILE_TYPE_FINANCE_ACCOUNT_BALANCE_EXPORT = 401;  // 余额导出
    FILE_TYPE_FINANCE_FLOW_EXPORT            = 402;  // 交易流水导出
}

enum SmsType {
    SMS_TYPE_UNSPECIFIED = 0;

    SMS_TYPE_VERIFICATION_CODE = 49688;
}

message SmsConfig {
}

message TencentConfig {
    message FileConfig {
        FileType file_type = 1;
        string prefix      = 2;  // FileType前缀
    }

    message BucketConfig {
        // FileType file_type  = 1;
        string secret_id  = 2;
        string secret_key = 3;
        string app_id     = 4;
        string endpoint   = 5;  // 上传url
        string base_url   = 6;  // 下载url

        map<int32, FileConfig> file_configs = 7;  // 桶下的文件配置
    }

    message SmsConfig {
        SmsType sms_type   = 1;
        string secret_id   = 2;
        string secret_key  = 3;
        string app_id      = 4;
        string sign        = 5;
        string endpoint    = 6;
        string template_id = 7;
    }

    map<int32, BucketConfig> bucket_configs = 1;  // key FileType
    map<int32, SmsConfig> sms_configs       = 2;  // key SmsType
}

message UploadFileRequest {
    CloudType cloud_type = 1 [ (validate.rules).message = {required: true} ];
    FileType file_type   = 2 [ (validate.rules).message = {required: true} ];
    string filename      = 3 [(validate.rules).string = { min_len: 1 }];  // 最终的文件名，不需要加随机数保证唯一
    bytes data           = 4;
}

message UploadFileResponse {
    string url = 1;
}

message GetPresignedURLRequest {
    CloudType cloud_type = 1 [ (validate.rules).message = {required: true} ];
    FileType file_type   = 2 [ (validate.rules).message = {required: true} ];
    string filename      = 3 [(validate.rules).string = { min_len: 1 }];  // 最终的文件名，不需要加随机数保证唯一
}

message GetPresignedURLResponse {
    string presigned_url = 1;  // 带有签名信息的url
    string download_url  = 2;  // 下载文件用的url
}

message SendSmsRequest {
    CloudType cloud_type = 1;
    SmsType sms_type     = 2;

    repeated string phone_numbers = 3;
    repeated string parameters    = 4;
}

message SendSmsResponse {
}

message GetQiniuUploadTokenRequest {
    FileType file_type = 1 [ (validate.rules).message = {required: true} ];
}
message GetQiniuUploadTokenResponse {
    string upload_token = 1 [(validate.rules).string = { min_len: 1 }];
    string dir_path     = 2 [(validate.rules).string = { min_len: 1 }];  // 文件上传的目录路径，比如 "foo/bar/baz/"
    uint64 expire_time  = 3 [(validate.rules).uint64 = { gt: 1 }];       // token 在多长时间后会过期，单位是毫秒。客户端需要注意网络传输本身就会带来一些时间的损耗。
}
